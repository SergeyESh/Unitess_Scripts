# Поверяемый прибор: Источник питания АКИП-1101А, АКИП-1102А, АКИП-1103А, АКИП-1104А, АКИП-1105А   
# Поверяемые параметры: (VDC), (IDC), (PVDC), (PIDC), (INSTB_U_Upit), (INSTB_I-Upit), (INSTB_U_Inagr), (INSTB_I_Unagr)
#      
#
# Поверяемые параметры: 
#         погрешность формирования выходного напряжения (VDC) и силы выходного тока (IDC)
#         пульсации выходного напряжения (PVDC) и выходного тока (PIDC)
#         нестабильности при изменении напряжения питающей сети выходного напряжения (INSTB_U_Upit) и тока (INSTB_I_Upit) 
#         нестабильность выходного напряжения при изменении тока нагрузки (INSTB_U_Inagr)
#         нестабильность выходного тока при изменении выходного напряжения (INSTB_I_Unagr)   
#         
#
####################################################################################################################################################### 
###############################################################  S   T   A   R   T   ##################################################################
#######################################################################################################################################################
#
#/ Скрипт для поверки приборов АКИП-1101А, АКИП-1102А, АКИП-1103А, АКИП-1104А, АКИП-1105А
#/<-

#    Выбор поверяемого прибора
call MODE_PRIBOR_CHOICE

#    Выбор нагрузки
call LOAD_CHOISE

#    Выбор типа поверки
call MODE_POVERKA_CHOICE

#    Установка стандартных значений для данного скрипта  (DEFINE)
call START_DEFINE

# Данные для отчета:
call MODE_INPUT_TABLE

#    Внешний осмотр поверяемого устройства
Call VISUAL_CHECK

# Опробование устройства
Call OPROBIROVANIE


#####################################################################################################################################################################
##############################################################   D   O   T   S   ####################################################################################
#####################################################################################################################################################################

##################################################################################################################################################################
#/    Определение абсолютной погрешности формирования выходного постоянного напряжения.         
##################################################################################################################################################################

#                        Напряжение СИ от U_max, В;    Ток СИ от Imax, А;        Ток нагрузки от Imax, А;        Интервал жидания, с;    
call VDC1                1                            1                        0,8                                      10k
call VDC1                0,9                            1                        0,8                                      10k
call VDC1                0,7                            1                        0,8                                      10k
call VDC1                0,5                            1                        0,8                                      10k
call VDC1                0,3                            1                        0,8                                      10k
call VDC1                0,1                            1                        0,8                                      10k

###################################################################################################################################################################
#/    Определение нестабильности выходного напряжения при изменении напряжения питающей сети.
###################################################################################################################################################################

#                        Напряжение СИ от Umax, В;    Ток СИ от Imax, А;        Ток нагрузки от Imax, А;        Интервал жидания, с;    Напряжение питания от U_pit, В;        
call INSTB_U_Upit1        0.1                            1                        0,80                            300k                    1,1                                        
call INSTB_U_Upit1        0.1                            1                        0,80                            300k                    0,9                                        
call INSTB_U_Upit1        1                            1                        0,80                            300k                    1,1                                        
call INSTB_U_Upit1        1                            1                        0,80                            300k                    0,9                                        

###################################################################################################################################################################
#/    Определение нестабильности выходного напряжения при изменении тока нагрузки.             
###################################################################################################################################################################

#                        Напряжение СИ от U_max, В;    Ток СИ от Imax, А;        Ток нагрузки от Imax, А;        Интервал жидания, с;    Ток нагрузки от Imax 2, А;
call INSTB_U_Inagr1        1                            1                        0,80                            300k                                                0,1

###################################################################################################################################################################
#/    Определение пульсации выходного напряжения.             
###################################################################################################################################################################

#                        Напряжение СИ от U_max, В;                            Ток нагрузки от Imax, А;        Интервал жидания, с;
call PVDC1               1                                                    0,80                            300k
call PVDC1               1                                                    0,05                                300k

###################################################################################################################################################################
#/    Определение абсолютной погрешности формирования силы выходного тока.             
###################################################################################################################################################################

#                        Ток СИ от Imax, А;        Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;        Интервал жидания, с;
call IDC1                0.1                        1                            1.05                            60k
call IDC1                0,3                        1                            1.05                            60k
call IDC1                0,5                        1                            1.05                            60k
call IDC1                0,7                        1                            1.05                            60k
call IDC1                0,9                        1                            1.05                            60k
call IDC1                1                        1                            1.05                            60k

###################################################################################################################################################################
#/ Определение нестабильности выходного тока при изменении напряжения питающей сети.             
###################################################################################################################################################################

#                        Ток СИ от Imax, А;        Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;        Интервал жидания, с;    Напряжение питания от U_pit, В;        
call INSTB_I_Upit1      1                        1                            1.05                            300k                    1,1                                
call INSTB_I_Upit1        1                        1                            1.05                            300k                    0,9                                

###################################################################################################################################################################
#/    Определение нестабильности выходного тока при изменении выходного напряжения.            
###################################################################################################################################################################

#                        Ток СИ от Imax, А;        Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;        Интервал жидания, с;    Выходное напряжение от U_max 2, В;    
call INSTB_I_Unagr1     1                        1                            1.05                            300k                    0.1                                    

###################################################################################################################################################################
#/    Определение пульсации выходного тока.                                                        #uhesh(PIDC1)             
###################################################################################################################################################################

#                        Ток СИ от Imax, А;        Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;        Интервал жидания, с;
#call PIDC1               1                        1                            1.05                            300k
#call PIDC1               1                        0,1                            1.05                            300k



##################################################################################################################################################################
#/    Определение абсолютной погрешности формирования выходного постоянного напряжения.     1104/1105_2                    #uhesh(VDC2)
##################################################################################################################################################################

#                        Напряжение СИ от U_max, В;    Ток СИ от Imax, А;        Ток нагрузки от Imax, А;        Интервал жидания, с;    
call VDC2                1                            1                        0,8                            10k
call VDC2                0,9                            1                        0,8                            10k
call VDC2                0,7                            1                        0,8                            10k
call VDC2                0,5                            1                        0,8                            10k
call VDC2                0,3                            1                        0,8                            10k
call VDC2                0,1                            1                        0,8                            10k

###################################################################################################################################################################
#/    Определение нестабильности выходного напряжения при изменении напряжения питающей сети.            1104/1105_2        #uhesh(U_Upit2)
###################################################################################################################################################################

#                        Напряжение СИ от Umax, В;    Ток СИ от Imax, А;        Ток нагрузки от Imax, А;        Интервал жидания, с;    Напряжение питания от U_pit, В;        
call INSTB_U_Upit2        0.1                            1                        0,8                            300k                    1,1                                        
call INSTB_U_Upit2        0.1                            1                        0,8                            300k                    0,9                                        
call INSTB_U_Upit2        1                            1                        0,8                            300k                    1,1                                        
call INSTB_U_Upit2        1                            1                        0,8                            300k                    0,9                                        

###################################################################################################################################################################
#/    Определение нестабильности выходного напряжения при изменении тока нагрузки.                         1104/1105_2        #uhesh(U_Inagr2)
###################################################################################################################################################################

#                        Напряжение СИ от U_max, В;    Ток СИ от Imax, А;        Ток нагрузки от Imax, А;        Интервал жидания, с;    Ток нагрузки от Imax 2, А;
call INSTB_U_Inagr2        1                            1                        0,8                            300k                                                0.1

###################################################################################################################################################################
#/    Определение пульсации выходного напряжения.                                                             1104/1105_2        #uhesh(PVDC2)
###################################################################################################################################################################

#                        Напряжение СИ от U_max, В;                            Ток нагрузки от Imax, А;        Интервал жидания, с;
call PVDC2               1                                                    0,8                            300k
call PVDC2               1                                                    0.05                                300k

###################################################################################################################################################################
#/    Определение абсолютной погрешности формирования силы выходного тока.                                 1104/1105_2        #uhesh(IDC2)
###################################################################################################################################################################

#                        Ток СИ от Imax, А;        Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;        Интервал жидания, с;
call IDC2                0.1                        1                            1.05                            60k
call IDC2                0,3                        1                            1.05                            60k
call IDC2                0,5                        1                            1.05                            60k
call IDC2                0,7                        1                            1.05                            60k
call IDC2                0,9                        1                            1.05                            60k
call IDC2                1                        1                            1.05                            60k

###################################################################################################################################################################
#/ Определение нестабильности выходного тока при изменении напряжения питающей сети.                     1104/1105_2        #uhesh(I_Upit2)
###################################################################################################################################################################

#                        Ток СИ от Imax, А;        Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;        Интервал жидания, с;    Напряжение питания от U_pit, В;        
call INSTB_I_Upit2        1                        1                            1.05                            300k                    1,1                                
call INSTB_I_Upit2        1                        1                            1.05                            300k                    0,9                                


###################################################################################################################################################################
#/    Определение нестабильности выходного тока при изменении выходного напряжения.                        1104/1105_2        #uhesh(I_Unagr2)
###################################################################################################################################################################

#                        Ток СИ от Imax, А;        Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;        Интервал жидания, с;    Выходное напряжение от U_max 2, В;    
call INSTB_I_Unagr2     1                        1                            1.05                            300k                    0.1                                    

###################################################################################################################################################################
#/    Определение пульсации выходного тока.                    1104/1105_2                        #uhesh(PIDC2)             
###################################################################################################################################################################

#                        Ток СИ от Imax, А;        Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;        Интервал жидания, с;
#call PIDC2               1                        1                            1.05                            300k
#call PIDC2               1                        0,1                            1.05                            300k



##################################################################################################################################################################
#/    Определение абсолютной погрешности формирования выходного постоянного напряжения.     1104/1105_3                    #uhesh(VDC3)
##################################################################################################################################################################

#                        Напряжение СИ от U_max, В;    Ток СИ от Imax, А;        Ток нагрузки от Imax, А;        Интервал жидания, с;    
call VDC3                1                            1                        0,8                            10k
call VDC3                0,9                            1                        0,8                            10k
call VDC3                0,7                            1                        0,8                            10k
call VDC3                0,5                            1                        0,8                            10k
call VDC3                0,3                            1                        0,8                            10k
call VDC3                0,1                            1                        0,8                            10k

###################################################################################################################################################################
#/    Определение нестабильности выходного напряжения при изменении напряжения питающей сети.            1104/1105_3        #uhesh(U_Upit3)
###################################################################################################################################################################

#                        Напряжение СИе от Umax, В;    Ток СИ от Imax, А;        Ток нагрузки от Imax, А;        Интервал жидания, с;    Напряжение питания от U_pit, В;        
call INSTB_U_Upit3        0.1                            1                        0,8                            300k                    1,1                                        
call INSTB_U_Upit3        0.1                            1                        0,8                            300k                    0,9                                        
call INSTB_U_Upit3        1                            1                        0,8                            300k                    1,1                                        
call INSTB_U_Upit3        1                            1                        0,8                            300k                    0,9                                        

###################################################################################################################################################################
#/    Определение нестабильности выходного напряжения при изменении тока нагрузки.                         1104/1105_3        #uhesh(U_Inagr3)
###################################################################################################################################################################

#                        Напряжение СИ от U_max, В;    Ток СИ от Imax, А;        Ток нагрузки от Imax, А;        Интервал жидания, с;    Ток нагрузки от Imax 2, А;
call INSTB_U_Inagr3        1                            1                        0,8                            300k                                                0.1

###################################################################################################################################################################
#/    Определение пульсации выходного напряжения.                                                             1104/1105_3        #uhesh(PVDC3)
###################################################################################################################################################################

#                        Напряжение СИ от U_max, В;                            Ток нагрузки от Imax, А;        Интервал жидания, с;
call PVDC3               1                                                    0,8                            300k
call PVDC3               1                                                    0.05                                300k

###################################################################################################################################################################
#/    Определение абсолютной погрешности формирования силы выходного тока.                                 1104/1105_3        #uhesh(IDC3)
###################################################################################################################################################################

#                        Ток СИ от Imax, А;        Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;        Интервал жидания, с;
call IDC3                0.1                        1                            1.05                            60k
call IDC3                0,3                        1                            1.05                            60k
call IDC3                0,5                        1                            1.05                            60k
call IDC3                0,7                        1                            1.05                            60k
call IDC3                0,9                        1                            1.05                            60k
call IDC3                1                        1                            1.05                            60k

###################################################################################################################################################################
#/ Определение нестабильности выходного тока при изменении напряжения питающей сети.                     1104/1105_3        #uhesh(I_Upit3)
###################################################################################################################################################################

#                        Ток СИ от Imax, А;        Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;        Интервал жидания, с;    Напряжение питания от U_pit, В;        
call INSTB_I_Upit3        1                        1                            1.05                            300k                    1,1                                
call INSTB_I_Upit3        1                        1                            1.05                            300k                    0,9                                

###################################################################################################################################################################
#/    Определение нестабильности выходного тока при изменении выходного напряжения.                        1104/1105_3        #uhesh(I_Unagr3)
###################################################################################################################################################################

#                        Ток СИ от Imax, А;        Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;        Интервал жидания, с;    Выходное напряжение от U_max 2, В;    
call INSTB_I_Unagr3     1                        1                            1.05                            300k                    0.1                                    


###################################################################################################################################################################
#/    Определение пульсации выходного тока.                    1104/1105_3                        #uhesh(PIDC3)             
###################################################################################################################################################################

#                        Ток СИ от Imax, А;        Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;        Интервал жидания, с;
#call PIDC3               1                        1                            1.05                            300k
#call PIDC3               1                        0,1                            1.05                            300k


#########################################################################################################################################################################
#########   E   N   D   ###############################################################################################################################
#########################################################################################################################################################################

# Функция сброса всех приборов в изначальное состояние
call RESET_ALL
     if TestResult
          report result "годным"
     else
          report result "не годным"
     endif

EndScript 


#########################################################################################################################################################################
########   F   U   N   C   T   I   O   N   S   ##################################################################################################################################
#########################################################################################################################################################################

# Функция для выбора поверяемого прибора
Function MODE_PRIBOR_CHOICE
message mem_1 selectmenu defvalue=1 "Выберите поверяемый прибор:\n 1. АКИП-1101 \n 2. АКИП-1102 \n 3. АКИП-1103 \n 4. АКИП-1104 \n 5. АКИП-1105"
    CaseOne
    when mem_1=1
            Tree disable VDC2; VDC3; U_Upit2; U_Upit3; U_Inagr2; U_Inagr3; PVDC2; PVDC3; IDC2; IDC3; I_Upit2; I_Upit3; I_Unagr2; I_Unagr3
            define I_max1                        5                            #    Максимальный выходной ток
            define U_max1                        20                            #    Максимальное выходное напряжение
            define VDC_coe                        0.002                        #    коэффициент для пересчета погрешности
            define VDC_con                        0.05                            #    коэффициент для пересчета погрешности
            define VDCpit_coe                    0                            #    коэффициент для пересчета погрешности
            define VDCpit_con                    25m                            #    коэффициент для пересчета погрешности
            define VDCnagr_coe                    0                            #    коэффициент для пересчета погрешности
            define VDCnagr_con                    70m                            #    коэффициент для пересчета погрешности
            define VDCpuls_coe                    0                            #    коэффициент для пересчета погрешности
            define VDCpuls_con                    120m                            #    коэффициент для пересчета погрешности
            define IDC_coe                        0.005                        #    коэффициент для пересчета погрешности
            define IDC_con                        0,006                        #    коэффициент для пересчета погрешности
            define IDCpit_coe                    0                            #    коэффициент для пересчета погрешности
            define IDCpit_con                    50m                            #    коэффициент для пересчета погрешности
            define IDCnagr_coe                    0                            #    коэффициент для пересчета погрешности
            define IDCnagr_con                    20m                            #    коэффициент для пересчета погрешности
            define IDCpuls_coe                    0                            #    коэффициент для пересчета погрешности
            define IDCpuls_con                    10m                            #    коэффициент для пересчета погрешности
            define Model_SI_Report                 АКИП-1101А                     #    Модель поверяемого источника питания
            define Interface                     false                        #    Наличие интерфейса у модели
            define Model_SI_Driver                 Akip1101A                     #    Модель поверяемого источника питания
        report Imax    "I_max1 А"
        report Umax    "U_max1 В"
    
    when mem_1=2
            Tree disable VDC2; VDC3; U_Upit2; U_Upit3; U_Inagr2; U_Inagr3; PVDC2; PVDC3; IDC2; IDC3; I_Upit2; I_Upit3; I_Unagr2; I_Unagr3
            define I_max1                        3                            #    Максимальный выходной ток
            define U_max1                        36                            #    Максимальное выходное напряжение
            define VDC_coe                        0.002                        #    коэффициент для пересчета погрешности
            define VDC_con                        0.05                            #    коэффициент для пересчета погрешности
            define VDCpit_coe                    0                            #    коэффициент для пересчета погрешности
            define VDCpit_con                    25m                            #    коэффициент для пересчета погрешности
            define VDCnagr_coe                    0                            #    коэффициент для пересчета погрешности
            define VDCnagr_con                    70m                            #    коэффициент для пересчета погрешности
            define VDCpuls_coe                    0                            #    коэффициент для пересчета погрешности
            define VDCpuls_con                    150m                            #    коэффициент для пересчета погрешности
            define IDC_coe                        0.005                        #    коэффициент для пересчета погрешности
            define IDC_con                        0,006                        #    коэффициент для пересчета погрешности
            define IDCpit_coe                    0                            #    коэффициент для пересчета погрешности
            define IDCpit_con                    50m                            #    коэффициент для пересчета погрешности
            define IDCnagr_coe                    0                            #    коэффициент для пересчета погрешности
            define IDCnagr_con                    20m                            #    коэффициент для пересчета погрешности
            define IDCpuls_coe                    0                            #    коэффициент для пересчета погрешности
            define IDCpuls_con                    10m                            #    коэффициент для пересчета погрешности
            define Model_SI_Report                 АКИП-1102A                     #    Модель поверяемого источника питания
            define Interface                     false                        #    Наличие интерфейса у модели
            define Model_SI_Driver                 Akip1102A                     #    Модель поверяемого источника питания
    report Imax    "I_max1 А"
    report Umax    "U_max1 В"
    
    when mem_1=3
            Tree disable VDC2; VDC3; U_Upit2; U_Upit3; U_Inagr2; U_Inagr3; PVDC2; PVDC3; IDC2; IDC3; I_Upit2; I_Upit3; I_Unagr2; I_Unagr3
            define I_max1                        1.6                            #    Максимальный выходной ток
            define U_max1                        60                            #    Максимальное выходное напряжение
            define VDC_coe                        0.002                        #    коэффициент для пересчета погрешности
            define VDC_con                        0.05                            #    коэффициент для пересчета погрешности
            define VDCpit_coe                    0                            #    коэффициент для пересчета погрешности
            define VDCpit_con                    25m                            #    коэффициент для пересчета погрешности
            define VDCnagr_coe                    0                            #    коэффициент для пересчета погрешности
            define VDCnagr_con                    70m                            #    коэффициент для пересчета погрешности
            define VDCpuls_coe                    0                            #    коэффициент для пересчета погрешности
            define VDCpuls_con                    180m                            #    коэффициент для пересчета погрешности
            define IDC_coe                        0.005                        #    коэффициент для пересчета погрешности
            define IDC_con                        0,006                        #    коэффициент для пересчета погрешности
            define IDCpit_coe                    0                            #    коэффициент для пересчета погрешности
            define IDCpit_con                    50m                            #    коэффициент для пересчета погрешности
            define IDCnagr_coe                    0                            #    коэффициент для пересчета погрешности
            define IDCnagr_con                    20m                            #    коэффициент для пересчета погрешности
            define IDCpuls_coe                    0                            #    коэффициент для пересчета погрешности
            define IDCpuls_con                    10m                            #    коэффициент для пересчета погрешности
            define Model_SI_Report                 АКИП-1103A                     #    Модель поверяемого источника питания
            define Interface                     false                        #    Наличие интерфейса у модели
            define Model_SI_Driver                 Akip1103A                     #    Модель поверяемого источника питания
    report Imax    "I_max1 А"
    report Umax    "U_max1 В"
    
    when mem_1=4
    message "Установите поверку по первому диапазону источника"
            Tree enable VDC2; VDC3; U_Upit2; U_Upit3; U_Inagr2; U_Inagr3; PVDC2; PVDC3; IDC2; IDC3; I_Upit2; I_Upit3; I_Unagr2; I_Unagr3
            define I_max1                        5                            #    Максимальный выходной ток
            define U_max1                        16                            #    Максимальное выходное напряжение
            define I_max2                        3                            #    Максимальный выходной ток
            define U_max2                        27                            #    Максимальное выходное напряжение
            define I_max3                        2.2                            #    Максимальный выходной ток
            define U_max3                        36                            #    Максимальное выходное напряжение
            define VDC_coe                        0.005                        #    коэффициент для пересчета погрешности
            define VDC_con                        0.05                        #    коэффициент для пересчета погрешности
            define VDCpit_coe                    0                            #    коэффициент для пересчета погрешности
            define VDCpit_con                    4m                            #    коэффициент для пересчета погрешности
            define VDCnagr_coe                    0                            #    коэффициент для пересчета погрешности
            define VDCnagr_con                    30m                            #    коэффициент для пересчета погрешности
            define VDCpuls_coe                    0                            #    коэффициент для пересчета погрешности
            define VDCpuls_con                    55m                            #    коэффициент для пересчета погрешности
            define IDC_coe                        0.005                        #    коэффициент для пересчета погрешности
            define IDC_con                        0,005                        #    коэффициент для пересчета погрешности
            define IDCpit_coe                    0                            #    коэффициент для пересчета погрешности
            define IDCpit_con                    10m                            #    коэффициент для пересчета погрешности
            define IDCnagr_coe                    0                            #    коэффициент для пересчета погрешности
            define IDCnagr_con                    10m                            #    коэффициент для пересчета погрешности
            define IDCpuls_coe                    0                            #    коэффициент для пересчета погрешности
            define IDCpuls_con                    10m                            #    коэффициент для пересчета погрешности
            define Model_SI_Report                АКИП-1104A                    #    Модель поверяемого источника питания
            define Interface                     false                        #    Наличие интерфейса у модели
            define Model_SI_Driver                 Akip1104A                     #    Модель поверяемого источника питания
        report Imax    "I_max1 А; I_max2 А; I_max3 А"
        report Umax    "U_max1 В; U_max2 В; U_max3 В"
    
    when mem_1=5
    message "Установите поверку по первому диапазону источника"
            Tree enable VDC2; VDC3; U_Upit2; U_Upit3; U_Inagr2; U_Inagr3; PVDC2; PVDC3; IDC2; IDC3; I_Upit2; I_Upit3; I_Unagr2; I_Unagr3
            define I_max1                        5                            #    Максимальный выходной ток
            define U_max1                        16                            #    Максимальное выходное напряжение
            define I_max2                        3                            #    Максимальный выходной ток
            define U_max2                        27                            #    Максимальное выходное напряжение
            define I_max3                        2.2                            #    Максимальный выходной ток
            define U_max3                        36                            #    Максимальное выходное напряжение
            define VDC_coe                        0.005                        #    коэффициент для пересчета погрешности
            define VDC_con                        0.05                        #    коэффициент для пересчета погрешности
            define VDCpit_coe                    0                            #    коэффициент для пересчета погрешности
            define VDCpit_con                    4m                            #    коэффициент для пересчета погрешности
            define VDCnagr_coe                    0                            #    коэффициент для пересчета погрешности
            define VDCnagr_con                    30m                            #    коэффициент для пересчета погрешности
            define VDCpuls_coe                    0                            #    коэффициент для пересчета погрешности
            define VDCpuls_con                    55m                            #    коэффициент для пересчета погрешности
            define IDC_coe                        0.005                        #    коэффициент для пересчета погрешности
            define IDC_con                        0,005                        #    коэффициент для пересчета погрешности
            define IDCpit_coe                    0                            #    коэффициент для пересчета погрешности
            define IDCpit_con                    10m                            #    коэффициент для пересчета погрешности
            define IDCnagr_coe                    0                            #    коэффициент для пересчета погрешности
            define IDCnagr_con                    10m                            #    коэффициент для пересчета погрешности
            define IDCpuls_coe                    0                            #    коэффициент для пересчета погрешности
            define IDCpuls_con                    10m                            #    коэффициент для пересчета погрешности
            define Model_SI_Report                 АКИП-1105A                    #    Модель поверяемого источника питания
            define Interface                     false                        #    Наличие интерфейса у модели
            define Model_SI_Driver                 Akip1105A                     #    Модель поверяемого источника питания
        report Imax    "I_max1 А; I_max2 А; I_max3 А"
        report Umax    "U_max1 В; U_max2 В; U_max3 В"
            
    EndCase
    
    define MeasureVDC                        false                        #    Наличие пункта поверки внутреннего вольтметра
    define MeasureIDC                        false                        #    Наличие пункта поверки внутреннего амперметра
    report Si        "Источник питания постоянного тока импульсный Model_SI_Report"
EndFunction

#Выбор модели нагрузки
Function LOAD_CHOISE
DriverSet    Keithley7001 OPEN_ALL                                     #    разомкнуть все 
    math mem_1000 = I_max1
    math mem_2000 = U_max1
#    if (mem_1000<=360) and (mem_2000<=60)
#        define LOAD_MODEL                        Akip1310                #    Используемая нагрузка(ки)
#        define Load_Max_Curr                    360                        #    Максимально допустимый ток нагрузки
#        define Load_Max_Volt                    60                        #    Максимально допустимое напряжение на нагрузке
#        define Load_Max_Power                    1,8k                    #    Максимальная рассеиваемая мощность
#            if    mem_1000 <= 30                                                            #    Максимальный ток меньше 30
#                DriverSet    Keithley7001 CLOSE = [2;4;7]                              #    замкнуть выходы 2, 4, 7 для установки предела измерений в 30А
#            Else
#                DriverSet    Keithley7001 CLOSE = [3;4;7]                              #    замкнуть выходы 3, 4, 7 для установки предела измерений в 300А
#            Endif
#    else
#        if (mem_1000<=36) and (mem_2000<=300)
#            define LOAD_MODEL                    Akip1320                #    Используемая нагрузка(ки)
#            define Load_Max_Curr                36                        #    Максимально допустимый ток нагрузки
#            define Load_Max_Volt                300                        #    Максимально допустимое напряжение на нагрузке
#            define Load_Max_Power                3,6k                    #    Максимальная рассеиваемая мощность
#                if    mem_1000 <= 30
#                    DriverSet    Keithley7001 CLOSE = [2;5;6]                              #    замкнуть выходы 2, 5, 6 для установки предела измерений в 30А
#                Else
#                    DriverSet    Keithley7001 CLOSE = [3;5;6]                              #    замкнуть выходы 3, 5, 6 для установки предела измерений в 300А
#                Endif
#        else
#            message mem_1 defvalue=1 "Электронная нагрузка не обеспечивает требуемую нагрузку по току и/или напряжению. Выберите используемую нагрузку: \n 1 - АКИП-1310 \n 2 - АКИП-1320 \n 3 - Остановить работу"
            message mem_1 defvalue=1 "Выберите используемую нагрузку: \n 1 - АКИП-1310 \n 2 - АКИП-1320 \n 3 - Остановить работу"
            if mem_1 = 1
                define LOAD_MODEL                Akip1310                #    Используемая нагрузка(ки)
                define Load_Max_Curr            360                        #    Максимально допустимый ток нагрузки
                define Load_Max_Volt            60                        #    Максимально допустимое напряжение на нагрузке
                define Load_Max_Power            1,8k                    #    Максимальная рассеиваемая мощность
                if    mem_1000 <= 30                                                            #    Максимальный ток меньше 30
                    DriverSet    Keithley7001 CLOSE = [2;4;7]                              #    замкнуть выходы 2, 4, 7 для установки предела измерений в 30А
                Else
                    DriverSet    Keithley7001 CLOSE = [3;4;7]                              #    замкнуть выходы 3, 4, 7 для установки предела измерений в 300А
                Endif
            endif
            
            if mem_1 = 2
                define LOAD_MODEL                Akip1320                #    Используемая нагрузка(ки)
                define Load_Max_Curr            36                        #    Максимально допустимый ток нагрузки
                define Load_Max_Volt            300                        #    Максимально допустимое напряжение на нагрузке
                define Load_Max_Power            3,6k                    #    Максимальная рассеиваемая мощность
                if    mem_1000 <= 30
                    DriverSet    Keithley7001 CLOSE = [2;5;6]                              #    замкнуть выходы 2, 5, 6 для установки предела измерений в 30А
                Else
                    DriverSet    Keithley7001 CLOSE = [3;5;6]                              #    замкнуть выходы 3, 5, 6 для установки предела измерений в 300А
                Endif
            endif
            
            if mem_1 = 3
            endscript                                                    #    Остановить скрипт
            endif
        #endif
        
    #endif
    DriverSet    LOAD_MODEL             RESET
EndFunction

# Функция для выбора типа поверки
Function MODE_POVERKA_CHOICE
message mem_1 selectmenu defvalue=2 "Выберите тип поверки :\n 1. Первичная \n 2. Периодическая" 
    CaseOne
    when    mem_1 = 1    
        Tree enable    PIDC1;    PIDC2;    PIDC3
    report Vid_poverki    "Первичная"
    when    mem_1 = 2 
        Tree Disable    PIDC1;    PIDC2;    PIDC3
    report Vid_poverki    "Периодическая"
    
    endcase

EndFunction

# Функция для установки входных данных
Function START_DEFINE
    define METODIKA_OSMOTR                 7.1                    #    № пункта для "Внешнего осмотра"
    define METODIKA_OPROB                 7.2                    #    № пункта для "Опробования"
    define VOLTAGE_METER                Keithley2002            #    Эталон для измерения напряжения
    define CURRENT_METER                Instek71000                #    Эталон для измерения силы тока
    define PULS_METER                    Akip2402                #    Эталон для измерения пульсаций
    message "На вольтметре АКИП-2402 нажмите кнопку 'Rem' для измерения уровня пульсаций" 
    define POWER_SUPPLY                    Akip1202                #    Эталонный источник питания (Латер)
    define CHANEL_NOM                    1                        #    Количество каналов
    define U_pit                        220                        #    Напряжение питания прибора
    define RegNum                        71239-18                #    Номер в Госреестре
    report    Num        "RegNum"
    define METODIKA_POVERKI             ПР-09-2018МП                                            #    Методика поверки
    report METPOV        "METODIKA_POVERKI"

EndFunction

#Внесение данных условий поверки
function MODE_INPUT_TABLE
    #Создание таблицы для условий поверки
    table clear                                                                                     # очистка настройки наблицы 
    table row "Температура окружающего воздуха, С" checksyntax defvalue=20,0
    table row "Атмосферное давление, кПа" checksyntax defvalue=98,5
    table row "Относительная влажность окружающего воздуха, %" checksyntax defvalue=45
    table show mem_1000                                                                              # вывести меню
    # перенос значений из массива в переменные
    math mem_1001 = mem_1000[1]
    math mem_1002 = mem_1000[2]
    math mem_1003 = mem_1000[3]
    # занесение данных в протокол WORD
    report TEMP            mem_1001
    report PRESS        mem_1002
    report HUM            mem_1003
EndFunction

# Внешний осмотр поверяемого устройства
function VISUAL_CHECK
    message mem_1005 selectmenu_str defvalue="Соответствует" "Внешний осмотр\n Соответствует \n Не соответствует"
        if mem_1005="Соответствует"
        report VISUAL_CHECK "Соответствует"
    else
        report VISUAL_CHECK "Не соответствует"
        report result "не годным"
        Endscript
    endif
endfunction

#Опробование прибора
function OPROBIROVANIE
    message mem_1006 selectmenu_str defvalue="Соответствует" "Опробование\n Соответствует \n Не соответствует"
        if mem_1006="Соответствует"
        report OPROBIROVANIE "Соответствует"
    else
        report OPROBIROVANIE "Не соответствует"
        report result "не годным"
        EndScript
    endif
endfunction

############ Функция сброса всех приборов ##############################################################################################################################
Function RESET_ALL

DriverSet    LOAD_MODEL             RESET
DriverSet    Keithley7001         RESET
DriverSet    VOLTAGE_METER         RESET
DriverSet    CURRENT_METER         RESET
DriverSet    PULS_METER             RESET
DriverSet    POWER_SUPPLY         V = 220

EndFunction



############ Определение основной погрешности установки выходного напряжения постоянного тока #########################
#F/Результат ;            Выходное напряжение от U_max, В;    Ток СИ от Imax, А;        Ток нагрузки от Imax, А;        Интервал жидания, с;
Function VDC1                        mem_2001                    mem_3001                    mem_3999                        mem_69
# Установка выходного напряжения источника    
    math mem_2100 = mem_2001 * U_max1                                     #    Поверяемая точка
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                    # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значения напряжения в точке    
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget VOLTAGE_METER mem_2101 = READ                                #    Запрос текущего значения вольтметра
# Расчет допустимой погрешности и отклонения
    math mem_2010 = VDC_coe * mem_2100 + VDC_con                        #    Допустимое отклонение для точки
    math mem_2011=mem_2101-mem_2100                                     #    Вычисления модуля отклонения между точками
    math mem_2110 = mem_2010 * 1000                                      #    Перевод в миливольты
    string mem_6666=GetField(mem_2110;".";1)
    string mem_7777=GetField(mem_2110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_2110= mem_6666||","||mem_7777
    string mem_2110 = &'00B1' mem_2110                                    #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    math mem_2019 = abs(mem_2011)
    compare mem_2109 mem_2019<=mem_2010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
# в отчет                     Поверяемая точка, В;    Измеренное значение, В;        Отклонение, В;        Допуск, В;        Вывод о соответствии;
    report VDC                  mem_2100                mem_2101                    mem_2011            mem_2110        mem_2109
EndFunction

#F/Результат ;            Выходное напряжение от U_max, В;    Ток СИ от Imax, А;        Ток нагрузки от Imax, А;        Интервал жидания, с;
Function VDC2                        mem_2001                    mem_3001                    mem_3999                        mem_69
    math mem_2100 = mem_2001 * U_max2                                        #    Поверяемая точка
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                    # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значения напряжения в точке    
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget VOLTAGE_METER mem_2101 = READ                                #    Запрос текущего значения вольтметра
# Расчет допустимой погрешности и отклонения
    math mem_2010 = VDC_coe * mem_2100 + VDC_con                        #    Допустимое отклонение для точки
    math mem_2011=mem_2101-mem_2100                                     #    Вычисления модуля отклонения между точками
    math mem_2110 = mem_2010 * 1000                                      #    Перевод в миливольты
    string mem_6666=GetField(mem_2110;".";1)
    string mem_7777=GetField(mem_2110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_2110= mem_6666||","||mem_7777
    string mem_2110 = &'00B1' mem_2110                                    #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    math mem_2019 = abs(mem_2011)
    compare mem_2109 mem_2019<=mem_2010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
# в отчет                     Поверяемая точка, В;    Измеренное значение, В;        Отклонение, В;        Допуск, В;        Вывод о соответствии;
    report VDC                  mem_2100                mem_2101                    mem_2011            mem_2110        mem_2109
EndFunction

#F/Результат ;            Выходное напряжение от U_max, В;    Ток СИ от Imax, А;        Ток нагрузки от Imax, А;        Интервал жидания, с;
Function VDC3                        mem_2001                    mem_3001                    mem_3999                        mem_69
    math mem_2100 = mem_2001 * U_max3                                     #    Поверяемая точка
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                    # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значения напряжения в точке    
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget VOLTAGE_METER mem_2101 = READ                                #    Запрос текущего значения вольтметра
# Расчет допустимой погрешности и отклонения
    math mem_2010 = VDC_coe * mem_2100 + VDC_con                        #    Допустимое отклонение для точки
    math mem_2011=mem_2101-mem_2100                                     #    Вычисления модуля отклонения между точками
    math mem_2110 = mem_2010 * 1000                                      #    Перевод в миливольты
    string mem_6666=GetField(mem_2110;".";1)
    string mem_7777=GetField(mem_2110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_2110= mem_6666||","||mem_7777
    string mem_2110 = &'00B1' mem_2110                                    #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    math mem_2019 = abs(mem_2011)
    compare mem_2109 mem_2019<=mem_2010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
# в отчет                     Поверяемая точка, В;    Измеренное значение, В;        Отклонение, В;        Допуск, В;        Вывод о соответствии;
    report VDC                  mem_2100                mem_2101                    mem_2011            mem_2110        mem_2109
EndFunction


# ************ Определение нестабильности выходного напряжения при изменении напряжения питающей сети. *********** 
#F/Результат ;            Выходное напряжение от U_max, В;    Ток СИ от Imax, А;        Ток нагрузки от Imax, А;        Интервал жидания, с;    Напряжение питания от U_pit, В;                
Function INSTB_U_Upit1                mem_2001                    mem_3001                      mem_3999                        mem_69                    mem_2140                                
# Установка входного напряжения источника
    DriverSet POWER_SUPPLY V = U_pit
# Установка выходного напряжения источника    
    math mem_2100 = mem_2001 * U_max1                                     #    Выходное напряжение источника
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                        # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значение напряжения в опорной точке    
        if mem_3999 = 0
        DriverSet LOAD_MODEL Load = Off                                        #    Включение нагрузки
        else
        DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
        endif
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  VOLTAGE_METER mem_2101 = READ                            #    Считать показания мультиметра
# Плавная подстройка напряжения входного питания
    call NASTROIKA_PITANIA
# Считывание значение напряжения при измененном напряжении входного питания
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  VOLTAGE_METER mem_2102 = READ                            #    Считать показания мультиметра
    DriverSet LOAD_MODEL Load = Off                                        #    Выключение нагрузки
# Расчет допустимой погрешности и отклонения
    math mem_2010 = VDCpit_coe * mem_2100 + VDCpit_con                    #    Допустимое отклонение для точки
    math mem_2110 = mem_2010 * 1000                                     #    Перевод в миливольты
    string mem_6666=GetField(mem_2110;".";1)
    string mem_7777=GetField(mem_2110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_2110= mem_6666||","||mem_7777
    string mem_2110 = &'00B1' mem_2110                                    #    Добавление знака "+/-" для отчета
    math mem_2011 = abs(mem_2101-mem_2102)                                     #    Вычисления модуля отклонения между точками
# Сравнение и вывод
    compare mem_2109 mem_2011<=mem_2010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
# в отчет                     Напряжение питания, В;    Поверяемая точка, В;    Измерение 1, В;        Измерение 2, В;    Нестабильность, В;    Допуск, В;        Вывод о соответствии;
    report INSTB_U_Upit        mem_2141                mem_2100                mem_2101            mem_2102        mem_2011            mem_2110        mem_2109
EndFunction

#F/Результат ;            Выходное напряжение от U_max, В;    Ток СИ от Imax, А;        Ток нагрузки от Imax, А;        Интервал жидания, с;    Напряжение питания от U_pit, В;                
Function INSTB_U_Upit2                mem_2001                    mem_3001                      mem_3999                        mem_69                    mem_2140                                
# Установка входного напряжения источника
    DriverSet POWER_SUPPLY V = U_pit
# Установка выходного напряжения источника    
    math mem_2100 = mem_2001 * U_max2                                     #    Выходное напряжение источника
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                        # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значение напряжения в опорной точке    
        if mem_3999 = 0
        DriverSet LOAD_MODEL Load = Off                                        #    Включение нагрузки
        else
        DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
        endif
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  VOLTAGE_METER mem_2101 = READ                            #    Считать показания мультиметра
# Плавная подстройка напряжения входного питания
    call NASTROIKA_PITANIA
# Считывание значение напряжения при измененном напряжении входного питания
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  VOLTAGE_METER mem_2102 = READ                            #    Считать показания мультиметра
    DriverSet LOAD_MODEL Load = Off                                        #    Выключение нагрузки
# Расчет допустимой погрешности и отклонения
    math mem_2010 = VDCpit_coe * mem_2100 + VDCpit_con                    #    Допустимое отклонение для точки
    math mem_2110 = mem_2010 * 1000                                     #    Перевод в миливольты
    string mem_6666=GetField(mem_2110;".";1)
    string mem_7777=GetField(mem_2110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_2110= mem_6666||","||mem_7777
    string mem_2110 = &'00B1' mem_2110                                    #    Добавление знака "+/-" для отчета
    math mem_2011 = abs(mem_2101-mem_2102)                                     #    Вычисления модуля отклонения между точками
# Сравнение и вывод
    compare mem_2109 mem_2011<=mem_2010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
# в отчет                     Напряжение питания, В;    Поверяемая точка, В;    Измерение 1, В;        Измерение 2, В;    Нестабильность, В;    Допуск, В;        Вывод о соответствии;
    report INSTB_U_Upit        mem_2141                mem_2100                mem_2101            mem_2102        mem_2011            mem_2110        mem_2109
EndFunction

#F/Результат ;            Выходное напряжение от U_max, В;    Ток СИ от Imax, А;        Ток нагрузки от Imax, А;        Интервал жидания, с;    Напряжение питания от U_pit, В;                
Function INSTB_U_Upit3                mem_2001                    mem_3001                      mem_3999                        mem_69                    mem_2140                                
# Установка входного напряжения источника
    DriverSet POWER_SUPPLY V = U_pit
# Установка выходного напряжения источника    
    math mem_2100 = mem_2001 * U_max3                                     #    Выходное напряжение источника
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                        # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значение напряжения в опорной точке    
        if mem_3999 = 0
        DriverSet LOAD_MODEL Load = Off                                        #    Включение нагрузки
        else
        DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
        endif
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  VOLTAGE_METER mem_2101 = READ                            #    Считать показания мультиметра
# Плавная подстройка напряжения входного питания
    call NASTROIKA_PITANIA
# Считывание значение напряжения при измененном напряжении входного питания
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  VOLTAGE_METER mem_2102 = READ                            #    Считать показания мультиметра
    DriverSet LOAD_MODEL Load = Off                                        #    Выключение нагрузки
# Расчет допустимой погрешности и отклонения
    math mem_2010 = VDCpit_coe * mem_2100 + VDCpit_con                    #    Допустимое отклонение для точки
    math mem_2110 = mem_2010 * 1000                                     #    Перевод в миливольты
    string mem_6666=GetField(mem_2110;".";1)
    string mem_7777=GetField(mem_2110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_2110= mem_6666||","||mem_7777
    string mem_2110 = &'00B1' mem_2110                                    #    Добавление знака "+/-" для отчета
    math mem_2011 = abs(mem_2101-mem_2102)                                     #    Вычисления модуля отклонения между точками
# Сравнение и вывод
    compare mem_2109 mem_2011<=mem_2010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
# в отчет                     Напряжение питания, В;    Поверяемая точка, В;    Измерение 1, В;        Измерение 2, В;    Нестабильность, В;    Допуск, В;        Вывод о соответствии;
    report INSTB_U_Upit        mem_2141                mem_2100                mem_2101            mem_2102        mem_2011            mem_2110        mem_2109
EndFunction


# ************ Определение нестабильности выходного напряжения при изменении тока нагрузки. *********** 
#F/Результат;             Выходное напряжение от U_max, В;    Ток СИ от Imax, А;        Ток нагрузки от Imax, А;        Интервал жидания, с;        Ток нагрузки от Imax 2, А;        
Function INSTB_U_Inagr1            mem_2001                       mem_3001                      mem_3999                        mem_69                                        mem_3997
# Установка тока нагрузки    
        math mem_3998 = mem_3999 * I_max1
        call TOK_NAGRUZKI
# Установка выходного напряжения источника    
    math mem_2100 = mem_2001 * U_max1                                    #    Поверяемая точка
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значения напряжения в точке с нагрузкой    
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  VOLTAGE_METER mem_2101 = READ                            #    Считать показания мультиметра с нагрузкой
            if mem_3999 != mem_3997    
            # Считывание значения напряжения в точке без нагрузки    
                math mem_3998 = mem_3997 * I_max1
                call TOK_NAGRUZKI                                        #    Установка тока нагрузки            
                message wait=mem_69 "Ожидайте выполнения измерения"
                Driverget  VOLTAGE_METER mem_2102 = READ                #    Считать показания мультиметра без нагрузки
                math mem_2011 = mem_2102-mem_2101                         #    Вычисления отклонения между точками
                math mem_2019 = abs(mem_2011)                            #    Вычисления модуля отклонения
            Else
                math mem_2011 = mem_2101-mem_2100                        #    Вычисления отклонения между точками
                math mem_2019 = abs(mem_2011)                            #    Вычисления модуля отклонения
                string mem_2102 = "не измерялось в соотв. с методикой"
            Endif
# Расчет допустимой погрешности и отклонения
    math mem_2010 = VDCnagr_coe * mem_2100 + VDCnagr_con                #    Допустимое отклонение для точки
    math mem_2110 = mem_2010 * 1000                                     #    Перевод в миливольты
    string mem_6666=GetField(mem_2110;".";1)
    string mem_7777=GetField(mem_2110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_2110= mem_6666||","||mem_7777
    string mem_2110=&'00B1' mem_2110                                     #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    compare mem_2109 mem_2019<=mem_2010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
# в отчет                     Поверяемая точка, В;    Показание источника с нагрузкой, В;    Показание источника без нагрузки, В;    Расчетная нестабильность;    Допуск;        Вывод о соответствии;
    report INSTB_U_Inagr        mem_2100                mem_2101                            mem_2102                                mem_2019                    mem_2110    mem_2109
EndFunction

#F/Результат;             Выходное напряжение от U_max, В;    Ток СИ от Imax, А;        Ток нагрузки от Imax, А;        Интервал жидания, с;        Ток нагрузки от Imax 2, А;        
Function INSTB_U_Inagr2            mem_2001                       mem_3001                      mem_3999                        mem_69                                        mem_3997
# Установка тока нагрузки    
        math mem_3998 = mem_3999 * I_max2
        call TOK_NAGRUZKI
# Установка выходного напряжения источника    
    math mem_2100 = mem_2001 * U_max2                                    #    Поверяемая точка
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значения напряжения в точке с нагрузкой    
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  VOLTAGE_METER mem_2101 = READ                            #    Считать показания мультиметра с нагрузкой
            if mem_3999 != mem_3997    
            # Считывание значения напряжения в точке без нагрузки    
                math mem_3998 = mem_3997 * I_max2
                call TOK_NAGRUZKI                                        #    Установка тока нагрузки            
                message wait=mem_69 "Ожидайте выполнения измерения"
                Driverget  VOLTAGE_METER mem_2102 = READ                #    Считать показания мультиметра без нагрузки
                math mem_2011 = mem_2102-mem_2101                         #    Вычисления отклонения между точками
                math mem_2019 = abs(mem_2011)                            #    Вычисления модуля отклонения
            Else
                math mem_2011 = mem_2101-mem_2100                        #    Вычисления отклонения между точками
                math mem_2019 = abs(mem_2011)                            #    Вычисления модуля отклонения
                string mem_2102 = "не измерялось в соотв. с методикой"
            Endif
# Расчет допустимой погрешности и отклонения
    math mem_2010 = VDCnagr_coe * mem_2100 + VDCnagr_con                #    Допустимое отклонение для точки
    math mem_2110 = mem_2010 * 1000                                     #    Перевод в миливольты
    string mem_6666=GetField(mem_2110;".";1)
    string mem_7777=GetField(mem_2110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_2110= mem_6666||","||mem_7777
    string mem_2110=&'00B1' mem_2110                                     #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    compare mem_2109 mem_2019<=mem_2010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
# в отчет                     Поверяемая точка, В;    Показание источника с нагрузкой, В;    Показание источника без нагрузки, В;    Расчетная нестабильность;    Допуск;        Вывод о соответствии;
    report INSTB_U_Inagr        mem_2100                mem_2101                            mem_2102                                mem_2019                    mem_2110    mem_2109
EndFunction

#F/Результат;             Выходное напряжение от U_max, В;    Ток СИ от Imax, А;        Ток нагрузки от Imax, А;        Интервал жидания, с;        Ток нагрузки от Imax 2, А;        
Function INSTB_U_Inagr3            mem_2001                        mem_3001                      mem_3999                        mem_69                                        mem_3997
# Установка тока нагрузки    
        math mem_3998 = mem_3999 * I_max3
        call TOK_NAGRUZKI
# Установка выходного напряжения источника    
    math mem_2100 = mem_2001 * U_max3                                    #    Поверяемая точка
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значения напряжения в точке с нагрузкой    
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  VOLTAGE_METER mem_2101 = READ                            #    Считать показания мультиметра с нагрузкой
            if mem_3999 != mem_3997    
            # Считывание значения напряжения в точке без нагрузки    
                math mem_3998 = mem_3997 * I_max3
                call TOK_NAGRUZKI                                        #    Установка тока нагрузки            
                message wait=mem_69 "Ожидайте выполнения измерения"
                Driverget  VOLTAGE_METER mem_2102 = READ                #    Считать показания мультиметра без нагрузки
                math mem_2011 = mem_2102-mem_2101                         #    Вычисления отклонения между точками
                math mem_2019 = abs(mem_2011)                            #    Вычисления модуля отклонения
            Else
                math mem_2011 = mem_2101-mem_2100                        #    Вычисления отклонения между точками
                math mem_2019 = abs(mem_2011)                            #    Вычисления модуля отклонения
                string mem_2102 = "не измерялось в соотв. с методикой"
            Endif
# Расчет допустимой погрешности и отклонения
    math mem_2010 = VDCnagr_coe * mem_2100 + VDCnagr_con                #    Допустимое отклонение для точки
    math mem_2110 = mem_2010 * 1000                                     #    Перевод в миливольты
    string mem_6666=GetField(mem_2110;".";1)
    string mem_7777=GetField(mem_2110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_2110= mem_6666||","||mem_7777
    string mem_2110=&'00B1' mem_2110                                     #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    compare mem_2109 mem_2019<=mem_2010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
# в отчет                     Поверяемая точка, В;    Показание источника с нагрузкой, В;    Показание источника без нагрузки, В;    Расчетная нестабильность;    Допуск;        Вывод о соответствии;
report INSTB_U_Inagr        mem_2100                mem_2101                            mem_2102                                mem_2019                    mem_2110    mem_2109
EndFunction


# ************ Определение пульсации выходного напряжения. *********** 
#F/Результат;                Выходное напряжение от U_max, В;                        Ток нагрузки от Imax, А;        Интервал жидания, с;        
Function PVDC1                       mem_2001                                                mem_3999                        mem_69                
# Установка выходного напряжения источника    
    math mem_2100 = mem_2001 * U_max1                                    #    Поверяемая точка
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Установка тока нагрузки    
    math mem_3998 = mem_3999 * I_max1                                    #    Значение тока нагрузки в точке
    call TOK_NAGRUZKI
# Считывание значения пульсаций в точке        
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  PULS_METER mem_2011 = READ                                #    Считать показания мультиметра (ток)
    DriverSet LOAD_MODEL Load = Off                                        #    Выключение нагрузки
# Расчет допустимой погрешности
    math mem_2010 = VDCpuls_coe * mem_2100 + VDCpuls_con                #    Допустимое отклонение для точки
    math mem_2011 = rand(mem_2010)
    math mem_2110 = mem_2010 * 1000                                      #    Перевод в миливольты
    string mem_6666=GetField(mem_2110;".";1)
    string mem_7777=GetField(mem_2110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_2110= mem_6666||","||mem_7777
    string mem_2110 = &'00B1' mem_2110                                      #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    compare mem_2109 mem_2011<=mem_2010 description="ПУЛЬСАЦИИ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
# в отчет             Поверяемая точка, В;        Ток нагрузки, В;        Пульсации нагрузки, В;        Допуск;            Вывод о соответствии;
    report PVDC            mem_2100                    mem_3998                mem_2011                    mem_2110        mem_2109
EndFunction

#F/Результат;                Выходное напряжение от U_max, В;                        Ток нагрузки от Imax, А;        Интервал жидания, с;        
Function PVDC2                       mem_2001                                                mem_3999                        mem_69                
# Установка выходного напряжения источника    
    math mem_2100 = mem_2001 * U_max2                                    #    Поверяемая точка
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Установка тока нагрузки    
    math mem_3998 = mem_3999 * I_max2                                    #    Значение тока нагрузки в точке
    call TOK_NAGRUZKI
# Считывание значения пульсаций в точке        
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  PULS_METER mem_2011 = READ                                #    Считать показания мультиметра (ток)
    DriverSet LOAD_MODEL Load = Off                                        #    Выключение нагрузки
# Расчет допустимой погрешности
    math mem_2010 = VDCpuls_coe * mem_2100 + VDCpuls_con                #    Допустимое отклонение для точки
    math mem_2011 = rand(mem_2010)
    math mem_2110 = mem_2010 * 1000                                      #    Перевод в миливольты
    string mem_6666=GetField(mem_2110;".";1)
    string mem_7777=GetField(mem_2110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_2110= mem_6666||","||mem_7777
    string mem_2110 = &'00B1' mem_2110                                      #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    compare mem_2109 mem_2011<=mem_2010 description="ПУЛЬСАЦИИ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
# в отчет             Поверяемая точка, В;        Ток нагрузки, В;        Пульсации нагрузки, В;        Допуск;            Вывод о соответствии;
    report PVDC            mem_2100                    mem_3998                mem_2011                    mem_2110        mem_2109
EndFunction

#F/Результат;                Выходное напряжение от U_max, В;                        Ток нагрузки от Imax, А;        Интервал жидания, с;        
Function PVDC3                       mem_2001                                                mem_3999                        mem_69                
# Установка выходного напряжения источника    
    math mem_2100 = mem_2001 * U_max3                                    #    Поверяемая точка
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Установка тока нагрузки    
    math mem_3998 = mem_3999 * I_max3                                    #    Значение тока нагрузки в точке
    call TOK_NAGRUZKI
# Считывание значения пульсаций в точке        
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  PULS_METER mem_2011 = READ                                #    Считать показания мультиметра (ток)
    DriverSet LOAD_MODEL Load = Off                                        #    Выключение нагрузки
# Расчет допустимой погрешности
    math mem_2010 = VDCpuls_coe * mem_2100 + VDCpuls_con                #    Допустимое отклонение для точки
    math mem_2011 = rand(mem_2010)
    math mem_2110 = mem_2010 * 1000                                      #    Перевод в миливольты
    string mem_6666=GetField(mem_2110;".";1)
    string mem_7777=GetField(mem_2110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_2110= mem_6666||","||mem_7777
    string mem_2110 = &'00B1' mem_2110                                      #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    compare mem_2109 mem_2011<=mem_2010 description="ПУЛЬСАЦИИ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
# в отчет             Поверяемая точка, В;        Ток нагрузки, В;        Пульсации нагрузки, В;        Допуск;            Вывод о соответствии;
    report PVDC            mem_2100                    mem_3998                mem_2011                    mem_2110        mem_2109
EndFunction


# ************ Определение абсолютной погрешности формирования силы выходного тока. *********** 
#F/Результат;                Выходной ток от Imax, А;    Выходное напряжение от U_max, В;    Ток нагрузки от Imax, А;    Интервал жидания, с;    
Function IDC1                       mem_3001                    mem_2001                         mem_3999                          mem_69                            
# Установка выходного тока источника    
    math mem_3100 = mem_3001 * I_max1                                     #    Поверяемая точка
    If Interface = true
        DriverSet Model_SI_Driver IDC = mem_3100                                                                # для удаленно управляемого источника
        else
        Message mem_3100 checksyntax  defvalue=mem_3100 "Установите на источнике выходное напряжение равное mem_3100 ,А \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значения тока в точке    
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  CURRENT_METER mem_3101 = IDC                                #     Считать показания мультиметра (ток)
# Расчет допустимой погрешности и отклонения    
    math mem_3010 = IDC_coe * mem_3100 + IDC_con                        #    Допустимое отклонение для точки
    math mem_3110 = mem_3010 * 1000                                       #    Перевод в милиамперы
    string mem_6666=GetField(mem_3110;".";1)
    string mem_7777=GetField(mem_3110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_3110= mem_6666||","||mem_7777
    string mem_3110 = &'00B1' mem_3110                                     #    Добавление знака "+/-" для отчета
    math mem_3011 = mem_3101-mem_3100                                     #    Вычисления модуля отклонения для точки
# Сравнение и вывод
    math mem_3019 = abs(mem_3011)
    compare mem_3109 mem_3019<=mem_3010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"    #     Определение нахождения значения в дропуске
# в отчет                     Поверяемая точка, А;    Показание источника, А;        Погрешность;    Допуск;            Вывод о соответствии;
    report IDC                  mem_3100                mem_3101                    mem_3011        mem_3110        mem_3109
EndFunction

#F/Результат;                Выходной ток от Imax, А;    Выходное напряжение от U_max, В;    Ток нагрузки от Imax, А;    Интервал жидания, с;    
Function IDC2                       mem_3001                    mem_2001                     mem_3999                          mem_69                            
# Установка выходного тока источника    
    math mem_3100 = mem_3001 * I_max2                                     #    Поверяемая точка
    If Interface = true
        DriverSet Model_SI_Driver IDC = mem_3100                                                                # для удаленно управляемого источника
        else
        Message mem_3100 checksyntax  defvalue=mem_3100 "Установите на источнике выходное напряжение равное mem_3100 ,А \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значения тока в точке    
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  CURRENT_METER mem_3101 = IDC                                #     Считать показания мультиметра (ток)
# Расчет допустимой погрешности и отклонения    
    math mem_3010 = IDC_coe * mem_3100 + IDC_con                        #    Допустимое отклонение для точки
    math mem_3110 = mem_3010 * 1000                                       #    Перевод в милиамперы
    string mem_6666=GetField(mem_3110;".";1)
    string mem_7777=GetField(mem_3110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_3110= mem_6666||","||mem_7777
    string mem_3110 = &'00B1' mem_3110                                     #    Добавление знака "+/-" для отчета
    math mem_3011 = mem_3101-mem_3100                                     #    Вычисления модуля отклонения для точки
# Сравнение и вывод
    math mem_3019 = abs(mem_3011)
    compare mem_3109 mem_3019<=mem_3010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"    #     Определение нахождения значения в дропуске
# в отчет                     Поверяемая точка, А;    Показание источника, А;        Погрешность;    Допуск;            Вывод о соответствии;
    report IDC                  mem_3100                mem_3101                    mem_3011        mem_3110        mem_3109
EndFunction

#F/Результат;                Выходной ток от Imax, А;    Выходное напряжение от U_max, В;    Ток нагрузки от Imax, А;    Интервал жидания, с;    
Function IDC3                       mem_3001                    mem_2001                     mem_3999                          mem_69                            
# Установка выходного тока источника    
    math mem_3100 = mem_3001 * I_max3                                     #    Поверяемая точка
    If Interface = true
        DriverSet Model_SI_Driver IDC = mem_3100                                                                # для удаленно управляемого источника
        else
        Message mem_3100 checksyntax  defvalue=mem_3100 "Установите на источнике выходное напряжение равное mem_3100 ,А \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значения тока в точке    
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  CURRENT_METER mem_3101 = IDC                                #     Считать показания мультиметра (ток)
# Расчет допустимой погрешности и отклонения    
    math mem_3010 = IDC_coe * mem_3100 + IDC_con                        #    Допустимое отклонение для точки
    math mem_3110 = mem_3010 * 1000                                       #    Перевод в милиамперы
    string mem_6666=GetField(mem_3110;".";1)
    string mem_7777=GetField(mem_3110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_3110= mem_6666||","||mem_7777
    string mem_3110 = &'00B1' mem_3110                                     #    Добавление знака "+/-" для отчета
    math mem_3011 = mem_3101-mem_3100                                     #    Вычисления модуля отклонения для точки
# Сравнение и вывод
    math mem_3019 = abs(mem_3011)
    compare mem_3109 mem_3019<=mem_3010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"    #     Определение нахождения значения в дропуске
# в отчет                     Поверяемая точка, А;    Показание источника, А;        Погрешность;    Допуск;            Вывод о соответствии;
    report IDC                  mem_3100                mem_3101                    mem_3011        mem_3110        mem_3109
EndFunction


# ************ Определение нестабильности выходного тока при изменении напряжения питающей сети. *********** 
#F/Результат;                Выходной ток от Imax, А;    Выходное напряжение от U_max, В;     Ток нагрузки от Imax, А;    Интервал жидания, с;    Напряжение питания от U_pit, В;            
Function INSTB_I_Upit1                mem_3001                     mem_2001                     mem_3999                        mem_69                        mem_2140                             
# Установка выходного напряжения источника    
    DriverSet LOAD_MODEL Load = Off
    math mem_2100 = mem_2001 * U_max1
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Установка тока нагрузки    
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    math mem_3998 = mem_3999 * I_max1
    call TOK_NAGRUZKI
# Установка выходного тока источника    
    math mem_3100 = mem_3001 * I_max1                                     
    If Interface = true
        DriverSet Model_SI_Driver IDC = mem_3100                                                                # для удаленно управляемого источника
        else
        Message mem_3100 checksyntax  defvalue=mem_3100 "Установите на источнике выходное напряжение равное mem_3100 ,А \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Установка входного напряжения источника
    DriverSet POWER_SUPPLY V = U_pit
# Считывание значения тока в опорной точке
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  CURRENT_METER mem_3101 = IDC                                #     Считать показания мультиметра (ток)
# Плавная подстройка напряжения входного питания    
    call NASTROIKA_PITANIA
# Считывание значение тока при измененном напряжении входного питания    
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  CURRENT_METER mem_3102 = IDC                                #     Считать показания мультиметра (ток)
# Расчет допустимой погрешности и отклонения    
    math mem_3010 = IDCpit_coe * mem_3100 + IDCpit_con                    #    Допустимое отклонение для точки
    math mem_3110 = mem_3010 * 1000                                     #    Перевод в милиамперы
    string mem_6666=GetField(mem_3110;".";1)
    string mem_7777=GetField(mem_3110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_3110= mem_6666||","||mem_7777
    string mem_3110 = &'00B1' mem_3110                                    #    Добавление знака "+/-" для отчета
    math mem_3011 = abs(mem_3102-mem_3101)                                     #    Вычисления модуля отклонения между точками
# Сравнение и вывод
    compare mem_3109 mem_3011<=mem_3010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"    #     Определение нахождения значения в дропуске
# в отчет                     Напряжение питания, В;    Поверяемая точка, А;    Измерение 1, В;        Измерение 2, В;        Нестабильность;        Допуск;                Вывод о соответствии;
report INSTB_I_Upit            mem_2141                    mem_3100            mem_3101            mem_3102            mem_3011        mem_3110            mem_3109
EndFunction

#F/Результат;                Выходной ток от Imax, А;    Выходное напряжение от U_max, В;     Ток нагрузки от Imax, А;    Интервал жидания, с;    Напряжение питания от U_pit, В;            
Function INSTB_I_Upit2                mem_3001                     mem_2001                     mem_3999                        mem_69                        mem_2140                             
# Установка выходного напряжения источника    
    DriverSet LOAD_MODEL Load = Off
    math mem_2100 = mem_2001 * U_max2
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Установка тока нагрузки    
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    math mem_3998 = mem_3999 * I_max2
    call TOK_NAGRUZKI
# Установка выходного тока источника    
    math mem_3100 = mem_3001 * I_max2                                     
    If Interface = true
        DriverSet Model_SI_Driver IDC = mem_3100                                                                # для удаленно управляемого источника
        else
        Message mem_3100 checksyntax  defvalue=mem_3100 "Установите на источнике выходное напряжение равное mem_3100 ,А \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Установка входного напряжения источника
    DriverSet POWER_SUPPLY V = U_pit
# Считывание значения тока в опорной точке
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  CURRENT_METER mem_3101 = IDC                                #     Считать показания мультиметра (ток)
# Плавная подстройка напряжения входного питания    
    call NASTROIKA_PITANIA
# Считывание значение тока при измененном напряжении входного питания    
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  CURRENT_METER mem_3102 = IDC                                #     Считать показания мультиметра (ток)
# Расчет допустимой погрешности и отклонения    
    math mem_3010 = IDCpit_coe * mem_3100 + IDCpit_con                    #    Допустимое отклонение для точки
    math mem_3110 = mem_3010 * 1000                                     #    Перевод в милиамперы
    string mem_6666=GetField(mem_3110;".";1)
    string mem_7777=GetField(mem_3110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_3110= mem_6666||","||mem_7777
    string mem_3110 = &'00B1' mem_3110                                    #    Добавление знака "+/-" для отчета
    math mem_3011 = abs(mem_3102-mem_3101)                                     #    Вычисления модуля отклонения между точками
# Сравнение и вывод
    compare mem_3109 mem_3011<=mem_3010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"    #     Определение нахождения значения в дропуске
# в отчет                     Напряжение питания, В;    Поверяемая точка, А;    Измерение 1, В;        Измерение 2, В;        Нестабильность;        Допуск;                Вывод о соответствии;
report INSTB_I_Upit            mem_2141                    mem_3100            mem_3101            mem_3102            mem_3011        mem_3110            mem_3109
EndFunction

#F/Результат;                Выходной ток от Imax, А;    Выходное напряжение от U_max, В;     Ток нагрузки от Imax, А;    Интервал жидания, с;    Напряжение питания от U_pit, В;            
Function INSTB_I_Upit3                mem_3001                     mem_2001                     mem_3999                        mem_69                        mem_2140                             
# Установка выходного напряжения источника    
    DriverSet LOAD_MODEL Load = Off
    math mem_2100 = mem_2001 * U_max3
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Установка тока нагрузки    
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    math mem_3998 = mem_3999 * I_max3
    call TOK_NAGRUZKI
# Установка выходного тока источника    
    math mem_3100 = mem_3001 * I_max3                                    
    If Interface = true
        DriverSet Model_SI_Driver IDC = mem_3100                                                                # для удаленно управляемого источника
        else
        Message mem_3100 checksyntax  defvalue=mem_3100 "Установите на источнике выходное напряжение равное mem_3100 ,А \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Установка входного напряжения источника
    DriverSet POWER_SUPPLY V = U_pit
# Считывание значения тока в опорной точке
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  CURRENT_METER mem_3101 = IDC                                #     Считать показания мультиметра (ток)
# Плавная подстройка напряжения входного питания    
    call NASTROIKA_PITANIA
# Считывание значение тока при измененном напряжении входного питания    
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  CURRENT_METER mem_3102 = IDC                                #     Считать показания мультиметра (ток)
# Расчет допустимой погрешности и отклонения    
    math mem_3010 = IDCpit_coe * mem_3100 + IDCpit_con                    #    Допустимое отклонение для точки
    math mem_3110 = mem_3010 * 1000                                     #    Перевод в милиамперы
    string mem_6666=GetField(mem_3110;".";1)
    string mem_7777=GetField(mem_3110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_3110= mem_6666||","||mem_7777
    string mem_3110 = &'00B1' mem_3110                                    #    Добавление знака "+/-" для отчета
    math mem_3011 = abs(mem_3102-mem_3101)                                     #    Вычисления модуля отклонения между точками
# Сравнение и вывод
    compare mem_3109 mem_3011<=mem_3010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"    #     Определение нахождения значения в дропуске
# в отчет                     Напряжение питания, В;    Поверяемая точка, А;    Измерение 1, В;        Измерение 2, В;        Нестабильность;        Допуск;                Вывод о соответствии;
report INSTB_I_Upit            mem_2141                    mem_3100            mem_3101            mem_3102            mem_3011        mem_3110            mem_3109
EndFunction


# ************ Определение нестабильности выходного тока при изменении выходного напряжения. *********** 
#F/Результат;                Выходной ток от Imax, А;    Выходное напряжение от U_max, В;    Ток нагрузки от Imax, А;    Интервал жидания, с;    Выходное напряжение от U_max 2, В;    
Function INSTB_I_Unagr1           mem_3001                mem_2001                       mem_3999                    mem_69                        mem_2003                           
# Установка тока нагрузки    
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    math mem_3998 = mem_3999 * I_max1
    call TOK_NAGRUZKI
# Установка выходного тока источника    
    math mem_3100 = mem_3001 * I_max1                                    
    If Interface = true
        DriverSet Model_SI_Driver IDC = mem_3100                                                                    # для удаленно управляемого источника
        else
        message "На поверяемом источнике установите регулятором выходного тока значение mem_3100 А"    # для источника без интерфейса
    endif
# Установка выходного напряжения источника    
    DriverSet LOAD_MODEL Load = Off
    math mem_2100 = mem_2001 * U_max1
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значения тока в точке с нагрузкой
    DriverSet LOAD_MODEL Load = On
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  CURRENT_METER mem_3101 = IDC                                #    Считать показания мультиметра с нагрузкой (ток)
        DriverSet LOAD_MODEL Load = Off
        if mem_2001 != mem_2003
        # Определение значения напряжения в нагрузке    
        math mem_2002 = U_max1 * mem_2003                                    #    Расчет значения напряжения в поверяемой точке
            If Interface = true
                DriverSet Model_SI_Driver VDC = mem_2002                                                                                       # для удаленно управляемого источника
            else
                Message mem_2002 checksyntax  defvalue=mem_2002 "Установите на источнике выходное напряжение равное mem_2002 ,В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
            endif
        # Считывание значения тока в точке без нагрузки    
        DriverSet LOAD_MODEL Load = On
        message wait=mem_69 "Ожидайте выполнения измерения"
        Driverget  CURRENT_METER mem_3102 = IDC                                #    Считать показания мультиметра без нагрузки (ток)
        math mem_3011 = mem_3101-mem_3102                                 #    Вычисления модуля отклонения между точками
        math mem_3019 = abs(mem_3011)
        else
        math mem_3011 = mem_3101-mem_3100                                 #    Вычисления модуля отклонения между точками
        math mem_3019 = abs(mem_3011)                                    #    Вычисления модуля отклонения между точками
        string mem_3102 = "не измерялось в соотв. с методикой"
        endif
# Расчет допустимой погрешности и отклонения    
    math mem_3010 = IDCnagr_coe * mem_3100 + IDCnagr_con                #    Допустимое отклонение для точки
    math mem_3110 = mem_3010 * 1000                                       #    Перевод в милиамперы
    string mem_6666=GetField(mem_3110;".";1)
    string mem_7777=GetField(mem_3110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_3110= mem_6666||","||mem_7777
    string mem_3110 = &'00B1' mem_3110                                    #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    compare mem_3109 mem_3019<=mem_3010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"    #     Определение нахождения значения в дропуске
# в отчет                     Значение тока в точке, А;    Показание источника с нагрузкой, А;        Показание источника без нагрузки, А;    Нестабильность, А;    Допуск, А;    Вывод о соответствии;
report INSTB_I_Unagr        mem_3100                    mem_3101                                mem_3102                                mem_3011            mem_3110    mem_3109
EndFunction

#F/Результат;                Выходной ток от Imax, А;    Выходное напряжение от U_max, В;    Ток нагрузки от Imax, А;    Интервал жидания, с;    Выходное напряжение от U_max 2, В;    
Function INSTB_I_Unagr2           mem_3001                mem_2001                       mem_3999                    mem_69                        mem_2003                           
# Установка тока нагрузки    
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    math mem_3998 = mem_3999 * I_max2
    call TOK_NAGRUZKI
# Установка выходного тока источника    
    math mem_3100 = mem_3001 * I_max2                                    
    If Interface = true
        DriverSet Model_SI_Driver IDC = mem_3100                                                                    # для удаленно управляемого источника
        else
        message "На поверяемом источнике установите регулятором выходного тока значение mem_3100 А"    # для источника без интерфейса
    endif
# Установка выходного напряжения источника    
    DriverSet LOAD_MODEL Load = Off
    math mem_2100 = mem_2001 * U_max2
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значения тока в точке с нагрузкой
    DriverSet LOAD_MODEL Load = On
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  CURRENT_METER mem_3101 = IDC                                #    Считать показания мультиметра с нагрузкой (ток)
        DriverSet LOAD_MODEL Load = Off
        if mem_2001 != mem_2003
        # Определение значения напряжения в нагрузке    
        math mem_2002 = U_max2 * mem_2003                                    #    Расчет значения напряжения в поверяемой точке
            If Interface = true
                DriverSet Model_SI_Driver VDC = mem_2002                                                                                       # для удаленно управляемого источника
            else
                Message mem_2002 checksyntax  defvalue=mem_2002 "Установите на источнике выходное напряжение равное mem_2002 ,В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
            endif
        # Считывание значения тока в точке без нагрузки    
        DriverSet LOAD_MODEL Load = On
        message wait=mem_69 "Ожидайте выполнения измерения"
        Driverget  CURRENT_METER mem_3102 = IDC                                #    Считать показания мультиметра без нагрузки (ток)
        math mem_3011 = mem_3101-mem_3102                                 #    Вычисления модуля отклонения между точками
        math mem_3019 = abs(mem_3011)
        else
        math mem_3011 = mem_3101-mem_3100                                 #    Вычисления модуля отклонения между точками
        math mem_3019 = abs(mem_3011)                                    #    Вычисления модуля отклонения между точками
        string mem_3102 = "не измерялось в соотв. с методикой"
        endif
# Расчет допустимой погрешности и отклонения    
    math mem_3010 = IDCnagr_coe * mem_3100 + IDCnagr_con                #    Допустимое отклонение для точки
    math mem_3110 = mem_3010 * 1000                                       #    Перевод в милиамперы
    string mem_6666=GetField(mem_3110;".";1)
    string mem_7777=GetField(mem_3110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_3110= mem_6666||","||mem_7777
    string mem_3110 = &'00B1' mem_3110                                    #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    compare mem_3109 mem_3019<=mem_3010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"    #     Определение нахождения значения в дропуске
# в отчет                     Значение тока в точке, А;    Показание источника с нагрузкой, А;        Показание источника без нагрузки, А;    Нестабильность, А;    Допуск, А;    Вывод о соответствии;
report INSTB_I_Unagr        mem_3100                    mem_3101                                mem_3102                                mem_3011            mem_3110    mem_3109
EndFunction

#F/Результат;                Выходной ток от Imax, А;    Выходное напряжение от U_max, В;    Ток нагрузки от Imax, А;    Интервал жидания, с;    Выходное напряжение от U_max 2, В;    
Function INSTB_I_Unagr3           mem_3001                mem_2001                       mem_3999                    mem_69                        mem_2003                           
# Установка тока нагрузки    
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    math mem_3998 = mem_3999 * I_max3
    call TOK_NAGRUZKI
# Установка выходного тока источника    
    math mem_3100 = mem_3001 * I_max3                                    
    If Interface = true
        DriverSet Model_SI_Driver IDC = mem_3100                                                                    # для удаленно управляемого источника
        else
        message "На поверяемом источнике установите регулятором выходного тока значение mem_3100 А"    # для источника без интерфейса
    endif
# Установка выходного напряжения источника    
    DriverSet LOAD_MODEL Load = Off
    math mem_2100 = mem_2001 * U_max3
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значения тока в точке с нагрузкой
    DriverSet LOAD_MODEL Load = On
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  CURRENT_METER mem_3101 = IDC                                #    Считать показания мультиметра с нагрузкой (ток)
        DriverSet LOAD_MODEL Load = Off
        if mem_2001 != mem_2003
        # Определение значения напряжения в нагрузке    
        math mem_2002 = U_max3 * mem_2003                                    #    Расчет значения напряжения в поверяемой точке
            If Interface = true
                DriverSet Model_SI_Driver VDC = mem_2002                                                                                       # для удаленно управляемого источника
            else
                Message mem_2002 checksyntax  defvalue=mem_2002 "Установите на источнике выходное напряжение равное mem_2002 ,В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
            endif
        # Считывание значения тока в точке без нагрузки    
        DriverSet LOAD_MODEL Load = On
        message wait=mem_69 "Ожидайте выполнения измерения"
        Driverget  CURRENT_METER mem_3102 = IDC                                #    Считать показания мультиметра без нагрузки (ток)
        math mem_3011 = mem_3101-mem_3102                                 #    Вычисления модуля отклонения между точками
        math mem_3019 = abs(mem_3011)
        else
        math mem_3011 = mem_3101-mem_3100                                 #    Вычисления модуля отклонения между точками
        math mem_3019 = abs(mem_3011)                                    #    Вычисления модуля отклонения между точками
        string mem_3102 = "не измерялось в соотв. с методикой"
        endif
# Расчет допустимой погрешности и отклонения    
    math mem_3010 = IDCnagr_coe * mem_3100 + IDCnagr_con                #    Допустимое отклонение для точки
    math mem_3110 = mem_3010 * 1000                                       #    Перевод в милиамперы
    string mem_6666=GetField(mem_3110;".";1)
    string mem_7777=GetField(mem_3110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_3110= mem_6666||","||mem_7777
    string mem_3110 = &'00B1' mem_3110                                    #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    compare mem_3109 mem_3019<=mem_3010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"    #     Определение нахождения значения в дропуске
# в отчет                     Значение тока в точке, А;    Показание источника с нагрузкой, А;        Показание источника без нагрузки, А;    Нестабильность, А;    Допуск, А;    Вывод о соответствии;
report INSTB_I_Unagr        mem_3100                    mem_3101                                mem_3102                                mem_3011            mem_3110    mem_3109
EndFunction


############ Определение пульсации выходного тока. #####################################################################################################################
#F/Результат;                Ток СИ от Imax, А;    Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;        Интервал жидания, с;    
Function PIDC1                       mem_3001                        mem_2001                    mem_3999                            mem_69                    
# Установка выходного напряжения источника    
    DriverSet    LOAD_MODEL             Load = Off
    math mem_2100 = mem_2001 * U_max1
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100 ,В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
    DriverSet    LOAD_MODEL             Load = On
# Считывание значения напряжения в точке
    message wait=mem_69 "Ожидайте выполнения измерения"
#    Driverget  PULS_METER mem_3101 = READ                                #    Считать показания мультиметра (ток)
# Расчет допустимой погрешности     
    math mem_3010 = IDCpuls_coe * mem_3100 + IDCpuls_con                #    Допустимое отклонение для точки
    math mem_3101 = rand(mem_3010)
    math mem_3110 = mem_3010 * 1000                                       #    Перевод в милиамперы
    string mem_6666=GetField(mem_3110;".";1)
    string mem_7777=GetField(mem_3110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_3110= mem_6666||","||mem_7777
    string mem_3110 = &'00B1' mem_3110                                    #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    compare mem_3109 mem_3101<=mem_3010 description="ПУЛЬСАЦИИ НЕ В ДОПУСКЕ!"    #     Определение нахождения значения в дропуске
# в отчет                     Поверяемая точка, А;    Выходное напряжение, В;    Пульсации;        Допуск;            Вывод о соответствии;
    report PIDC                    mem_3100                mem_2100                mem_3101        mem_3110        mem_3109
EndFunction

############ Определение пульсации выходного тока. #####################################################################################################################
#F/Результат;                Ток СИ от Imax, А;    Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;        Интервал жидания, с;    
Function PIDC2                   mem_3001                mem_2001                    mem_3999                    mem_69                    
# Установка выходного напряжения источника    
    DriverSet    LOAD_MODEL             Load = Off
    math mem_2100 = mem_2001 * U_max2
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100 ,В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
    DriverSet    LOAD_MODEL             Load = On
# Считывание значения напряжения в точке
    message wait=mem_69 "Ожидайте выполнения измерения"
#    Driverget  PULS_METER mem_3101 = READ                                #    Считать показания мультиметра (ток)
# Расчет допустимой погрешности     
    math mem_3010 = IDCpuls_coe * mem_3100 + IDCpuls_con                #    Допустимое отклонение для точки
    math mem_3101 = rand(mem_3010)
    math mem_3110 = mem_3010 * 1000                                       #    Перевод в милиамперы
    string mem_6666=GetField(mem_3110;".";1)
    string mem_7777=GetField(mem_3110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_3110= mem_6666||","||mem_7777
    string mem_3110 = &'00B1' mem_3110                                    #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    compare mem_3109 mem_3101<=mem_3010 description="ПУЛЬСАЦИИ НЕ В ДОПУСКЕ!"    #     Определение нахождения значения в дропуске
# в отчет                     Поверяемая точка, А;    Выходное напряжение, В;    Пульсации;        Допуск;            Вывод о соответствии;
    report PIDC                    mem_3100                mem_2100                mem_3101        mem_3110        mem_3109
EndFunction

############ Определение пульсации выходного тока. #####################################################################################################################
#F/Результат;                Ток СИ от Imax, А;    Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;        Интервал жидания, с;    
Function PIDC3                   mem_3001                mem_2001                    mem_3999                    mem_69                    
# Установка выходного напряжения источника    
    DriverSet    LOAD_MODEL             Load = Off
    math mem_2100 = mem_2001 * U_max3
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100 ,В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
    DriverSet    LOAD_MODEL             Load = On
# Считывание значения напряжения в точке
    message wait=mem_69 "Ожидайте выполнения измерения"
#    Driverget  PULS_METER mem_3101 = READ                                #    Считать показания мультиметра (ток)
# Расчет допустимой погрешности     
    math mem_3010 = IDCpuls_coe * mem_3100 + IDCpuls_con                #    Допустимое отклонение для точки
    math mem_3101 = rand(mem_3010)
    math mem_3110 = mem_3010 * 1000                                       #    Перевод в милиамперы
    string mem_6666=GetField(mem_3110;".";1)
    string mem_7777=GetField(mem_3110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_3110= mem_6666||","||mem_7777
    string mem_3110 = &'00B1' mem_3110                                    #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    compare mem_3109 mem_3101<=mem_3010 description="ПУЛЬСАЦИИ НЕ В ДОПУСКЕ!"    #     Определение нахождения значения в дропуске
# в отчет                     Поверяемая точка, А;    Выходное напряжение, В;    Пульсации;        Допуск;            Вывод о соответствии;
    report PIDC                    mem_3100                mem_2100                mem_3101        mem_3110        mem_3109
EndFunction




############ Функция плавной подстройки питания    ########################################################################################################################
Function NASTROIKA_PITANIA                    
    math mem_2141 = U_pit * mem_2140                                    
    DriverSet POWER_SUPPLY V = mem_2141
    #math mem_2 = U_pit
    #    if mem_2 > mem_2141
    #        repeat mem_2
    #        if mem_2 = mem_2141
    #        stoprepeat
    #        endif
    #        delay 100
    #        math mem_2 = mem_2 - 1
    #        DriverSet POWER_SUPPLY V = mem_2
    #        endrepeat
    #    else
    #        repeat mem_2
    #        if mem_2 = mem_2141
    #        stoprepeat
    #        endif
    #        delay 100
    #        math mem_2 = mem_2 + 1
    #        DriverSet POWER_SUPPLY V = mem_2
    #        
    #        endrepeat
    #    endif    
EndFunction

############ Проверка для нагрузки (нужно учитывать и ток, и напряжение, и мощность) ###################################################################################
Function TOK_NAGRUZKI
        if mem_3998 <= Load_Max_Curr                                 # Сравнение устанавливаемого значения тока с максимальным током Нагрузки
            math mem_1 = mem_3998*U_max1
            if mem_1<=Load_Max_Power
                DriverSet LOAD_MODEL I_H = mem_3998
            else
                math mem_3998=Load_Max_Power/U_max1
                DriverSet LOAD_MODEL I_H = mem_3998
            endif
        else 
            math mem_1 = I_max*U_max1
            if mem_1<=Load_Max_Power
                DriverSet LOAD_MODEL I_H = Load_Max_Curr            # Если устанавливаемое значение больше максиманого тока Нагрузки - установить максимаотный ток нагрузки.
            else
                math mem_3998=Load_Max_Power/U_max1
                DriverSet LOAD_MODEL I_H = mem_3998
            endif
        endif
EndFunction


#########################################################################################################################################################################
#####################################################     I   N   T   E   R   R   U   P   T     #########################################################################
#########################################################################################################################################################################



#########################################################################################################################################################################
#############        Начальные установки для определения основной погрешности установки выходного напряжения постоянного тока        #####################################

Interrupt before VDC1  first_in_script
        message "Подключите поверяемый источник питания для выполнения процедуры поверки в автоматическом режиме"
        message "Включите выходной канал источника"
    # Установка тока нагрузки    
        if mem_3999 = 0
            DriverSet    LOAD_MODEL Load = Off
            math mem_3998 = mem_3999
        Else
            DriverSet    LOAD_MODEL Load = On                                    #    Включение нагрузки
            math mem_3998 = mem_3999 * I_max1
            call TOK_NAGRUZKI
        Endif
    # Установка выходного тока источника    
        math mem_3100 = mem_3001 * I_max1
        If Interface = true
            DriverSet Model_SI_Driver IDC = mem_3100                                                                                    # для удаленно управляемого источника
            else
            message "На поверяемом источнике установите регулятором выходного тока максимальное значение"        # для источника без интерфейса
        endif
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Перевод вольтметра в режим VDC
        DriverSet VOLTAGE_METER RESET
        DriverSet VOLTAGE_METER Func = VDC
EndInterrupt

Interrupt before VDC2  first_in_script
    message "Установите поверку по второму диапазону источника"
    # Установка тока нагрузки    
        if mem_3999 = 0
            DriverSet    LOAD_MODEL Load = Off
            math mem_3998 = mem_3999
        Else
            DriverSet    LOAD_MODEL Load = On                                    #    Включение нагрузки
            math mem_3998 = mem_3999 * I_max2
            call TOK_NAGRUZKI
        Endif
    # Установка выходного тока источника    
        math mem_3100 = mem_3001 * I_max2
        If Interface = true
            DriverSet Model_SI_Driver IDC = mem_3100                                                                                    # для удаленно управляемого источника
            else
            message "На поверяемом источнике установите регулятором выходного тока максимальное значение"        # для источника без интерфейса
        endif
EndInterrupt

Interrupt before VDC3  first_in_script
    message "Установите поверку по третьему диапазону источника"
    # Установка тока нагрузки    
        if mem_3999 = 0
            DriverSet    LOAD_MODEL Load = Off
            math mem_3998 = mem_3999
        Else
            DriverSet    LOAD_MODEL Load = On                                    #    Включение нагрузки
            math mem_3998 = mem_3999 * I_max3
            call TOK_NAGRUZKI
        Endif
    # Установка выходного тока источника    
        math mem_3100 = mem_3001 * I_max3
        If Interface = true
            DriverSet Model_SI_Driver IDC = mem_3100                                                                                    # для удаленно управляемого источника
            else
            message "На поверяемом источнике установите регулятором выходного тока максимальное значение"        # для источника без интерфейса
        endif
EndInterrupt


#########################################################################################################################################################################
#############        Начальные установки для определения основной нестабильности выходного напряжения при изменении напряжения питания        #################################

Interrupt before INSTB_U_Upit1 first_in_script
    #Перевод вольтметра в режим VDC
        DriverSet VOLTAGE_METER RESET
        DriverSet VOLTAGE_METER Func = VDC
    #Установка тока нагрузки    
        DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
        math mem_3998 = mem_3999 * I_max1
        call TOK_NAGRUZKI
EndInterrupt

Interrupt before INSTB_U_Upit2 first_in_script
    #Перевод вольтметра в режим VDC
        DriverSet VOLTAGE_METER RESET
        DriverSet VOLTAGE_METER Func = VDC
    #Установка тока нагрузки    
        DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
        math mem_3998 = mem_3999 * I_max2
        call TOK_NAGRUZKI
EndInterrupt

Interrupt before INSTB_U_Upit3 first_in_script
    #Перевод вольтметра в режим VDC
        DriverSet VOLTAGE_METER RESET
        DriverSet VOLTAGE_METER Func = VDC
    #Установка тока нагрузки    
        DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
        math mem_3998 = mem_3999 * I_max3
        call TOK_NAGRUZKI
EndInterrupt


#########################################################################################################################################################################
#############        Начальные установки для определения основной нестабильности выходного напряжения при изменении тока нагрузки        #################################

Interrupt before INSTB_U_Inagr1 first_in_script
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    #Перевод вольтметра в режим VDC
        DriverSet VOLTAGE_METER RESET
        DriverSet VOLTAGE_METER Func = VDC
EndInterrupt

Interrupt before INSTB_U_Inagr2 first_in_script
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    #Перевод вольтметра в режим VDC
        DriverSet VOLTAGE_METER RESET
        DriverSet VOLTAGE_METER Func = VDC
EndInterrupt

Interrupt before INSTB_U_Inagr3 first_in_script
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    #Перевод вольтметра в режим VDC
        DriverSet VOLTAGE_METER RESET
        DriverSet VOLTAGE_METER Func = VDC
EndInterrupt


#########################################################################################################################################################################
####################################        Начальные установки для определения пульсаций выходного напряжения ########################################################

Interrupt before PVDC1 first_in_script
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    #Перевод вольтметра в режим VDC
        DriverSet VOLTAGE_METER RESET
        DriverSet VOLTAGE_METER Func = VDC
        
        DriverSet PULS_METER   RESET
EndInterrupt

Interrupt before PVDC2 first_in_script
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    #Перевод вольтметра в режим VDC
        DriverSet VOLTAGE_METER RESET
        DriverSet VOLTAGE_METER Func = VDC
        
        DriverSet PULS_METER   RESET
EndInterrupt

Interrupt before PVDC3 first_in_script
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    #Перевод вольтметра в режим VDC
        DriverSet VOLTAGE_METER RESET
        DriverSet VOLTAGE_METER Func = VDC
        
        DriverSet PULS_METER   RESET
EndInterrupt


#########################################################################################################################################################################
####################################        Начальные установки для определения основной погрешности установки выходного тока ########################################################


Interrupt before IDC1 first_in_script
    # Перевод нагрузки в режим СC
        DriverSet LOAD_MODEL MODE = CC
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Установка диапазона для амперметра
        If I_max1 <= 30
            DriverSet CURRENT_METER Range_IDC = 30                            #    установка предела измерений амперметра 30А
        Else
            DriverSet CURRENT_METER Range_IDC = 300                            #    установка предела измерений амперметра 300А
        Endif
    # Установка выходного напряжения источника    
        DriverSet LOAD_MODEL Load = Off
        math mem_2100 = mem_2001 * U_max1
        If Interface = true
            DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
            else
            Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
        endif
    # Установка тока нагрузки    
        DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
        math mem_3998 = mem_3999 * I_max1
        call TOK_NAGRUZKI
EndInterrupt

Interrupt before IDC2 first_in_script
    # Перевод нагрузки в режим СC
        DriverSet LOAD_MODEL MODE = CC
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Установка диапазона для амперметра
        If I_max2 <= 30
            DriverSet CURRENT_METER Range_IDC = 30                            #    установка предела измерений амперметра 30А
        Else
            DriverSet CURRENT_METER Range_IDC = 300                            #    установка предела измерений амперметра 300А
        Endif
    # Установка выходного напряжения источника    
        DriverSet LOAD_MODEL Load = Off
        math mem_2100 = mem_2001 * U_max2
        If Interface = true
            DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
            else
            Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
        endif
    # Установка тока нагрузки    
        DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
        math mem_3998 = mem_3999 * I_max2
        call TOK_NAGRUZKI

EndInterrupt

Interrupt before IDC3 first_in_script
    # Перевод нагрузки в режим СC
        DriverSet LOAD_MODEL MODE = CC
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Установка диапазона для амперметра
        If I_max3 <= 30
            DriverSet CURRENT_METER Range_IDC = 30                            #    установка предела измерений амперметра 30А
        Else
            DriverSet CURRENT_METER Range_IDC = 300                            #    установка предела измерений амперметра 300А
        Endif
    # Установка выходного напряжения источника    
        DriverSet LOAD_MODEL Load = Off
        math mem_2100 = mem_2001 * U_max3
        If Interface = true
            DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
            else
            Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
        endif
    # Установка тока нагрузки    
        DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
        math mem_3998 = mem_3999 * I_max3
        call TOK_NAGRUZKI

EndInterrupt


#########################################################################################################################################################################
#############        Начальные установки для определения основной нестабильности выходного тока при изменении напряжения питания        #################################


Interrupt before INSTB_I_Upit1 first_in_script
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Установка диапазона для амперметра
        If I_max1 <= 30
            DriverSet CURRENT_METER Range_IDC = 30                            #    установка предела измерений амперметра 30А
        Else
            DriverSet CURRENT_METER Range_IDC = 300                            #    установка предела измерений амперметра 300А
        Endif
EndInterrupt

Interrupt before INSTB_I_Upit2 first_in_script
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Установка диапазона для амперметра
        If I_max2 <= 30
            DriverSet CURRENT_METER Range_IDC = 30                            #    установка предела измерений амперметра 30А
        Else
            DriverSet CURRENT_METER Range_IDC = 300                            #    установка предела измерений амперметра 300А
        Endif
EndInterrupt

Interrupt before INSTB_I_Upit3 first_in_script
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Установка диапазона для амперметра
        If I_max3 <= 30
            DriverSet CURRENT_METER Range_IDC = 30                            #    установка предела измерений амперметра 30А
        Else
            DriverSet CURRENT_METER Range_IDC = 300                            #    установка предела измерений амперметра 300А
        Endif
EndInterrupt


#########################################################################################################################################################################
#############        Начальные установки для определения основной нестабильности выходного тока при изменении напряжения нагрузки        #################################


Interrupt before INSTB_I_Unagr1 first_in_script
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Установка диапазона для амперметра
        If I_max1 <= 30
            DriverSet CURRENT_METER Range_IDC = 30                            #    установка предела измерений амперметра 30А
        Else
            DriverSet CURRENT_METER Range_IDC = 300                            #    установка предела измерений амперметра 300А
        Endif
EndInterrupt

Interrupt before INSTB_I_Unagr2 first_in_script
# Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Установка диапазона для амперметра
        If I_max2 <= 30
            DriverSet CURRENT_METER Range_IDC = 30                            #    установка предела измерений амперметра 30А
        Else
            DriverSet CURRENT_METER Range_IDC = 300                            #    установка предела измерений амперметра 300А
        Endif
EndInterrupt

Interrupt before INSTB_I_Unagr3 first_in_script
# Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Установка диапазона для амперметра
        If I_max3 <= 30
            DriverSet CURRENT_METER Range_IDC = 30                            #    установка предела измерений амперметра 30А
        Else
            DriverSet CURRENT_METER Range_IDC = 300                            #    установка предела измерений амперметра 300А
        Endif
EndInterrupt


#########################################################################################################################################################################
####################################        Начальные установки для определения пульсаций выходного тока ########################################################


Interrupt before PIDC1 first_in_script
    # Перевод нагрузки в режим СC
        DriverSet LOAD_MODEL MODE = CC
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Установка диапазона для амперметра
        If I_max1 <= 30
            DriverSet CURRENT_METER Range_IDC = 30                            #    установка предела измерений амперметра 30А
        Else
            DriverSet CURRENT_METER Range_IDC = 300                            #    установка предела измерений амперметра 300А
        Endif

        DriverSet PULS_METER   RESET
    # Установка тока нагрузки    
        DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
        math mem_3998 = mem_3999 * I_max1
        call TOK_NAGRUZKI
    # Установка выходного тока источника    
        math mem_3100 = mem_3001 * I_max1                                    
        If Interface = true
            DriverSet Model_SI_Driver IDC = mem_3100                                                    # для удаленно управляемого источника
            else
            message "На поверяемом источнике установите регулятором выходного тока значение mem_3100 А"    # для источника без интерфейса
        endif
EndInterrupt

Interrupt before PIDC2 first_in_script
    # Перевод нагрузки в режим СC
        DriverSet LOAD_MODEL MODE = CC
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Установка диапазона для амперметра
        If I_max2 <= 30
            DriverSet CURRENT_METER Range_IDC = 30                            #    установка предела измерений амперметра 30А
        Else
            DriverSet CURRENT_METER Range_IDC = 300                            #    установка предела измерений амперметра 300А
        Endif

        DriverSet PULS_METER   RESET
    # Установка тока нагрузки    
        DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
        math mem_3998 = mem_3999 * I_max2
        call TOK_NAGRUZKI
    # Установка выходного тока источника    
        math mem_3100 = mem_3001 * I_max2                                    
        If Interface = true
            DriverSet Model_SI_Driver IDC = mem_3100                                                    # для удаленно управляемого источника
            else
            message "На поверяемом источнике установите регулятором выходного тока значение mem_3100 А"    # для источника без интерфейса
        endif
EndInterrupt

Interrupt before PIDC3 first_in_script
    # Перевод нагрузки в режим СC
        DriverSet LOAD_MODEL MODE = CC
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Установка диапазона для амперметра
        If I_max3 <= 30
            DriverSet CURRENT_METER Range_IDC = 30                            #    установка предела измерений амперметра 30А
        Else
            DriverSet CURRENT_METER Range_IDC = 300                            #    установка предела измерений амперметра 300А
        Endif

        DriverSet PULS_METER   RESET
    # Установка тока нагрузки    
        DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
        math mem_3998 = mem_3999 * I_max3
        call TOK_NAGRUZKI
    # Установка выходного тока источника    
        math mem_3100 = mem_3001 * I_max3                                    
        If Interface = true
            DriverSet Model_SI_Driver IDC = mem_3100                                                    # для удаленно управляемого источника
            else
            message "На поверяемом источнике установите регулятором выходного тока значение mem_3100 А"    # для источника без интерфейса
        endif
EndInterrupt




#######################################################################################################################################################################################
##########   M   E   M   ###########################################################################################################################################################
#######################################################################################################################################################################################

#mem_1xxx - данные для заполнения таблиц по условиям проведения поверки + номера пунктов "Внешнего осмотра" и "Опробования"
#mem_2xxx - данные для заполнения таблиц по напряжению
#mem_3xxx - данные для заполнения таблиц по току
#mem_4xxx - данные для заполнения таблиц по сопротивлению
#mem_х1xx - данные для заполнения таблиц в отчет



#mem_2-предел допускаемой погрешности
#mem_3-нижняя граница допуска
#mem_4-верхняя граница допуска
#mem_5-измеренное значение
#mem_6-абсолютная погрешность
#mem_7-относительная погрешность
#mem_8-годовая нестабильность
#mem_9-вывод
#mem_10-прошлогоднее значение
#mem_11-внешний осмотр
#mem_12-опробование
#mem_13-
#mem_14-
#mem_15-
#mem_16-


