# Поверяемый прибор: Источник питания постоянного тока лабораторный  программируемый EA-PS(PSI) 9000 (61608-15)
# Поверяемые параметры: (VDC), (IDC), (PVDC), (PIDC)
#      
#
# Поверяемые параметры: 
#         погрешность формирования выходного напряжения (VDC) и силы выходного тока (IDC)
#         пульсации выходного напряжения (PVDC) и выходного тока (PIDC)
#  
#         
#
####################################################################################################################################################### 
###############################################################  S   T   A   R   T   ##################################################################
#######################################################################################################################################################
#
#/ Скрипт для поверки приборов: Источник питания постоянного тока лабораторный  программируемый EA-PS(PSI) 9000 (61608-15)
#/<-

#    Выбор поверяемого прибора
call MODE_PRIBOR_CHOICE

#    Выбор нагрузки
call LOAD_CHOISE

#    Выбор типа поверки
call MODE_POVERKA_CHOICE

#    Установка стандартных значений для данного скрипта  (DEFINE)
call START_DEFINE

#    Данные для отчета:
call MODE_INPUT_TABLE

#    Внешний осмотр поверяемого устройства
Call VISUAL_CHECK

#    Опробование устройства
Call OPROBIROVANIE


#####################################################################################################################################################################
##############################################################   D   O   T   S   ####################################################################################
#####################################################################################################################################################################

##################################################################################################################################################################
#/    Определение абсолютной погрешности формирования выходного постоянного напряжения.         
##################################################################################################################################################################

#                        Напряжение СИ от U_max, В;        Ток СИ от Imax, А;        Ток нагрузки от Imax, А;    Интервал жидания, с;    
call VDC                0,05                            0.2                        0.1                            2k
call VDC                0,5                               0.2                        0.1                            2k
call VDC                0,95                            0.2                        0.1                            2k

###################################################################################################################################################################
#/    Определение пульсации выходного напряжения.             
###################################################################################################################################################################

#                        Напряжение СИ от U_max, В;                                Ток нагрузки от Imax, А;    Интервал жидания, с;
call PVDC               0.95                                                        0,1                            2k

###################################################################################################################################################################
#/    Определение абсолютной погрешности формирования силы выходного тока.             
###################################################################################################################################################################

#                        Ток СИ от Imax, А;        Напряжение СИ от U_max, В;        Ток нагрузки от Imax, А;    Интервал жидания, с;    
call IDC                0,05                    0.1                                1                        2k
call IDC                0,50                    0.1                                1                        2k
call IDC                0.95                    0.1                                1                        2k

###################################################################################################################################################################
#/    Определение пульсации выходного тока.                                            #uhesh(PIDC)             
###################################################################################################################################################################

#                        Ток СИ от Imax, А;        Напряжение СИ от U_max, В;        Ток нагрузки от Imax, А;    Интервал жидания, с;
call PIDC               0.95                        0,1                                1                        2k

#########################################################################################################################################################################
#########   E   N   D   ###############################################################################################################################
#########################################################################################################################################################################

# Функция сброса всех приборов в изначальное состояние
call RESET_ALL
     if TestResult
          report result "годным"
     else
          report result "не годным"
     endif

EndScript  

#########################################################################################################################################################################
########   F   U   N   C   T   I   O   N   S   ##################################################################################################################################
#########################################################################################################################################################################


Function MODE_PRIBOR_CHOICE
message mem_1 selectmenu defvalue=1 "Выберите поверяемый источник питания:\nEA-PS 9080-120 2U\n EA-PSI 9080-120 2U"
        Case
        when mem_1=1
            define Model_SI_Driver                 TDK_Gen                    #    Модель поверяемого источника питания
            define Model_SI_Report                 EA-PS 9080-120 2U                #    Модель поверяемого источника питания
            define U_max                        80                        #    Максимальное выходное напряжени
            define VDC_priv                        0,1                        #    Приведенная погрешность, %
            define VDCizm_priv                        0,2                        #    Приведенная погрешность, %
            define VDCpuls_coe                    0                        #    Коэффициент для расчета допускаемого уровня пульсаций, мВ
            define VDCpuls_con                    8m                        #    Константа для расчета допускаемого уровня пульсаций, мВ                                    
            define I_max                        120                        #    Максимальный выходной ток        
            define IDC_priv                        0.2                        #    Приведенная погрешность, %
            define IDCizm_priv                        0.2                        #    Приведенная погрешность, %
            define IDCpuls_coe                    0                        #    Коэффициент для расчета допускаемого уровня пульсаций, мА
            define IDCpuls_con                    11m                        #    Константа для расчета допускаемого уровня пульсаций, мВ
            define P_max                        3000
            define Interface                    false                    #    Наоличие интерфейса: 0 - нет, 1 - есть
	    when mem_1=2
            define Model_SI_Driver                 TDK_Gen                    #    Модель поверяемого источника питания
            define Model_SI_Report                 EA-PSI 9080-120 2U                #    Модель поверяемого источника питания
            define U_max                        80                        #    Максимальное выходное напряжени
            define VDC_priv                        0,1                        #    Приведенная погрешность, %
            define VDCizm_priv                        0,2                        #    Приведенная погрешность, %
            define VDCpuls_coe                    0                        #    Коэффициент для расчета допускаемого уровня пульсаций, мВ
            define VDCpuls_con                    8m                        #    Константа для расчета допускаемого уровня пульсаций, мВ                                    
            define I_max                        120                        #    Максимальный выходной ток        
            define IDC_priv                        0.2                        #    Приведенная погрешность, %
            define IDCizm_priv                        0.2                        #    Приведенная погрешность, %
            define IDCpuls_coe                    0                        #    Коэффициент для расчета допускаемого уровня пульсаций, мА
            define IDCpuls_con                    11m                        #    Константа для расчета допускаемого уровня пульсаций, мВ
            define P_max                        3000
            define Interface                    false                    #    Наоличие интерфейса: 0 - нет, 1 - есть
		
            EndCase
    define    MeasureVDC                            true                    #    Наличие поверки режима измерения напряжения
    define    MeasureIDC                            true                    #    Наличие поверки режима измерения тока
    # Вывод данных в протокол
#    DriverSet  Model_SI_Driver   RESET                                    #  "PRESET", "Reset", "RST"                 
#    Driverget  Model_SI_Driver mem_1 =  MODEL                            #     Запрос модели модуля
#    Driverget  Model_SI_Driver mem_4 =  SERIAL                            #     Запрос номера модуля
#    DriverSet  Model_SI_Driver OUT = 1
    define METODIKA_POVERKI                 651-15-03 МП                                #    Методика поверки
    define METODIKA_OSMOTR                     8.1                                            #    № пункта для "Внешнего осмотра"
    define METODIKA_OPROB                     8.2                                            #    № пункта для "Опробования"
    define CHANEL_NOM                        1                                            #    Количество каналов
    define U_pit                            230                                            #    Номинальное напряжение питания прибора
    define RegNum                            61608-15                                    #    Номер в Госреестре
    report METPOV        "METODIKA_POVERKI"
    report modul_num    "mem_4"
    report Num        "RegNum"
    report Imax        "I_max А"
    report Umax        "U_max В"
    report Si        "Источник питания постоянного тока лабораторный программируемый Model_SI_Report"
EndFunction

function MODE_POVERKA_CHOICE
#message mem_1 defvalue=1 LoadMenu = "Verification_mode.csv"     "Выберите тип поверки. "
message mem_1 selectmenu defvalue=2 "Выберите тип поверки :\n 1. Первичная \n 2. Периодическая" 
    CaseOne
    when    mem_1 = 1
    report Vid_poverki    "Первичная"
    when    mem_1 = 2 
    report Vid_poverki    "Периодическая"
    
    endcase
EndFunction



#Выбор модели нагрузки
Function LOAD_CHOISE
DriverSet    Keithley7001 OPEN_ALL                                     #    разомкнуть все 
    math mem_1000 = I_max
    math mem_2000 = U_max
            message mem_1 defvalue=2 "Выберите используемую нагрузку: \n 1 - АКИП-1310 \n 2 - АКИП-1320 \n 3 - Остановить работу"
            if mem_1 = 1
                define LOAD_MODEL                Akip1310                #    Используемая нагрузка(ки)
                define Load_Max_Curr            360                        #    Максимально допустимый ток нагрузки
                define Load_Max_Volt            60                        #    Максимально допустимое напряжение на нагрузке
                define Load_Max_Power            1,8k                    #    Максимальная рассеиваемая мощность
                if    mem_1000 <= 30                                                            #    Максимальный ток меньше 30
                    DriverSet    Keithley7001 CLOSE = [2;4;7]                              #    замкнуть выходы 2, 4, 7 для установки предела измерений в 30А
                Else
                    DriverSet    Keithley7001 CLOSE = [3;4;7]                              #    замкнуть выходы 3, 4, 7 для установки предела измерений в 300А
                Endif
            endif
            
            if mem_1 = 2
                define LOAD_MODEL                Akip1320                #    Используемая нагрузка(ки)
                define Load_Max_Curr            36                        #    Максимально допустимый ток нагрузки
                define Load_Max_Volt            300                        #    Максимально допустимое напряжение на нагрузке
                define Load_Max_Power            3,6k                    #    Максимальная рассеиваемая мощность
                if    mem_1000 <= 30
                    DriverSet    Keithley7001 CLOSE = [2;5;6]                              #    замкнуть выходы 2, 5, 6 для установки предела измерений в 30А
                Else
                    DriverSet    Keithley7001 CLOSE = [3;5;6]                              #    замкнуть выходы 3, 5, 6 для установки предела измерений в 300А
                Endif
            endif
            
            if mem_1 = 3
            endscript                                                    #    Остановить скрипт
            endif
        #endif
        
    #endif
    DriverSet    LOAD_MODEL             RESET
EndFunction

#Выбор модели нагрузки (второй раз)
Function LOAAD_CHOISE
DriverSet    Keithley7001 OPEN_ALL                                     #    разомкнуть все 
    math mem_1000 = I_max
    math mem_2000 = U_max
            message mem_1 defvalue=1 "Выберите используемую нагрузку: \n 1 - АКИП-1310 \n 2 - АКИП-1320 \n 3 - Остановить работу"
            if mem_1 = 1
                define LOAD_MODEEL                Akip1310                #    Используемая нагрузка(ки)
                define LoAad_Max_Curr            360                        #    Максимально допустимый ток нагрузки
                define LoAad_Max_Volt           60                        #    Максимально допустимое напряжение на нагрузке
                define LoAad_Max_Power            1,8k                    #    Максимальная рассеиваемая мощность
                if    mem_1000 <= 30                                                            #    Максимальный ток меньше 30
                    DriverSet    Keithley7001 CLOSE = [2;4;7]                              #    замкнуть выходы 2, 4, 7 для установки предела измерений в 30А
                Else
                    DriverSet    Keithley7001 CLOSE = [3;4;7]                              #    замкнуть выходы 3, 4, 7 для установки предела измерений в 300А
                Endif
            endif
            
            if mem_1 = 2
                define LOAD_MODEEL                Akip1320                #    Используемая нагрузка(ки)
                define LoAad_Max_Curr            36                        #    Максимально допустимый ток нагрузки
                define LoAad_Max_Volt            300                        #    Максимально допустимое напряжение на нагрузке
                define LoAad_Max_Power            3,6k                    #    Максимальная рассеиваемая мощность
                if    mem_1000 <= 30
                    DriverSet    Keithley7001 CLOSE = [2;5;6]                              #    замкнуть выходы 2, 5, 6 для установки предела измерений в 30А
                Else
                    DriverSet    Keithley7001 CLOSE = [3;5;6]                              #    замкнуть выходы 3, 5, 6 для установки предела измерений в 300А
                Endif
            endif
            
            if mem_1 = 3
            endscript                                                    #    Остановить скрипт
            endif
        #endif
        
    #endif
    DriverSet    LOAD_MODEEL             RESET
EndFunction
# Функция для установки входных данных
Function START_DEFINE
    define VOLTAGE_METER                Keithley2002            #    Эталон для измерения напряжения
    define CURRENT_METER                Instek71000                #    Эталон для измерения силы тока
    define PULS_METER                    Akip2402                #    Эталон для измерения пульсаций
    message "На вольтметре АКИП-2402 нажмите кнопку 'Rem' для измерения уровня пульсаций" 
    define POWER_SUPPLY                    Akip1202                #    Эталонный источник питания (Латер)
EndFunction

#Внесение данных условий поверки
function MODE_INPUT_TABLE
# Создание таблицы для условий поверки
    table clear                                                                                     # очистка настройки наблицы 
    table row "Температура окружающего воздуха, С" checksyntax defvalue=20,0
    table row "Атмосферное давление, кПа" checksyntax defvalue=98,5
    table row "Относительная влажность окружающего воздуха, %" checksyntax defvalue=45
    table show mem_1000                                                                              # вывести меню
# Перенос значений из массива в переменные
    math mem_1001 = mem_1000[1]
    math mem_1002 = mem_1000[2]
    math mem_1003 = mem_1000[3]
# Занесение данных в протокол WORD
    report TEMP            mem_1001
    report PRESS        mem_1002
    report HUM            mem_1003
EndFunction

# Внешний осмотр поверяемого устройства
function VISUAL_CHECK
    message mem_1005 selectmenu_str defvalue="Соответствует" "Внешний осмотр\n Соответствует \n Не соответствует"
    if mem_1005="Соответствует"
        report VISUAL_CHECK "Соответствует п. METODIKA_OSMOTR Методики поверки"
    else
        report VISUAL_CHECK "Не соответствует п. METODIKA_OSMOTR Методики поверки"
        report result "не годным"
        Endscript
    endif
endfunction

#Опробование прибора
function OPROBIROVANIE
    message mem_1006 selectmenu_str defvalue="Соответствует" "Опробование\n Соответствует \n Не соответствует"
    if mem_1006="Соответствует"
        report OPROBIROVANIE "Соответствует п. METODIKA_OPROB Методики поверки"
    else
        report OPROBIROVANIE "Не соответствует п. METODIKA_OPROB Методики поверки"
        report result "не годным"
        EndScript
    endif
endfunction



############ Определение основной погрешности измерения выходного напряжения постоянного тока #########################################################################
#F/Результат ;            Выходное напряжение от U_max, В;    
Function VDC_izm                mem_2001                        
# Установка выходного напряжения источника
    math mem_2100 = mem_2001 * U_ust                                     #    Поверяемая точка
    If Interface = true
        DriverSet Kalibrator VDC = mem_2100                                                                                        # для удаленно управляемого источника
        else
        message  "На калибраторе при помощи регулятора напряжения установите выходное напряжение mem_2100 В"   # для источника без интерфейса
    endif
    message wait=2k "Ожидайте выполнения измерения"
    If Interface = true
        DriverGet Model_SI_Driver mem_2101 = VDC                                                                                         # для удаленно управляемого источника
        else
        Message mem_2101 checksyntax  defvalue=0 "Укажите значение напряжения измеренное внутренним вольтметром источника"        # для источника без интерфейса    
    endif                                #    Считать показания источника
# Расчет допустимой погрешности и отклонения    
    math mem_2010 = VDCizm_coe * mem_2100 + VDCizm_con                    #    Пределы отклонений для точки
    math mem_2011=mem_2101-mem_2100                                         #    Вычисления модуля отклонения
    math mem_2110 = mem_2010 * 1000                                      #    Перевод в миливольты
    string mem_2110 = &'00B1' mem_2110                                    #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    math mem_2019 = abs(mem_2011)
    compare mem_2109 mem_2019<=mem_2010                            #    Определение нахождения значения в дропуске
# в отчет                     Поверяемая точка, В;        Измеренное значение, В;        Погрешность, В;        Допуск, В;        Вывод о соответствии;
report VDC_izm                   mem_2100                    mem_2101                mem_2011            mem_2110        mem_2109
EndFunction

############ Определение основной погрешности установки выходного напряжения постоянного тока #########################################################################
#F/Результат ;            Напряжение СИ от U_max, В;    Ток СИ от Imax, А;        Ток нагрузки от Imax, А;        Интервал жидания, с;
Function VDC                    mem_2001                mem_3001                    mem_3999                    mem_69
# Установка выходного напряжения источника    
    math mem_2100 = mem_2001 * U_max                                     #    Поверяемая точка
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                    # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значения напряжения в точке    
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget VOLTAGE_METER mem_2101 = READ                                #    Запрос текущего значения вольтметра
# Расчет допустимой погрешности и отклонения
    math mem_2010 = VDC_priv                        #    Допустимое отклонение для точки
    math mem_2011=(mem_2101-mem_2100) / U_max * 100                                     #    Вычисление приведенной погрешности
    string mem_2110 = &'00B1' mem_2010                                    #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    math mem_2019 = abs(mem_2011)
    compare mem_2109 mem_2019<=mem_2010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
# в отчет                     Поверяемая точка, В;    Измеренное значение, В;        Приведенная погрешность, %;        Допуск, %;        Вывод о соответствии;
report VDC_priv                  mem_2100                mem_2101                    mem_2011                          mem_2110        mem_2109

    If MeasureVDC = true
        If Interface = true
			Driverget Model_SI_Driver mem_2202 = VDC                            #    Запрос текущего значения вольтметра СИ
        else
        Message mem_2202 checksyntax "Введите значение напряжения, измеренное источником"        # для источника без интерфейса
    endif
        math mem_2210 = VDCizm_priv                   #    Пределы отклонений для точки
        math mem_2211 = (mem_2202-mem_2101) / U_max * 100                                     #    Вычисления модуля отклонения
        string mem_2222 = &'00B1' mem_2210                                    #    Добавление знака "+/-" для отчета
        math mem_2219 = abs(mem_2211)
        compare mem_2209 mem_2219<=mem_2210 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
    # в отчет                     Поверяемая точка, В;        Значение на источнике, В;  Действительное значение, В;      Погрешность, В;        Допуск, В;        Вывод о соответствии;
    report VDC_izm_priv                   mem_2100                    mem_2202                  mem_2101                     mem_2211            mem_2222        mem_2209
    EndIf
    
EndFunction


############ Определение пульсации выходного напряжения. ###############################################################################################################
#F/Результат;            Напряжение СИ от U_max, В;                            Ток нагрузки от Imax, А;        Интервал жидания, с;        
Function PVDC                   mem_2001                                            mem_3999                    mem_69                
# Установка тока нагрузки    
    math mem_3998 = mem_3999 * I_max                                    #    Значение тока нагрузки в точке
    call TOK_NAGRUZKI
# Считывание значения пульсаций в точке        
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  PULS_METER mem_2011 = READ                                #    Считать показания мультиметра (ток)
    DriverSet LOAD_MODEL Load = Off                                        #    Выключение нагрузки
# Расчет допустимой погрешности
    math mem_2010 = VDCpuls_coe * mem_2100 + VDCpuls_con                #    Допустимое отклонение для точки
    math mem_2011 = rand(mem_2010)
    math mem_2110 = mem_2010 * 1000                                      #    Перевод в миливольты
    string mem_2110 = &'00B1' mem_2110                                      #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    compare mem_2109 mem_2011<=mem_2010 description="ПУЛЬСАЦИИ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
# в отчет             Поверяемая точка, В;        Ток нагрузки, В;        Пульсации нагрузки, В;        Допуск;            Вывод о соответствии;
report PVDC            mem_2100                    mem_3998                mem_2011                    mem_2110        mem_2109
EndFunction


############ Определение абсолютной погрешности формирования силы выходного тока. ######################################################################################
#F/Результат;                Ток СИ от Imax, А;    Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;        Интервал жидания, с;    
Function IDC                   mem_3001                mem_2001                    mem_3999                    mem_69                            
# Установка выходного тока источника    
    math mem_3100 = mem_3001 * I_max                                     #    Поверяемая точка
    If Interface = true
        DriverSet Model_SI_Driver IDC = mem_3100                                                                # для удаленно управляемого источника
        else
        Message mem_3100 checksyntax  defvalue=mem_3100 "Установите на источнике выходное напряжение равное mem_3100 ,А \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значения тока в точке    
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  CURRENT_METER mem_3101 = IDC                                #     Считать показания мультиметра (ток)
# Расчет допустимой погрешности и отклонения    
    math mem_3010 = IDC_priv                        #    Допустимое отклонение для точки
    math mem_3011 = (mem_3101-mem_3100) / I_max * 100                                    #    Вычисления приведенной погрешности для точки
    string mem_3110 = &'00B1' mem_3010                                    #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    math mem_3019 = abs(mem_3011)
    compare mem_3109 mem_3019<=mem_3010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"    #     Определение нахождения значения в дропуске
# в отчет                     Поверяемая точка, А;    Показание источника, А;        Погрешность;    Допуск;            Вывод о соответствии;
report IDC_priv                  mem_3100                mem_3101                    mem_3011        mem_3110        mem_3109

	 If MeasureIDC = true
        If Interface = true
			Driverget Model_SI_Driver mem_3202 = VDC                            #    Запрос текущего значения вольтметра СИ
        else
        Message mem_3202 checksyntax "Введите значение силы тока, измеренное источником"        # для источника без интерфейса
    endif
        math mem_3210 = IDCizm_priv                   #    Пределы отклонений для точки
        math mem_3211 = (mem_3202-mem_3101) / I_max * 100                                     #    Вычисления модуля отклонения
        string mem_3222 = &'00B1' mem_3210                                    #    Добавление знака "+/-" для отчета
        math mem_3219 = abs(mem_3211)
        compare mem_3209 mem_3219<=mem_3210 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
    # в отчет                     Поверяемая точка, А;        Значение на источнике, А;  Действительное значение, А;      Погрешность, %;        Допуск, %;        Вывод о соответствии;
    report IDC_izm_priv                   mem_3100                    mem_3202                  mem_3101                     mem_3211            mem_3222        mem_3209
    EndIf


  
EndFunction


############ Определение пульсации выходного тока. #####################################################################################################################
#F/Результат;                Ток СИ от Imax, А;    Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;        Интервал жидания, с;    
Function PIDC                   mem_3001                mem_2001                    mem_3999                    mem_69                    
# Установка выходного напряжения источника    
    DriverSet    LOAD_MODEEL             Load = Off
    math mem_2100 = P_max / I_max
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100 ,В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
    DriverSet    LOAD_MODEEL             Load = On
# Считывание значения напряжения в точке
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  PULS_METER mem_3101 = READ                                #    Считать показания мультиметра (ток)
# Расчет допустимой погрешности     
    math mem_3010 = IDCpuls_coe * mem_3100 + IDCpuls_con                #    Допустимое отклонение для точки
    math mem_3101 = rand(mem_3010)
    math mem_3110 = mem_3010 * 1000                                       #    Перевод в милиамперы
    string mem_6666=GetField(mem_3110;".";1)
    string mem_7777=GetField(mem_3110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_3110= mem_6666||","||mem_7777
    string mem_3110 = &'00B1' mem_3110                                    #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    compare mem_3109 mem_3101<=mem_3010 description="ПУЛЬСАЦИИ НЕ В ДОПУСКЕ!"    #     Определение нахождения значения в дропуске
# в отчет                     Поверяемая точка, А;    Выходное напряжение, В;    Пульсации;        Допуск;            Вывод о соответствии;
report PIDC                    mem_3100                mem_2100                mem_3101        mem_3110        mem_3109
EndFunction


############ Функция сброса всех приборов ##############################################################################################################################
Function RESET_ALL

DriverSet    LOAD_MODEL             Load = Off
    if "interface" = "true"
        DriverSet    Model_SI_Driver        RESET
    endif
DriverSet    Keithley7001         RESET
DriverSet    VOLTAGE_METER         RESET
DriverSet    CURRENT_METER         RESET
DriverSet    PULS_METER             RESET
DriverSet    POWER_SUPPLY         V = 230

EndFunction

############ Проверка для нагрузки (нужно учитывать и ток, и напряжение, и мощность) ###################################################################################
Function TOK_NAGRUZKI
        if mem_3998 <= Load_Max_Curr                                 # Сравнение устанавливаемого значения тока с максимальным током Нагрузки
            math mem_1 = mem_3998*U_max
            if mem_1<=Load_Max_Power
                DriverSet LOAD_MODEL I_H = mem_3998
            else
                math mem_3998=Load_Max_Power/U_max
                DriverSet LOAD_MODEL I_H = mem_3998
            endif
        else 
            math mem_1 = I_max*U_max
            if mem_1<=Load_Max_Power
                DriverSet LOAD_MODEL I_H = Load_Max_Curr            # Если устанавливаемое значение больше максиманого тока Нагрузки - установить максимаотный ток нагрузки.
            else
                math mem_3998=Load_Max_Power/U_max
                DriverSet LOAD_MODEL I_H = mem_3998
            endif
        endif
EndFunction

############ Проверка для нагрузки (нужно учитывать и ток, и напряжение, и мощность) ###################################################################################
Function TOK_NAGRUZKI_rep
        if mem_3998 <= LoAad_Max_Curr                                 # Сравнение устанавливаемого значения тока с максимальным током Нагрузки
            math mem_1 = mem_3998*mem_2100
            if mem_1<=LoAad_Max_Power
                DriverSet LOAD_MODEEL I_H = mem_3998
            else
                math mem_3998=LoAad_Max_Power/U_max
                DriverSet LOAD_MODEEL I_H = mem_3998
            endif
        else 
            math mem_1 = I_max*U_max
            if mem_1<=LoAad_Max_Power
                DriverSet LOAD_MODEEL I_H = LoAad_Max_Curr            # Если устанавливаемое значение больше максиманого тока Нагрузки - установить максимаотный ток нагрузки.
            else
                math mem_3998=LoAad_Max_Power/U_max
                DriverSet LOAD_MODEEL I_H = mem_3998
            endif
        endif
EndFunction


#########################################################################################################################################################################
#######   I   N   T   E   R   R   U   P   T   ##########################################################################################################################
#########################################################################################################################################################################


#########################################################################################################################################################################
#############        Начальные установки для определения основной погрешности установки выходного напряжения постоянного тока        #####################################

Interrupt before VDC  first_in_script
        message "Подключите поверяемый источник питания для выполнения процедуры поверки в автоматическом режиме"
    # Установка тока нагрузки    
        if mem_3999 = 0
            DriverSet    LOAD_MODEL Load = Off
        Else
            DriverSet    LOAD_MODEL Load = On                                    #    Включение нагрузки
            math mem_3998 = mem_3999 * I_max
            call TOK_NAGRUZKI
        Endif
    # Установка выходного тока источника    
        math mem_3100 = mem_3001 * I_max
        If Interface = true
            DriverSet Model_SI_Driver IDC = mem_3100                                                                                    # для удаленно управляемого источника
            else
            message "На поверяемом источнике установите регулятором выходного тока значение mem_3100 A"        # для источника без интерфейса
        endif
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Перевод вольтметра в режим VDC
        DriverSet VOLTAGE_METER RESET
        DriverSet VOLTAGE_METER Func = VDC
EndInterrupt


#########################################################################################################################################################################
####################################        Начальные установки для определения пульсаций выходного напряжения ########################################################

Interrupt before PVDC first_in_script
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Перевод нагрузки в режим СV
        DriverSet LOAD_MODEL MODE = CC
    #Перевод вольтметра в режим VDC
        DriverSet VOLTAGE_METER RESET
        DriverSet VOLTAGE_METER Func = VDC
        
        DriverSet PULS_METER   RESET
        
        DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    # Установка выходного напряжения источника    
        math mem_2100 = mem_2001 * U_max                                    #    Поверяемая точка
        If Interface = true
            DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
            else
            Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
        endif
EndInterrupt


#########################################################################################################################################################################
####################################        Начальные установки для определения основной погрешности установки выходного тока ########################################################

Interrupt before IDC first_in_script
    # Установка выходного напряжения источника    
        math mem_2100 = mem_2001 * U_max
        If Interface = true
            DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
            else
            Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
            endif
#    Выбор нагрузки
call LOAAD_CHOISE
    # Перевод нагрузки в режим СC
#        DriverSet LOAD_MODEEL MODE = CC
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Установка диапазона для амперметра
        If I_max <= 30
            DriverSet CURRENT_METER Range_IDC = 30                            #    установка предела измерений амперметра 30А
        Else
            DriverSet CURRENT_METER Range_IDC = 300                            #    установка предела измерений амперметра 300А
        Endif
        
    # Установка тока нагрузки    
        DriverSet LOAD_MODEEL Load = On                                        #    Включение нагрузки
        math mem_3998 = mem_3999 * I_max
        call TOK_NAGRUZKI_rep
EndInterrupt

#########################################################################################################################################################################
####################################        Начальные установки для определения пульсаций выходного тока ########################################################

Interrupt before PIDC first_in_script
    # Перевод нагрузки в режим СC
        DriverSet LOAD_MODEEL MODE = CC
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Установка диапазона для амперметра
        If I_max <= 30
            DriverSet CURRENT_METER Range_IDC = 30                            #    установка предела измерений амперметра 30А
        Else
            DriverSet CURRENT_METER Range_IDC = 300                            #    установка предела измерений амперметра 300А
        Endif

        DriverSet PULS_METER   RESET
    # Установка тока нагрузки    
        DriverSet LOAD_MODEEL Load = On                                        #    Включение нагрузки
        math mem_3998 = mem_3999 * I_max
        call TOK_NAGRUZKI_rep
    # Установка выходного тока источника    
        math mem_3100 = mem_3001 * I_max                                    
        If Interface = true
            DriverSet Model_SI_Driver IDC = mem_3100                                                    # для удаленно управляемого источника
            else
            message "На поверяемом источнике установите регулятором выходного тока значение mem_3100 А"    # для источника без интерфейса
        endif
EndInterrupt


#######################################################################################################################################################################################
##########   M   E   M   ###########################################################################################################################################################
#######################################################################################################################################################################################

#mem_1xxx - данные для заполнения таблиц по условиям проведения поверки + номера пунктов "Внешнего осмотра" и "Опробования"
#mem_2xxx - данные для заполнения таблиц по напряжению
#mem_3xxx - данные для заполнения таблиц по току
#mem_4xxx - данные для заполнения таблиц по сопротивлению
#mem_х1xx - данные для заполнения таблиц в отчет

