# Поверяемый прибор: Источники питания постоянного тока E36311A, E36312A, E36313A (69454-17)
# Поверяемые параметры: (VDC), (IDC), (INSTB_U_Upit), (INSTB_I-Upit), (INSTB_U_Inagr), (INSTB_I_Unagr), (PVDC), (PIDC)
#      
#
# Поверяемые параметры: 
#         погрешность формирования выходного напряжения (VDC) и силы выходного тока (IDC)
#         пульсации выходного напряжения (PVDC) и выходного тока (PIDC)
#         нестабильности при изменении напряжения питающей сети выходного напряжения (INSTB_U_Upit) и тока (INSTB_I_Upit) 
#         нестабильность выходного напряжения при изменении тока нагрузки (INSTB_U_Inagr)
#         нестабильность выходного тока при изменении выходного напряжения (INSTB_I_Unagr)   
#         
#
####################################################################################################################################################### 
###############################################################  S   T   A   R   T   ##################################################################
#######################################################################################################################################################
#
#/ Скрипт для поверки приборов: Источники питания постоянного тока E36311A, E36312A, E36313A (69454-17)
#/<-

#    Выбор поверяемого прибора
call MODE_PRIBOR_CHOICE

#    Выбор нагрузки
call LOAD_CHOISE

#    Выбор типа поверки
call MODE_POVERKA_CHOICE

#    Установка стандартных значений для данного скрипта  (DEFINE)
call START_DEFINE

#    Данные для отчета:
call MODE_INPUT_TABLE

#    Внешний осмотр поверяемого устройства
Call VISUAL_CHECK

#    Опробование устройства
Call OPROBIROVANIE


#####################################################################################################################################################################
##############################################################   D   O   T   S   ####################################################################################
#####################################################################################################################################################################

######## КАНАЛ 1 ####################################################################################################################################################
###################################################################################################################################################################
###################################################################################################################################################################

##################################################################################################################################################################
#/    Определение абсолютной погрешности формирования выходного постоянного напряжения.
##################################################################################################################################################################

#                    Номер канала;    Напряжение СИ от U_max, В;    Ток СИ от Imax, А;    Ток нагрузки от Imax, А;    Интервал ожидания, с;    
call VDC            1                     0,1                         1                            0                      2k
call VDC            1                     0,3                         1                            0                      2k
call VDC            1                     0,5                         1                            0                      2k
call VDC            1                     0,7                         1                            0                      2k
call VDC            1                     1                           1                            0                      2k

###################################################################################################################################################################
#/    Определение нестабильности выходного напряжения при изменении напряжения питающей сети.    
###################################################################################################################################################################

#                    Номер канала;    Напряжение СИ от U_max, В;    Ток СИ от Imax, А;    Ток нагрузки от Imax, А;    Интервал ожидания, с;    Напряжение питания от U_pit, В;        Количество измерений;
call INSTB_U_Upit        1                1                                    1              0,9                                2k                                1,1                        1                
call INSTB_U_Upit        1                1                                    1              0,9                                2k                                0,9                        1                

###################################################################################################################################################################
#/    Определение нестабильности выходного напряжения при изменении тока нагрузки.        
###################################################################################################################################################################

#                    Номер канала;    Напряжение СИ от U_max, В;    Ток СИ от Imax, А;    Ток нагрузки от Imax, А;    Интервал ожидания, с;    Выходной ток от I_max 2, А;        Количество измерений;
call INSTB_U_Inagr        1            1                                    1                            0.9                    2k                                0,1                        1            

###################################################################################################################################################################
#/    Определение пульсации выходного напряжения.        
###################################################################################################################################################################

#                    Номер канала;    Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;    Интервал жидания, с;
call PVDC               1                     1                              0,9                                2k

###################################################################################################################################################################
#/    Определение абсолютной погрешности формирования силы выходного тока.             
###################################################################################################################################################################

#                    Номер канала;    Ток СИ от Imax, А;        Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;    Интервал жидания, с;    
call IDC                1            0,1                             1                                    1.1                    2k
call IDC                1            0,3                             1                                    1.1                    2k
call IDC                1            0,5                             1                                    1.1                    2k
call IDC                1            0,7                             1                                    1.1                    2k
call IDC                1            1                               1                                    1.1                    2k

###################################################################################################################################################################
#/ Определение нестабильности выходного тока при изменении напряжения питающей сети.            
###################################################################################################################################################################

#                    Номер канала;    Ток СИ от Imax, А;        Напряжение СИ от U_max, В;     Ток нагрузки от Imax, А;    Интервал жидания, с;    Напряжение питания от U_pit, В;        Количество измерений;
call INSTB_I_Upit        1            1                            0,9                                    1.1                                2k                                     1,1                    1        
call INSTB_I_Upit        1            1                            0,9                                    1.1                                2k                                     0,9                    1        

###################################################################################################################################################################
#/    Определение нестабильности выходного тока при изменении выходного напряжения.            
###################################################################################################################################################################

#                    Номер канала;    Ток СИ от Imax, А;        Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;    Интервал жидания, с;    Выходное напряжение от U_max 2, В;    Количество измерений;
call INSTB_I_Unagr       1            1                                1                                1.1                                2k                                 0,1                        1    

###################################################################################################################################################################
#/    Определение пульсации выходного тока.                                            
###################################################################################################################################################################

#                    Номер канала;    Ток СИ от Imax, А;        Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;    Интервал жидания, с;
call PIDC               1            1                                1                                            1.1                            2k

######## КАНАЛ 2 ####################################################################################################################################################
###################################################################################################################################################################
###################################################################################################################################################################

##################################################################################################################################################################
#/    Определение абсолютной погрешности формирования выходного постоянного напряжения.
##################################################################################################################################################################

#                    Номер канала;    Напряжение СИ от U_max, В;    Ток СИ от Imax, А;    Ток нагрузки от Imax, А;    Интервал ожидания, с;    
call VDC                2            0,1                                    1                            0                                    2k
call VDC                2            0,3                                    1                            0                                    2k
call VDC                2            0,5                                    1                            0                                    2k
call VDC                2            0,7                                    1                            0                                    2k
call VDC                2            1                                    1                            0                                    2k

###################################################################################################################################################################
#/    Определение нестабильности выходного напряжения при изменении напряжения питающей сети.    
###################################################################################################################################################################

#                    Номер канала;    Напряжение СИ от U_max, В;    Ток СИ от Imax, А;    Ток нагрузки от Imax, А;    Интервал ожидания, с;    Напряжение питания от U_pit, В;        Количество измерений;
call INSTB_U_Upit        2            1                                    1                            0,9                                2k                                1,1                                            1                
call INSTB_U_Upit        2            1                                    1                            0,9                                2k                                0,9                                            1                

###################################################################################################################################################################
#/    Определение нестабильности выходного напряжения при изменении тока нагрузки.        
###################################################################################################################################################################

#                    Номер канала;    Напряжение СИ от U_max, В;    Ток СИ от Imax, А;    Ток нагрузки от Imax, А;    Интервал ожидания, с;    Выходной ток от I_max 2, A;        Количество измерений;
call INSTB_U_Inagr        2            1                                    1                            0.9                    2k                                0,1                        1                

###################################################################################################################################################################
#/    Определение пульсации выходного напряжения.        
###################################################################################################################################################################

#                    Номер канала;    Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;    Интервал жидания, с;
call PVDC               2            1                                        0,9                                2k

###################################################################################################################################################################
#/    Определение абсолютной погрешности формирования силы выходного тока.             
###################################################################################################################################################################

#                    Номер канала;    Ток СИ от Imax, А;        Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;    Интервал жидания, с;    
call IDC                2            0,1                             1                                    1.1                    2k
call IDC                2            0,3                             1                                    1.1                    2k
call IDC                2            0,5                             1                                    1.1                    2k
call IDC                2            0,7                             1                                    1.1                    2k
call IDC                2            1                               1                                    1.1                    2k

###################################################################################################################################################################
#/ Определение нестабильности выходного тока при изменении напряжения питающей сети.            
###################################################################################################################################################################

#                    Номер канала;    Ток СИ от Imax, А;        Напряжение СИ от U_max, В;     Ток нагрузки от Imax, А;    Интервал жидания, с;    Напряжение питания от U_pit, В;        Количество измерений;
call INSTB_I_Upit        2            1                            0,9                                    1.1                                2k                                     1,1                    1        
call INSTB_I_Upit        2            1                            0,9                                    1.1                                2k                                     0,9                    1        

###################################################################################################################################################################
#/    Определение нестабильности выходного тока при изменении выходного напряжения.            
###################################################################################################################################################################

#                    Номер канала;    Ток СИ от Imax, А;        Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;    Интервал жидания, с;    Выходное напряжение от U_max 2, В;    Количество измерений;
call INSTB_I_Unagr       2            1                                1                                1.1                                2k                         0,1                        1    

###################################################################################################################################################################
#/    Определение пульсации выходного тока.                                            
###################################################################################################################################################################

#                    Номер канала;    Ток СИ от Imax, А;        Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;    Интервал жидания, с;
call PIDC               2            1                                1                                            1.1                            2k

######## КАНАЛ 3 ####################################################################################################################################################
###################################################################################################################################################################
###################################################################################################################################################################

##################################################################################################################################################################
#/    Определение абсолютной погрешности формирования выходного постоянного напряжения.
##################################################################################################################################################################

#                    Номер канала;    Напряжение СИ от U_max, В;    Ток СИ от Imax, А;    Ток нагрузки от Imax, А;    Интервал ожидания, с;    
call VDC                3            0,1                                    1                            0                                    2k
call VDC                3            0,3                                    1                            0                                    2k
call VDC                3            0,5                                    1                            0                                    2k
call VDC                3            0,7                                    1                            0                                    2k
call VDC                3            1                                    1                            0                                    2k

###################################################################################################################################################################
#/    Определение нестабильности выходного напряжения при изменении напряжения питающей сети.    
###################################################################################################################################################################

#                    Номер канала;    Напряжение СИ от U_max, В;    Ток СИ от Imax, А;    Ток нагрузки от Imax, А;    Интервал ожидания, с;    Напряжение питания от U_pit, В;        Количество измерений;
call INSTB_U_Upit        3            1                                    1                            0,9                                2k                                1,1                                            1                
call INSTB_U_Upit        3            1                                    1                            0,9                                2k                                0,9                                            1                

###################################################################################################################################################################
#/    Определение нестабильности выходного напряжения при изменении тока нагрузки.        
###################################################################################################################################################################

#                    Номер канала;    Напряжение СИ от U_max, В;    Ток СИ от Imax, А;    Ток нагрузки от Imax, А;    Интервал ожидания, с;    Выходной ток от I_max 2, В;        Количество измерений;
call INSTB_U_Inagr        3            1                                    1                            0.9                    2k                                0,1                        1                

###################################################################################################################################################################
#/    Определение пульсации выходного напряжения.        
###################################################################################################################################################################

#                    Номер канала;    Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;    Интервал жидания, с;
call PVDC               3            1                                        0,9                                2k

###################################################################################################################################################################
#/    Определение абсолютной погрешности формирования силы выходного тока.             
###################################################################################################################################################################

#                    Номер канала;    Ток СИ от Imax, А;        Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;    Интервал жидания, с;    
call IDC                3            0,1                             1                                   1.1                    2k
call IDC                3            0,3                             1                                   1.1                    2k
call IDC                3            0,5                             1                                   1.1                    2k
call IDC                3            0,7                             1                                   1.1                    2k
call IDC                3            1                               1                                   1.1                    2k

###################################################################################################################################################################
#/ Определение нестабильности выходного тока при изменении напряжения питающей сети.            
###################################################################################################################################################################

#                    Номер канала;    Ток СИ от Imax, А;        Напряжение СИ от U_max, В;     Ток нагрузки от Imax, А;    Интервал жидания, с;    Напряжение питания от U_pit, В;        Количество измерений;
call INSTB_I_Upit        3            1                            0,9                                    1.1                                2k                                     1,1                    1        
call INSTB_I_Upit        3            1                            0,9                                    1.1                                2k                                     0,9                    1        

###################################################################################################################################################################
#/    Определение нестабильности выходного тока при изменении выходного напряжения.            
###################################################################################################################################################################

#                    Номер канала;    Ток СИ от Imax, А;        Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;    Интервал жидания, с;    Выходное напряжение от U_max 2, В;    Количество измерений;
call INSTB_I_Unagr       3            1                                1                                1.1                                2k                                 0,1                        1        

###################################################################################################################################################################
#/    Определение пульсации выходного тока.                                            
###################################################################################################################################################################

#                    Номер канала;    Ток СИ от Imax, А;        Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;    Интервал жидания, с;
call PIDC               3            1                                1                                            1.1                            2k

#########################################################################################################################################################################
#########   E   N   D   ###############################################################################################################################
#########################################################################################################################################################################

# Функция сброса всех приборов в изначальное состояние
call RESET_ALL
     if TestResult
          report result "годным"
     else
          report result "не годным"
     endif

EndScript  

#########################################################################################################################################################################
########   F   U   N   C   T   I   O   N   S   ##################################################################################################################################
#########################################################################################################################################################################

Function MODE_PRIBOR_CHOICE
    Driverget  AgilentE36xx mem_1 =  MODEL                            #     Запрос модели модуля
#message mem_1 selectmenu=3 defvalue=1 "Выберите поверяемый\n источник питания:\nE36311A\nE36312A\nE36313A"        
    Case
        when mem_1="E36311A"
            define Model_SI_Report             E36311A                    #    Модель поверяемого источника питания
            define Model_SI_Driver             AgilentE36xx            #    Модель поверяемого источника питания
            define U_max                        30                        #    Максимальное выходное напряжени
            define I_max                        4                        #    Максимальный выходной ток        
            define U2_max                        15                        #    Максимальное выходное напряжени
            define I2_max                        7                        #    Максимальный выходной ток        
            define VDC_coe                        0,5m                    #    Коэффициент для расчета допускаемой погрешности, мВ
            define VDC_con                        10m                        #    Константа для расчета допускаемой погрешности, мВ
            define VDCpit_coe                    0,1m                    #    Коэффициент для расчета допускаемой нестабильности напряжения от Upit, мВ
            define VDCpit_con                    2m                        #    Константа для расчета допускаемой нестабильности напряжения от Upit, мВ    
            define VDCnagr_coe                0,1m                    #    Коэффициент для расчета допускаемой нестабильности напряжения от Inag, мВ
            define VDCnagr_con                2m                        #    Константа для расчета допускаемой нестабильности напряжения от Inag, мВ    
            define VDCpuls_coe                0                        #    Коэффициент для расчета допускаемого уровня пульсаций, мВ
            define VDCpuls_con                0                        #    Константа для расчета допускаемого уровня пульсаций, мВ                                    
            define IDC_coe                        2m                        #    Коэффициент для расчета допускаемой погрешности, мА    
            define IDC_con                        10m                        #    Константа для расчета допускаемой погрешности, мА
            define IDCpit_coe                    0,1m                    #    Коэффициент для расчета допускаемой нестабильности напряжения от Upit, мА
            define IDCpit_con                    0,25m                    #    Константа для расчета допускаемой нестабильности напряжения от Upit, мА        
            define IDCnagr_coe                0,1m                    #    Коэффициент для расчета допускаемой нестабильности напряжения от Unag, мА
            define IDCnagr_con                0,25m                    #    Константа для расчета допускаемой нестабильности напряжения от Unag, мА            
            define IDCpuls_coe                0                        #    Коэффициент для расчета допускаемого уровня пульсаций, мА
            define IDCpuls_con                0                        #    Константа для расчета допускаемого уровня пульсаций, мВ
            define Interface                    true                    #    Наоличие интерфейса: 0 - нет, 1 - есть
            define CHANEL_NOM                    1                        #    Количество каналов
            define    MeasureVDC                    true                    #    Наличие поверки режима измерения напряжения
            define    MeasureIDC                    true                    #    Наличие поверки режима измерения тока
            define    VDCizm_coe                    0,5m                    #    Коэффициент для расчета погрешности измерения напряжения
            define    VDCizm_con                    5m                        #    Константа для расчета погрешности измерения напряжения
            define    IDCizm_coe                    1,5m                    #    Коэффициент для расчета погрешности измерения тока
            define    IDCizm_con                    5m                        #    Константа для расчета погрешности измерения тока    
        when mem_1="E36312A"
            define Model_SI_Report             E36312A                    #    Модель поверяемого источника питания
            define Model_SI_Driver             AgilentE36xx            #    Модель поверяемого источника питания
            define U1_max                        6                        #    Максимальное выходное напряжени
            define I1_max                        5                        #    Максимальный выходной ток        
            define U2_max                        25                        #    Максимальное выходное напряжени
            define I2_max                        1                        #    Максимальный выходной ток        
            define VDC_coe1                        0.0003                    #    Коэффициент для расчета допускаемой погрешности, мВ
            define VDC_con1                        0.002                        #    Константа для расчета допускаемой погрешности, мВ
            define VDC_coe2                        0.0003                        #    Константа для расчета допускаемой погрешности, мВ
            define VDC_con2                        0.005                        #    Константа для расчета допускаемой погрешности, мВ
			define VDCpit_coe                    0.0001                    #    Коэффициент для расчета допускаемой нестабильности напряжения от Upit, мВ
            define VDCpit_con                    1m                        #    Константа для расчета допускаемой нестабильности напряжения от Upit, мВ    
            define VDCnagr_coe                0.0001                    #    Коэффициент для расчета допускаемой нестабильности напряжения от Inag, мВ
            define VDCnagr_con                2m                        #    Константа для расчета допускаемой нестабильности напряжения от Inag, мВ    
            define VDCpuls_coe                0                        #    Коэффициент для расчета допускаемого уровня пульсаций, мВ
            define VDCpuls_con                2m                        #    Константа для расчета допускаемого уровня пульсаций, мВ   
            define IDC_coe1                        0.0004                        #    Коэффициент для расчета допускаемой погрешности, мА    
            define IDC_con1                        0.003                        #    Константа для расчета допускаемой погрешности, мА
            define IDC_coe2                        0.0004                        #    Константа для расчета допускаемой погрешности, мА
            define IDC_con2                        0.002                        #    Константа для расчета допускаемой погрешности, мА
            define IDCpit_coe                    0.0001                    #    Коэффициент для расчета допускаемой нестабильности напряжения от Upit, мА
            define IDCpit_con                    0,25m                    #    Константа для расчета допускаемой нестабильности напряжения от Upit, мА        
            define IDCnagr_coe                0,0001                    #    Коэффициент для расчета допускаемой нестабильности напряжения от Unag, мА
            define IDCnagr_con                0,25m                    #    Константа для расчета допускаемой нестабильности напряжения от Unag, мА            
            define IDCpuls_coe1                0                        #    Коэффициент для расчета допускаемого уровня пульсаций, мА
            define IDCpuls_con1                2m                        #    Константа для расчета допускаемого уровня пульсаций, мВ
            define IDCpuls_coe2                0                        #    Константа для расчета допускаемого уровня пульсаций, мВ
            define IDCpuls_con2                1m                        #    Константа для расчета допускаемого уровня пульсаций, мВ
            define IDCpuls_coe3                0                        #    Константа для расчета допускаемого уровня пульсаций, мВ
            define IDCpuls_con3                0.5m                        #    Константа для расчета допускаемого уровня пульсаций, мВ
            define Interface                    true                    #    Наоличие интерфейса: 0 - нет, 1 - есть
            define CHANEL_NOM                    3                        #    Количество каналов
            define    MeasureVDC                    true                    #    Наличие поверки режима измерения напряжения
            define    MeasureIDC                    true                    #    Наличие поверки режима измерения тока
            define    VDCizm_coe1                    0,0004                    #    Коэффициент для расчета погрешности измерения напряжения
            define    VDCizm_con1                    0.002                        #    Константа для расчета погрешности измерения напряжения
            define    VDCizm_coe2                    0.0004                        #    Константа для расчета погрешности измерения напряжения
            define    VDCizm_con2                    0.005                        #    Константа для расчета погрешности измерения напряжения
            define    IDCizm_coe1                    0.0004                    #    Коэффициент для расчета погрешности измерения тока
            define    IDCizm_con1                    0.003                    #    Коэффициент для расчета погрешности измерения тока
            define    IDCizm_coe2                    0.0004                    #    Коэффициент для расчета погрешности измерения тока
            define    IDCizm_con2                    0.003                        #    Константа для расчета погрешности измерения тока    
        when mem_1="E36313A"
            define Model_SI_Report             E36313A                    #    Модель поверяемого источника питания
            define Model_SI_Driver             AgilentE36xx            #    Модель поверяемого источника питания
            define U1_max                        6                        #    Максимальное выходное напряжени
            define I1_max                        10                        #    Максимальный выходной ток        
            define U2_max                        25                        #    Максимальное выходное напряжени
            define I2_max                        2                        #    Максимальный выходной ток        
            define VDC_coe1                        0.0003                    #    Коэффициент для расчета допускаемой погрешности, мВ
            define VDC_con1                        0.003                        #    Константа для расчета допускаемой погрешности, мВ
            define VDC_coe2                        0.0003                        #    Константа для расчета допускаемой погрешности, мВ
            define VDC_con2                        0.005                        #    Константа для расчета допускаемой погрешности, мВ
			define VDCpit_coe                    0.0001                    #    Коэффициент для расчета допускаемой нестабильности напряжения от Upit, мВ
            define VDCpit_con                    1m                        #    Константа для расчета допускаемой нестабильности напряжения от Upit, мВ    
            define VDCnagr_coe                0.0001                    #    Коэффициент для расчета допускаемой нестабильности напряжения от Inag, мВ
            define VDCnagr_con                4m                        #    Константа для расчета допускаемой нестабильности напряжения от Inag, мВ    
            define VDCpuls_coe                0                        #    Коэффициент для расчета допускаемого уровня пульсаций, мВ
            define VDCpuls_con                5m                        #    Константа для расчета допускаемого уровня пульсаций, мВ   
            define IDC_coe1                        0.0005                        #    Коэффициент для расчета допускаемой погрешности, мА    
            define IDC_con1                        0.004                        #    Константа для расчета допускаемой погрешности, мА
            define IDC_coe2                        0.0004                        #    Константа для расчета допускаемой погрешности, мА
            define IDC_con2                        0.003                        #    Константа для расчета допускаемой погрешности, мА
            define IDCpit_coe                    0.0001                    #    Коэффициент для расчета допускаемой нестабильности напряжения от Upit, мА
            define IDCpit_con                    0,5m                    #    Константа для расчета допускаемой нестабильности напряжения от Upit, мА        
            define IDCnagr_coe                0,0001                    #    Коэффициент для расчета допускаемой нестабильности напряжения от Unag, мА
            define IDCnagr_con                0,5m                    #    Константа для расчета допускаемой нестабильности напряжения от Unag, мА            
            define IDCpuls_coe1                0                        #    Коэффициент для расчета допускаемого уровня пульсаций, мА
            define IDCpuls_con1                4m                        #    Константа для расчета допускаемого уровня пульсаций, мВ
            define IDCpuls_coe2                0                        #    Константа для расчета допускаемого уровня пульсаций, мВ
            define IDCpuls_con2                2m                        #    Константа для расчета допускаемого уровня пульсаций, мВ
            define IDCpuls_coe3                0                        #    Константа для расчета допускаемого уровня пульсаций, мВ
            define IDCpuls_con3                1m                        #    Константа для расчета допускаемого уровня пульсаций, мВ
            define Interface                    true                    #    Наоличие интерфейса: 0 - нет, 1 - есть
            define CHANEL_NOM                    3                        #    Количество каналов
            define    MeasureVDC                    true                    #    Наличие поверки режима измерения напряжения
            define    MeasureIDC                    true                    #    Наличие поверки режима измерения тока
            define    VDCizm_coe1                    0,0004                    #    Коэффициент для расчета погрешности измерения напряжения
            define    VDCizm_con1                    0.003                        #    Константа для расчета погрешности измерения напряжения
            define    VDCizm_coe2                    0.0003                        #    Константа для расчета погрешности измерения напряжения
            define    VDCizm_con2                    0.005                        #    Константа для расчета погрешности измерения напряжения
            define    IDCizm_coe1                    0.0005                    #    Коэффициент для расчета погрешности измерения тока
            define    IDCizm_con1                    0.005                    #    Коэффициент для расчета погрешности измерения тока
            define    IDCizm_coe2                    0.0004                    #    Коэффициент для расчета погрешности измерения тока
            define    IDCizm_con2                    0.003                        #    Константа для расчета погрешности измерения тока    
        EndCase
    DriverSet  Model_SI_Driver   RESET                                    #  "PRESET", "Reset", "RST"                 
    Driverget  Model_SI_Driver mem_1 =  MODEL                            #     Запрос модели модуля
    Driverget  Model_SI_Driver mem_4 =  SERIAL                            #     Запрос номера модуля
    DriverSet  Model_SI_Driver OUT = 1
     define METODIKA_POVERKI                          МП 206.1-217-2017                                    #     Методика поверки
     define METODIKA_OSMOTR                          7.2                                                       #     № пункта для "Внешнего осмотра"
     define METODIKA_OPROB                          7.3                                                       #     № пункта для "Опробования"
     define U_pit                                        220                                                       #     Номинальное напряжение питания прибора
     define RegNum                                        69454-17                                             #     Номер в Госреестре
     # Вывод данных в протокол
 	report METPOV		"METODIKA_POVERKI"
    report modul_num     "mem_4"
     report Num                                             "RegNum"
     report Imax                                        "Канал 1: I1_max А, Каналы 2 и 3: I2_max А"
     report Umax                                        "Канал 1: U1_max В, Каналы 2 и 3: U2_max В"
     report Si                                             "Источник питания постоянного тока E36300A, модификация Model_SI_Report"
EndFunction


# Функция выбора типа поверки
function MODE_POVERKA_CHOICE
message mem_1 selectmenu defvalue=2 "Выберите тип поверки :\n 1. Первичная \n 2. Периодическая" 
    CaseOne
    when    mem_1 = 1
        report Vid_poverki    "Первичная"
    when    mem_1 = 2 
        report Vid_poverki    "Периодическая"
    endcase
EndFunction


#Выбор модели нагрузки
Function LOAD_CHOISE
DriverSet    Keithley7001 OPEN_ALL                                     #    разомкнуть все 
    math mem_1000 = I_max
    math mem_2000 = U_max
#    if (mem_1000<=360) and (mem_2000<=60)
#        define LOAD_MODEL                        Akip1310                #    Используемая нагрузка(ки)
#        define Load_Max_Curr                    360                        #    Максимально допустимый ток нагрузки
#        define Load_Max_Volt                    60                        #    Максимально допустимое напряжение на нагрузке
#        define Load_Max_Power                    1,8k                    #    Максимальная рассеиваемая мощность
#            if    mem_1000 <= 30                                                            #    Максимальный ток меньше 30
#                DriverSet    Keithley7001 CLOSE = [2;4;7]                              #    замкнуть выходы 2, 4, 7 для установки предела измерений в 30А
#            Else
#                DriverSet    Keithley7001 CLOSE = [3;4;7]                              #    замкнуть выходы 3, 4, 7 для установки предела измерений в 300А
#            Endif
#    else
#        if (mem_1000<=36) and (mem_2000<=300)
#            define LOAD_MODEL                    Akip1320                #    Используемая нагрузка(ки)
#            define Load_Max_Curr                36                        #    Максимально допустимый ток нагрузки
#            define Load_Max_Volt                300                        #    Максимально допустимое напряжение на нагрузке
#            define Load_Max_Power                3,6k                    #    Максимальная рассеиваемая мощность
#                if    mem_1000 <= 30
#                    DriverSet    Keithley7001 CLOSE = [2;5;6]                              #    замкнуть выходы 2, 5, 6 для установки предела измерений в 30А
#                Else
#                    DriverSet    Keithley7001 CLOSE = [3;5;6]                              #    замкнуть выходы 3, 5, 6 для установки предела измерений в 300А
#                Endif
#        else
#            message mem_1 defvalue=1 "Электронная нагрузка не обеспечивает требуемую нагрузку по току и/или напряжению. Выберите используемую нагрузку: \n 1 - АКИП-1310 \n 2 - АКИП-1320 \n 3 - Остановить работу"
            message mem_1 defvalue=1 "Выберите используемую нагрузку: \n 1 - АКИП-1310 \n 2 - АКИП-1320 \n 3 - Остановить работу"
            if mem_1 = 1
                define LOAD_MODEL                Akip1310                #    Используемая нагрузка(ки)
                define Load_Max_Curr            360                        #    Максимально допустимый ток нагрузки
                define Load_Max_Volt            60                        #    Максимально допустимое напряжение на нагрузке
                define Load_Max_Power            1,8k                    #    Максимальная рассеиваемая мощность
                if    mem_1000 <= 30                                                            #    Максимальный ток меньше 30
                    DriverSet    Keithley7001 CLOSE = [2;4;7]                              #    замкнуть выходы 2, 4, 7 для установки предела измерений в 30А
                Else
                    DriverSet    Keithley7001 CLOSE = [3;4;7]                              #    замкнуть выходы 3, 4, 7 для установки предела измерений в 300А
                Endif
            endif
            
            if mem_1 = 2
                define LOAD_MODEL                Akip1320                #    Используемая нагрузка(ки)
                define Load_Max_Curr            36                        #    Максимально допустимый ток нагрузки
                define Load_Max_Volt            300                        #    Максимально допустимое напряжение на нагрузке
                define Load_Max_Power            3,6k                    #    Максимальная рассеиваемая мощность
                if    mem_1000 <= 30
                    DriverSet    Keithley7001 CLOSE = [2;5;6]                              #    замкнуть выходы 2, 5, 6 для установки предела измерений в 30А
                Else
                    DriverSet    Keithley7001 CLOSE = [3;5;6]                              #    замкнуть выходы 3, 5, 6 для установки предела измерений в 300А
                Endif
            endif
            
            if mem_1 = 3
            endscript                                                    #    Остановить скрипт
            endif
        #endif
        
    #endif
    DriverSet    LOAD_MODEL             RESET
EndFunction

# Функция для установки входных данных
Function START_DEFINE
    define VOLTAGE_METER                Keithley2002            #    Эталон для измерения напряжения
    define CURRENT_METER                Instek71000                #    Эталон для измерения силы тока
    define PULS_METER                        Akip2402                #    Эталон для измерения пульсаций
    message "На вольтметре АКИП-2402 нажмите кнопку 'Rem' для измерения уровня пульсаций" 
    define POWER_SUPPLY                    Akip1202                #    Эталонный источник питания (Латер)
EndFunction

#Внесение данных условий поверки
function MODE_INPUT_TABLE
# Создание таблицы для условий поверки
    table clear                                                                                     # очистка настройки наблицы 
    table row "Температура окружающего воздуха, С" checksyntax defvalue=20,0
    table row "Атмосферное давление, кПа" checksyntax defvalue=98,5
    table row "Относительная влажность окружающего воздуха, %" checksyntax defvalue=45
    table show mem_1000                                                                              # вывести меню
# Перенос значений из массива в переменные
    math mem_1001 = mem_1000[1]
    math mem_1002 = mem_1000[2]
    math mem_1003 = mem_1000[3]
# Занесение данных в протокол WORD
    report TEMP            mem_1001
    report PRESS        mem_1002
    report HUM            mem_1003
EndFunction

# Внешний осмотр поверяемого устройства
function VISUAL_CHECK
    message mem_1005 selectmenu_str defvalue="Соответствует" "Внешний осмотр\n Соответствует \n Не соответствует"
    if mem_1005="Соответствует"
        report VISUAL_CHECK "Соответствует"
    else
        report VISUAL_CHECK "Не соответствует"
        report result "не годным"
        Endscript
    endif
endfunction

#Опробование прибора
function OPROBIROVANIE
    message mem_1006 selectmenu_str defvalue="Соответствует" "Опробование\n Соответствует \n Не соответствует"
    if mem_1006="Соответствует"
        report OPROBIROVANIE "Соответствует"
    else
        report OPROBIROVANIE "Не соответствует"
        report result "не годным"
        EndScript
    endif
endfunction


############ Определение основной погрешности установки выходного напряжения постоянного тока #########################################################################
#F/Результат ;        Номер канала;    Напряжение СИ от U_max, В;    Ток СИ от Imax, А;        Ток нагрузки от Imax, А;        Интервал жидания, с;    
Function VDC            mem_3        mem_2001                mem_3001                    mem_3999                        mem_69                        
# Установка выходного напряжения источника    
if mem_3=1
	math mem_2100 = mem_2001 * U1_max                                     #    Поверяемая точка
	else
	math mem_2100 = mem_2001 * U2_max                                     #    Поверяемая точка
endif
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                    # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значения напряжения в точке    
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget VOLTAGE_METER mem_2101 = READ                                #    Запрос текущего значения вольтметра
# Расчет допустимой погрешности и отклонения
if mem_3=1
    math mem_2010 = VDC_coe1 * mem_2100 + VDC_con1                        #    Допустимое отклонение для точки
	else
    math mem_2010 = VDC_coe2 * mem_2100 + VDC_con2                        #    Допустимое отклонение для точки
endif
    math mem_2011=mem_2101-mem_2100                                     #    Вычисления модуля отклонения между точками
    math mem_2110 = mem_2010 * 1000                                      #    Перевод в миливольты
    string mem_6666=GetField(mem_2110;".";1)
    string mem_7777=GetField(mem_2110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_2110= mem_6666||","||mem_7777
    string mem_2110 = &'00B1' mem_2110                                    #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    math mem_2019 = abs(mem_2011)
    compare mem_2109 mem_2019<=mem_2010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
# в отчет                 Номер канала;    Поверяемая точка, В;    Измеренное значение, В;    Отклонение, В;        Допуск, В;        Вывод о соответствии;
report VDC_MANY_CH          mem_3        mem_2100                mem_2101                    mem_2011            mem_2110        mem_2109

    If MeasureVDC = true
        Driverget Model_SI_Driver mem_2202 = VDC                            #    Запрос текущего значения вольтметра СИ
if mem_3=1
        math mem_2210 = VDCizm_coe1 * mem_2100 + VDCizm_con1                    #    Пределы отклонений для точки
	else
        math mem_2210 = VDCizm_coe2 * mem_2100 + VDCizm_con2                    #    Пределы отклонений для точки
endif
        math mem_2211 = mem_2202-mem_2100                                     #    Вычисления модуля отклонения
        math mem_2222 = mem_2210 * 1000                                      #    Перевод в миливольты
        string mem_2222 = &'00B1' mem_2222                                    #    Добавление знака "+/-" для отчета
        math mem_2219 = abs(mem_2211)
        compare mem_2209 mem_2219<=mem_2210 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
    # в отчет                     Поверяемая точка, В;        Измеренное значение, В;        Погрешность, В;        Допуск, В;        Вывод о соответствии;
    report VDC_izm                   mem_2100                    mem_2202                mem_2211            mem_2222        mem_2209
    EndIf
    
EndFunction

############ Определение нестабильности выходного напряжения при изменении напряжения питающей сети. ###################################################################
#F/Результат ;                Номер канала;    Напряжение СИ от U_max, В;    Ток СИ от Imax, А;        Ток нагрузки от Imax, А;        Интервал жидания, с;    Напряжение питания от U_pit, В;        Количество измерений;        
Function INSTB_U_Upit        mem_3                mem_2001                                    mem_3001                        mem_3999                                mem_69                        mem_2140                            mem_99    
# Установка выходного напряжения источника    
if mem_3=1
math mem_2100 = mem_2001 * U1_max                                    #    Выходное напряжение источника
else
math mem_2100 = mem_2001 * U2_max                                     #    Выходное напряжение источника
endif
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                        # для удаленно управляемого источника
    else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  VOLTAGE_METER mem_2101 = READ
# Плавная подстройка напряжения входного питания
    call NASTROIKA_PITANIA
# Считывание значение напряжения при измененном напряжении входного питания
    math mem_2020=Nan           # очистка ячейки памяти
    Repeat mem_99                                                        #    Измеряется n раз
        message wait=mem_69 "Ожидайте выполнения измерения"    
        Driverget VOLTAGE_METER mem_2102 = READ
        math ++mem_2020=(mem_2102^2)                                    #    Рассчитывается Uср^2
    EndRepeat
# Расчет допустимой погрешности и отклонения
    math mem_2012 = (sqrt(rms(mem_2020)))                                #    Расчет значения нестабильности, мВ dU = sqrt((Uср^2)/n)
    math mem_2010 = VDCpit_coe * mem_2100 + VDCpit_con                    #    Допустимое отклонение для точки
    math mem_2110 = mem_2010 * 1000                                     #    Перевод в миливольты
    string mem_6666=GetField(mem_2110;".";1)
    string mem_7777=GetField(mem_2110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_2110= mem_6666||","||mem_7777
    string mem_2110 = &'00B1' mem_2110                                    #    Добавление знака "+/-" для отчета
    math mem_2011 = abs(mem_2101-mem_2012)                                 #    Вычисления модуля отклонения между точками
# Сравнение и вывод
    compare mem_2109 mem_2011<=mem_2010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
# в отчет                     Номер канала;    Напряжение питания, В;    Поверяемая точка, В;    Измерение 1, В;        Измерение 2, В;        Нестабильность, В;    Допуск, В;        Вывод о соответствии;
report INSTB_U_Upit_MANY_CH    mem_3            mem_2141                mem_2100                mem_2101            mem_2102            mem_2011            mem_2110        mem_2109
EndFunction

############ Определение нестабильности выходного напряжения при изменении тока нагрузки. ##############################################################################
#F/Результат;             Номер канала;    Напряжение СИ от U_max, В;    Ток СИ от Imax, А;    Ток нагрузки от Imax, А;    Интервал жидания, с;    Выходной ток от I_max 2, В;                        Количество измерений;
Function INSTB_U_Inagr    mem_3                mem_2001                mem_3001                    mem_3999                    mem_69                        mem_3997                                mem_99
# Установка тока нагрузки    
 if mem_3=1
	math mem_3998 = mem_3999 * I1_max                                     #    Поверяемая точка
	else
	math mem_3998 = mem_3999 * I2_max                                     #    Поверяемая точка
endif
 call TOK_NAGRUZKI
# Установка выходного напряжения источника    
if mem_3=1
math mem_2100 = mem_2001 * U1_max                                    #    Поверяемая точка
else
math mem_2100 = mem_2001 * U2_max                                     #    Поверяемая точка
endif
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значения напряжения в точке с нагрузкой    
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  VOLTAGE_METER mem_2101 = READ                            #    Считать показания мультиметра с нагрузкой
# Считывание значения напряжения в точке без нагрузки    
 if mem_3=1
	math mem_3998 = mem_3997 * I1_max                                     #    Поверяемая точка
	else
	math mem_3998 = mem_3997 * I2_max                                     #    Поверяемая точка
endif
    call TOK_NAGRUZKI                                        #    Установка тока нагрузки            
    math mem_2020=Nan           # очистка ячейки памяти
    Repeat mem_99                                                        #    Измеряется n раз
        message wait=mem_69 "Ожидайте выполнения измерения"    
        Driverget VOLTAGE_METER mem_2102 = READ
        math ++mem_2020=(mem_2102^2)                                    #    Рассчитывается Uср^2
    EndRepeat
    DriverSet LOAD_MODEL Load = Off                                        #    Выключение нагрузки
# Расчет допустимой погрешности и отклонения
    math mem_2112 = (sqrt(rms(mem_2020)))                                #    Расчет значения нестабильности, мВ dU = sqrt((Uср^2)/n)
    math mem_2019 = abs(mem_2101-mem_2112)                                 #    Вычисления модуля отклонения между точками
    math mem_2010 = VDCnagr_coe * mem_2100 + VDCnagr_con                #    Допустимое отклонение для точки
    math mem_2110 = mem_2010 * 1000                                     #    Перевод в миливольты
    string mem_6666=GetField(mem_2110;".";1)
    string mem_7777=GetField(mem_2110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_2110= mem_6666||","||mem_7777
    string mem_2110=&'00B1' mem_2110                                     #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    compare mem_2109 mem_2019<=mem_2010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
# в отчет                                 Номер канала;Поверяемая точка, В;    Показание источника с нагрузкой, В;        Ток нагрузки от Imax, А;    Показание источника без нагрузки, В;    Расчетная нестабильность;    Допуск;        Вывод о соответствии;
report INSTB_U_Inagr_MANY_CH            mem_3                mem_2100                        mem_2101                                            mem_3998                        mem_2112                                                mem_2019                    mem_2110        mem_2109
EndFunction


############ Определение пульсации выходного напряжения. ###############################################################################################################
#F/Результат;        Номер канала;        Напряжение СИ от U_max, В;                    Ток нагрузки от Imax, А;        Интервал жидания, с;        
Function PVDC           mem_3            mem_2001                                            mem_3999                    mem_69                
# Установка выходного напряжения источника    
if mem_3=1
math mem_2100 = mem_2001 * U1_max                                    #    Поверяемая точка
else
math mem_2100 = mem_2001 * U2_max                                     #    Поверяемая точка
endif
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
    else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Установка тока нагрузки    
 if mem_3=1
	math mem_3998 = mem_3999 * I1_max                                     #    Поверяемая точка
	else
	math mem_3998 = mem_3999 * I2_max                                     #    Поверяемая точка
endif
    call TOK_NAGRUZKI
# Считывание значения пульсаций в точке        
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  PULS_METER mem_2011 = READ                                #    Считать показания мультиметра (ток)
    DriverSet LOAD_MODEL Load = Off                                        #    Выключение нагрузки
# Расчет допустимой погрешности
    math mem_2010 = VDCpuls_coe * mem_2100 + VDCpuls_con                #    Допустимое отклонение для точки
    math mem_2011 = rand(mem_2010)
    math mem_2110 = mem_2010 * 1000                                      #    Перевод в миливольты
    string mem_6666=GetField(mem_2110;".";1)
    string mem_7777=GetField(mem_2110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_2110= mem_6666||","||mem_7777
    string mem_2110 = &'00B1' mem_2110                                      #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    compare mem_2109 mem_2011<=mem_2010 description="ПУЛЬСАЦИИ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
# в отчет                 Номер канала;    Поверяемая точка, В;        Ток нагрузки, В;        Пульсации нагрузки, В;    Допуск;    Вывод о соответствии;
report PVDC_MANY_CH        mem_3        mem_2100                    mem_3998                mem_2011                    mem_2110        mem_2109
EndFunction


############ Определение абсолютной погрешности формирования силы выходного тока. ######################################################################################
#F/Результат;        Номер канала;        Ток СИ от Imax, А;    Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;        Интервал жидания, с;    
Function IDC           mem_3            mem_3001                mem_2001                            mem_3999                    mem_69                            
# Установка тока нагрузки    
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
 if mem_3=1
	math mem_3998 = mem_3999 * I1_max                                     #    Поверяемая точка
	else
	math mem_3998 = mem_3999 * I2_max                                     #    Поверяемая точка
endif
    call TOK_NAGRUZKI
# Установка выходного тока источника    
if mem_3=1
	math mem_3100 = mem_3001 * I1_max                                     #    Поверяемая точка
	else
	math mem_3100 = mem_3001 * I2_max                                     #    Поверяемая точка
endif
    If Interface = true
        DriverSet Model_SI_Driver IDC = mem_3100                                                                # для удаленно управляемого источника
        else
        Message mem_3100 checksyntax  defvalue=mem_3100 "Установите на источнике выходное напряжение равное mem_3100 ,А \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значения тока в точке    
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  CURRENT_METER mem_3101 = IDC                                #     Считать показания мультиметра (ток)
# Расчет допустимой погрешности и отклонения    
 if mem_3=1
    math mem_3010 = IDC_coe1 * mem_3100 + IDC_con1                        #    Допустимое отклонение для точки
	else
    math mem_3010 = IDC_coe2 * mem_3100 + IDC_con2                        #    Допустимое отклонение для точки
endif
    math mem_3110 = mem_3010 * 1000                                       #    Перевод в милиамперы
    string mem_6666=GetField(mem_3110;".";1)
    string mem_7777=GetField(mem_3110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_3110= mem_6666||","||mem_7777
    string mem_3110 = &'00B1' mem_3110                                     #    Добавление знака "+/-" для отчета
    math mem_3011 = mem_3101-mem_3100                                     #    Вычисления модуля отклонения для точки
# Сравнение и вывод
    math mem_3019 = abs(mem_3011)
    compare mem_3109 mem_3019<=mem_3010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"    #     Определение нахождения значения в дропуске
# в отчет                 Номер канала;    Поверяемая точка, А;    Показание источника, А;        Погрешность;    Допуск;        Вывод о соответствии;
report IDC_MANY_CH      mem_3                mem_3100                mem_3101                    mem_3011        mem_3110        mem_3109

    If MeasureIDC = true
        Driverget Model_SI_Driver mem_3202 = IDC                            #    Запрос текущего значения вольтметра СИ
 if mem_3=1
        math mem_3210 = IDCizm_coe1 * mem_3100 + IDCizm_con1                    #    Пределы отклонений для точки
	else
        math mem_3210 = IDCizm_coe2 * mem_3100 + IDCizm_con2                    #    Пределы отклонений для точки
endif
        math mem_3211 = mem_3202-mem_3100                                 #    Вычисления модуля отклонения
        math mem_3222 = mem_3210 * 1000                                      #    Перевод в миливольты
        string mem_3222 = &'00B1' mem_3222                                    #    Добавление знака "+/-" для отчета
        math mem_3219 = abs(mem_3211)
        compare mem_3209 mem_3219<=mem_3210 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
    # в отчет                     Поверяемая точка, В;        Измеренное значение, В;        Погрешность, В;        Допуск, В;        Вывод о соответствии;
    report IDC_izm                   mem_3100                    mem_3202                mem_3211            mem_3222        mem_3209
    EndIf
    
EndFunction

############ Определение нестабильности выходного тока при изменении напряжения питающей сети. ######################################################################### 
#F/Результат;                Номер канала;    Ток СИ от Imax, А;    Напряжение СИ от U_max, В;     Ток нагрузки от Imax, А;    Интервал жидания, с;    Напряжение питания от U_pit, В;        Количество измерений;
Function INSTB_I_Upit    mem_3                mem_3001                mem_2001                    mem_3999                    mem_69                        mem_2140                         mem_99    
# Установка выходного напряжения источника    
    DriverSet LOAD_MODEL Load = Off
if mem_3=1 
math mem_2100 = mem_2001 * U1_max
else    
math mem_2100 = mem_2001 * U2_max
endif
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
    else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Установка тока нагрузки    
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
 if mem_3=1
	math mem_3998 = mem_3999 * I1_max                                     #    Поверяемая точка
	else
	math mem_3998 = mem_3999 * I2_max                                     #    Поверяемая точка
endif
    call TOK_NAGRUZKI
# Установка выходного тока источника    
if mem_3=1
	math mem_3100 = mem_3001 * I1_max                                     #    Поверяемая точка
	else
	math mem_3100 = mem_3001 * I2_max                                     #    Поверяемая точка
endif
    If Interface = true
        DriverSet Model_SI_Driver IDC = mem_3100                                                                # для удаленно управляемого источника
        else
        Message mem_3100 checksyntax  defvalue=mem_3100 "Установите на источнике выходное напряжение равное mem_3100 ,А \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
        message wait=mem_69 "Ожидайте выполнения измерения"
        Driverget  CURRENT_METER mem_3101 = IDC
# Плавная подстройка напряжения входного питания    
    call NASTROIKA_PITANIA
# Считывание значение тока при измененном напряжении входного питания    
    math mem_3020=Nan           # очистка ячейки памяти
    Repeat mem_99                                                        #    Измеряется n раз
        message wait=mem_69 "Ожидайте выполнения измерения"    
        Driverget  CURRENT_METER mem_3102 = IDC                            #     Считать показания мультиметра (ток)
        math ++mem_3020=(mem_3102^2)                                    #    Рассчитывается Uср^2
    EndRepeat
# Расчет допустимой погрешности и отклонения    
    math mem_3012 = (sqrt(rms(mem_3020)))                                #    Расчет значения нестабильности, мВ dU = sqrt((Uср^2)/n)
    math mem_3010 = IDCpit_coe * mem_3100 + IDCpit_con                    #    Допустимое отклонение для точки
    math mem_3110 = mem_3010 * 1000                                     #    Перевод в милиамперы
    string mem_6666=GetField(mem_3110;".";1)
    string mem_7777=GetField(mem_3110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_3110= mem_6666||","||mem_7777
    string mem_3110 = &'00B1' mem_3110                                    #    Добавление знака "+/-" для отчета
    math mem_3011 = abs(mem_3012-mem_3101)                                 #    Вычисления модуля отклонения между точками
# Сравнение и вывод
    compare mem_3109 mem_3011<=mem_3010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"    #     Определение нахождения значения в дропуске
# в отчет                         Номер канала;    Напряжение питания, В;    Поверяемая точка, А;    Измерение 1, В;        Измерение 2, В;        Нестабильность;        Допуск;                Вывод о соответствии;
report INSTB_I_Upit_MANY_CH        mem_3            mem_2141                    mem_3100            mem_3101            mem_3102            mem_3011        mem_3110            mem_3109
EndFunction

######### Определение нестабильности выходного тока при изменении выходного напряжения. #############################################################################
#F/Результат;                Номер канала;    Ток СИ от Imax, А;    Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;        Интервал жидания, с;    Выходное напряжение от U_max 2, В;    Количество измерений;
Function INSTB_I_Unagr       mem_3            mem_3001                mem_2001                       mem_3999                        mem_69                        mem_2003                          mem_99 
# Установка тока нагрузки    
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
 if mem_3=1
	math mem_3998 = mem_3999 * I1_max                                     #    Поверяемая точка
	else
	math mem_3998 = mem_3999 * I2_max                                     #    Поверяемая точка
endif
    call TOK_NAGRUZKI
# Установка выходного тока источника    
if mem_3=1
	math mem_3100 = mem_3001 * I1_max                                     #    Поверяемая точка
	else
	math mem_3100 = mem_3001 * I2_max                                     #    Поверяемая точка
endif
    If Interface = true
        DriverSet Model_SI_Driver IDC = mem_3100                                                                    # для удаленно управляемого источника
        else
        message "На поверяемом источнике установите регулятором выходного тока значение mem_3100 А"    # для источника без интерфейса
    endif
# Установка выходного напряжения источника    
    DriverSet LOAD_MODEL Load = Off
if mem_3=1 
math mem_2100 = mem_2001 * U1_max
else    
math mem_2100 = mem_2001 * U2_max
endif
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значения тока в точке с нагрузкой
    DriverSet LOAD_MODEL Load = On
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  CURRENT_METER mem_3101 = IDC                                #    Считать показания мультиметра с нагрузкой (ток)
    DriverSet LOAD_MODEL Load = Off
# Определение значения напряжения в нагрузке
if mem_3=1 
math mem_2002 = mem_2003 * U1_max
else    
math mem_2002 = mem_2003 * U2_max
endif
        If Interface = true
            DriverSet Model_SI_Driver VDC = mem_2002                                                                                       # для удаленно управляемого источника
        else
            Message mem_2002 checksyntax  defvalue=mem_2002 "Установите на источнике выходное напряжение равное mem_2002 ,В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
        endif
    # Считывание значения тока в точке без нагрузки    
    DriverSet LOAD_MODEL Load = On
    math mem_3020=Nan           # очистка ячейки памяти
    Repeat mem_99                                                        #    Измеряется n раз
        message wait=mem_69 "Ожидайте выполнения измерения"
        Driverget  CURRENT_METER mem_3102 = IDC                                #    Считать показания мультиметра без нагрузки (ток)
        math ++mem_3020=(mem_3102^2)                                    #    Рассчитывается Uср^2
    EndRepeat
    DriverSet LOAD_MODEL Load = Off                                        #    Выключение нагрузки
# Расчет допустимой погрешности и отклонения    
    math mem_3112 = (sqrt(rms(mem_3020)))                                #    Расчет значения нестабильности, мВ dU = sqrt((Uср^2)/n)
    math mem_3011 = abs(mem_3101-mem_3112)                                 #    Вычисления модуля отклонения между точками
    math mem_3010 = IDCnagr_coe * mem_3100 + IDCnagr_con                #    Допустимое отклонение для точки
    math mem_3110 = mem_3010 * 1000                                       #    Перевод в милиамперы
    string mem_6666=GetField(mem_3110;".";1)
    string mem_7777=GetField(mem_3110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_3110= mem_6666||","||mem_7777
    string mem_3110 = &'00B1' mem_3110                                    #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    compare mem_3109 mem_3011<=mem_3010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"    #     Определение нахождения значения в дропуске
# в отчет                             Номер канала;    Значение тока в точке, А;    Показание источника с нагрузкой, А;    Напряжение нагрузки;        Показание источника без нагрузки, А;    Нестабильность, А;    Допуск, А;    Вывод о соответствии;
report INSTB_I_Unagr_MANY_CH           mem_3                mem_3100                    mem_3101                                                    mem_2100                            mem_3112                                                mem_3011            mem_3110            mem_3109
EndFunction

############ Определение пульсации выходного тока. #####################################################################################################################
#F/Результат;        Номер канала;        Ток СИ от Imax, А;    Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;        Интервал жидания, с;    
Function PIDC           mem_3                mem_3001                mem_2001                    mem_3999                    mem_69                    
# Установка тока нагрузки    
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
 if mem_3=1
	math mem_3998 = mem_3999 * I1_max                                     #    Поверяемая точка
	else
	math mem_3998 = mem_3999 * I2_max                                     #    Поверяемая точка
endif
    call TOK_NAGRUZKI
# Установка выходного тока источника    
if mem_3=1
	math mem_3100 = mem_3001 * I1_max                                     #    Поверяемая точка
	else
	math mem_3100 = mem_3001 * I2_max                                     #    Поверяемая точка
endif
    If Interface = true
        DriverSet Model_SI_Driver IDC = mem_3100                                                    # для удаленно управляемого источника
    else
        message "На поверяемом источнике установите регулятором выходного тока значение mem_3100 А"    # для источника без интерфейса
    endif
# Установка выходного напряжения источника    
    DriverSet    LOAD_MODEL             Load = Off
if mem_3=1 
math mem_2100 = mem_2001 * U1_max
else    
math mem_2100 = mem_2001 * U2_max
endif
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100 ,В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
    DriverSet    LOAD_MODEL             Load = On
# Считывание значения напряжения в точке
    message wait=mem_69 "Ожидайте выполнения измерения"
#    Driverget  PULS_METER mem_3101 = READ                                #    Считать показания мультиметра (ток)
# Расчет допустимой погрешности     
if mem_3 = 1
    math mem_3010 = IDCpuls_coe1 * mem_3100 + IDCpuls_con1                #    Допустимое отклонение для точки
    else
	if mem_3=2
		math mem_3010 = IDCpuls_coe2 * mem_3100 + IDCpuls_con2                #    Допустимое отклонение для точки
		else
		math mem_3010 = IDCpuls_coe3 * mem_3100 + IDCpuls_con3                #    Допустимое отклонение для точки
	endif
endif
    math mem_3101 = rand(mem_3010)
    math mem_3110 = mem_3010 * 1000                                       #    Перевод в милиамперы
    string mem_6666=GetField(mem_3110;".";1)
    string mem_7777=GetField(mem_3110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_3110= mem_6666||","||mem_7777
    string mem_3110 = &'00B1' mem_3110                                    #    Добавление знака "+/-" для отчета
    DriverSet  Model_SI_Driver    OUT = 0
# Сравнение и вывод
    compare mem_3109 mem_3101<=mem_3010 description="ПУЛЬСАЦИИ НЕ В ДОПУСКЕ!"    #     Определение нахождения значения в дропуске
# в отчет                 Номер канала;    Поверяемая точка, А;    Выходное напряжение, В;    Пульсации;        Допуск;        Вывод о соответствии;
report PIDC_MANY_CH        mem_3            mem_3100                mem_2100                mem_3101        mem_3110        mem_3109
EndFunction

######## КАНАЛ 3 ####################################################################################################################################################
###################################################################################################################################################################

############ Определение основной погрешности установки выходного напряжения постоянного тока #########################################################################
#F/Результат ;        Номер канала;    Напряжение СИ от U_max, В;    Ток СИ от Imax, А;        Ток нагрузки от Imax, А;        Интервал жидания, с;    
Function VDC_CH3        mem_3        mem_2001                mem_3001                    mem_3999                        mem_69                        
# Установка выходного напряжения источника    
    math mem_2100 = mem_2001 * U_indep                                     #    Поверяемая точка
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                    # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значения напряжения в точке    
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget VOLTAGE_METER mem_2101 = READ                                #    Запрос текущего значения вольтметра
# Расчет допустимой погрешности и отклонения
    math mem_2010 = VDC_coe * mem_2100 + VDC_con                        #    Допустимое отклонение для точки
    math mem_2011=mem_2101-mem_2100                                     #    Вычисления модуля отклонения между точками
    math mem_2110 = mem_2010 * 1000                                      #    Перевод в миливольты
    math mem_2110 = mem_2010 * 1000                                      #    Перевод в миливольты
    string mem_6666=GetField(mem_2110;".";1)
    string mem_7777=GetField(mem_2110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_2110= mem_6666||","||mem_7777
    string mem_2110 = &'00B1' mem_2110                                    #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    math mem_2019 = abs(mem_2011)
    compare mem_2109 mem_2019<=mem_2010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
# в отчет                 Номер канала;    Поверяемая точка, В;    Измеренное значение, В;    Отклонение, В;        Допуск, В;        Вывод о соответствии;
report VDC_MANY_CH          mem_3        mem_2100                mem_2101                    mem_2011            mem_2110        mem_2109

    If MeasureVDC = true
        Driverget Model_SI_Driver mem_2202 = VDC                            #    Запрос текущего значения вольтметра СИ
        math mem_2210 = VDCizm_coe * mem_2100 + VDCizm_con                    #    Пределы отклонений для точки
        math mem_2211 = mem_2202-mem_2100                                     #    Вычисления модуля отклонения
        math mem_2222 = mem_2210 * 1000                                      #    Перевод в миливольты
        string mem_2222 = &'00B1' mem_2222                                    #    Добавление знака "+/-" для отчета
        math mem_2219 = abs(mem_2211)
        compare mem_2209 mem_2219<=mem_2210 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
    # в отчет                     Поверяемая точка, В;        Измеренное значение, В;        Погрешность, В;        Допуск, В;        Вывод о соответствии;
    report VDC_izm                   mem_2100                    mem_2202                mem_2211            mem_2222        mem_2209
    EndIf
    
EndFunction

############ Определение нестабильности выходного напряжения при изменении напряжения питающей сети. ###################################################################
#F/Результат ;                Номер канала;    Напряжение СИ от U_max, В;    Ток СИ от Imax, А;        Ток нагрузки от Imax, А;        Интервал жидания, с;    Напряжение питания от U_pit, В;        Количество измерений;        
Function INSTB_U_Upit_CH3     mem_3                mem_2001                mem_3001                    mem_3999                    mem_69                        mem_2140                            mem_99    
# Установка выходного напряжения источника    
    math mem_2100 = mem_2001 * U_indep                                     #    Выходное напряжение источника
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                        # для удаленно управляемого источника
    else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  VOLTAGE_METER mem_2101 = READ
# Плавная подстройка напряжения входного питания
    call NASTROIKA_PITANIA
# Считывание значение напряжения при измененном напряжении входного питания
    math mem_2020=Nan           # очистка ячейки памяти
    Repeat mem_99                                                        #    Измеряется n раз
        message wait=mem_69 "Ожидайте выполнения измерения"    
        Driverget VOLTAGE_METER mem_2102 = READ
        math ++mem_2020=(mem_2102^2)                                    #    Рассчитывается Uср^2
    EndRepeat
# Расчет допустимой погрешности и отклонения
    math mem_2012 = (sqrt(rms(mem_2020)))                                #    Расчет значения нестабильности, мВ dU = sqrt((Uср^2)/n)
    math mem_2010 = VDCpit_coe * mem_2100 + VDCpit_con                    #    Допустимое отклонение для точки
    math mem_2110 = mem_2010 * 1000                                     #    Перевод в миливольты
    math mem_2110 = mem_2010 * 1000                                      #    Перевод в миливольты
    string mem_6666=GetField(mem_2110;".";1)
    string mem_7777=GetField(mem_2110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_2110= mem_6666||","||mem_7777
    string mem_2110 = &'00B1' mem_2110                                    #    Добавление знака "+/-" для отчета
    math mem_2011 = abs(mem_2101-mem_2012)                                 #    Вычисления модуля отклонения между точками
# Сравнение и вывод
    compare mem_2109 mem_2011<=mem_2010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
# в отчет                     Номер канала;    Напряжение питания, В;    Поверяемая точка, В;    Измерение 1, В;        Измерение 2, В;    Нестабильность, В;    Допуск, В;        Вывод о соответствии;
report INSTB_U_Upit_MANY_CH    mem_3            mem_2141                mem_2100                mem_2101            mem_2102        mem_2011            mem_2110        mem_2109
EndFunction

############ Определение нестабильности выходного напряжения при изменении тока нагрузки. ##############################################################################
#F/Результат;                     Номер канала;    Напряжение СИ от U_max, В;    Ток СИ от Imax, А;    Ток нагрузки от Imax, А;    Интервал жидания, с;    Выходной ток от I_max 2, В;                        Количество измерений;
Function INSTB_U_Inagr_CH3    mem_3                    mem_2001                mem_3001                    mem_3999                    mem_69                        mem_3997                                mem_99
# Установка тока нагрузки    
        math mem_3998 = mem_3999 * I_indep
        call TOK_NAGRUZKI
# Установка выходного напряжения источника    
    math mem_2100 = mem_2001 * U_indep                                    #    Поверяемая точка
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значения напряжения в точке с нагрузкой    
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  VOLTAGE_METER mem_2101 = READ                            #    Считать показания мультиметра с нагрузкой
# Считывание значения напряжения в точке без нагрузки    
    math mem_3998 = mem_3997 * I_indep
    call TOK_NAGRUZKI                                        #    Установка тока нагрузки            
    math mem_2020=Nan           # очистка ячейки памяти
    Repeat mem_99                                                        #    Измеряется n раз
        message wait=mem_69 "Ожидайте выполнения измерения"    
        Driverget VOLTAGE_METER mem_2102 = READ
        math ++mem_2020=(mem_2102^2)                                    #    Рассчитывается Uср^2
    EndRepeat
    DriverSet LOAD_MODEL Load = Off                                        #    Выключение нагрузки
# Расчет допустимой погрешности и отклонения
    math mem_2112 = (sqrt(rms(mem_2020)))                                #    Расчет значения нестабильности, мВ dU = sqrt((Uср^2)/n)
    math mem_2019 = abs(mem_2101-mem_2112)                                 #    Вычисления модуля отклонения между точками
    math mem_2010 = VDCnagr_coe * mem_2100 + VDCnagr_con                #    Допустимое отклонение для точки
    math mem_2110 = mem_2010 * 1000                                     #    Перевод в миливольты
    string mem_6666=GetField(mem_2110;".";1)
    string mem_7777=GetField(mem_2110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_2110= mem_6666||","||mem_7777
    string mem_2110=&'00B1' mem_2110                                     #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    compare mem_2109 mem_2019<=mem_2010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
# в отчет                             Номер канала;    Поверяемая точка, В;    Показание источника с нагрузкой, В;    Ток нагрузки от Imax, А;    Показание источника без нагрузки, В;    Расчетная нестабильность;    Допуск;        Вывод о соответствии;
report INSTB_U_Inagr_MANY_CH        mem_3                    mem_2100                mem_2101                                        mem_3998                                                    mem_2112                                mem_2019                    mem_2110            mem_2109
EndFunction


############ Определение пульсации выходного напряжения. ###############################################################################################################
#F/Результат;        Номер канала;        Напряжение СИ от U_max, В;                    Ток нагрузки от Imax, А;        Интервал жидания, с;        
Function PVDC_CH3         mem_3            mem_2001                                            mem_3999                    mem_69                
# Установка выходного напряжения источника    
    math mem_2100 = mem_2001 * U_indep                                    #    Поверяемая точка
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
    else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Установка тока нагрузки    
    math mem_3998 = mem_3999 * I_indep                                    #    Значение тока нагрузки в точке
    call TOK_NAGRUZKI
# Считывание значения пульсаций в точке        
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  PULS_METER mem_2011 = READ                                #    Считать показания мультиметра (ток)
    DriverSet LOAD_MODEL Load = Off                                        #    Выключение нагрузки
# Расчет допустимой погрешности
    math mem_2010 = VDCpuls_coe * mem_2100 + VDCpuls_con                #    Допустимое отклонение для точки
    math mem_2011 = rand(mem_2010)
    math mem_2110 = mem_2010 * 1000                                      #    Перевод в миливольты
    string mem_6666=GetField(mem_2110;".";1)
    string mem_7777=GetField(mem_2110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_2110= mem_6666||","||mem_7777
    string mem_2110 = &'00B1' mem_2110                                      #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    compare mem_2109 mem_2011<=mem_2010 description="ПУЛЬСАЦИИ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
# в отчет                 Номер канала;    Поверяемая точка, В;        Ток нагрузки, В;        Пульсации нагрузки, В;    Допуск;    Вывод о соответствии;
report PVDC_MANY_CH        mem_3        mem_2100                    mem_3998                mem_2011                    mem_2110        mem_2109
EndFunction


############ Определение абсолютной погрешности формирования силы выходного тока. ######################################################################################
#F/Результат;        Номер канала;        Ток СИ от Imax, А;    Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;        Интервал жидания, с;    
Function IDC_CH3          mem_3            mem_3001                mem_2001                            mem_3999                    mem_69                            
# Установка тока нагрузки    
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    math mem_3998 = mem_3999 * I_indep
    call TOK_NAGRUZKI
# Установка выходного тока источника    
    math mem_3100 = mem_3001 * I_indep                                #    Поверяемая точка
    If Interface = true
        DriverSet Model_SI_Driver IDC = mem_3100                                                                # для удаленно управляемого источника
        else
        Message mem_3100 checksyntax  defvalue=mem_3100 "Установите на источнике выходное напряжение равное mem_3100 ,А \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значения тока в точке    
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  CURRENT_METER mem_3101 = IDC                                #     Считать показания мультиметра (ток)
# Расчет допустимой погрешности и отклонения    
    math mem_3010 = IDC_coe * mem_3100 + IDC_con                        #    Допустимое отклонение для точки
    math mem_3110 = mem_3010 * 1000                                       #    Перевод в милиамперы
    string mem_6666=GetField(mem_3110;".";1)
    string mem_7777=GetField(mem_3110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_3110= mem_6666||","||mem_7777
    string mem_3110 = &'00B1' mem_3110                                     #    Добавление знака "+/-" для отчета
    math mem_3011 = mem_3101-mem_3100                                     #    Вычисления модуля отклонения для точки
# Сравнение и вывод
    math mem_3019 = abs(mem_3011)
    compare mem_3109 mem_3019<=mem_3010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"    #     Определение нахождения значения в дропуске
# в отчет                 Номер канала;    Поверяемая точка, А;    Показание источника, А;        Погрешность;    Допуск;        Вывод о соответствии;
report IDC_MANY_CH      mem_3                mem_3100                mem_3101                    mem_3011        mem_3110        mem_3109

    If MeasureIDC = true
        Driverget Model_SI_Driver mem_3202 = IDC                            #    Запрос текущего значения вольтметра СИ
        math mem_3210 = IDCizm_coe * mem_3100 + IDCizm_con                    #    Пределы отклонений для точки
        math mem_3211 = mem_3202-mem_3100                                 #    Вычисления модуля отклонения
        math mem_3222 = mem_3210 * 1000                                      #    Перевод в миливольты
        string mem_3222 = &'00B1' mem_3222                                    #    Добавление знака "+/-" для отчета
        math mem_3219 = abs(mem_3211)
        compare mem_3209 mem_3219<=mem_3210 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
    # в отчет                     Поверяемая точка, В;        Измеренное значение, В;        Погрешность, В;        Допуск, В;        Вывод о соответствии;
    report IDC_izm                   mem_3100                    mem_3202                mem_3211            mem_3222        mem_3209
    EndIf
    
EndFunction

############ Определение нестабильности выходного тока при изменении напряжения питающей сети. ######################################################################### 
#F/Результат;                Номер канала;    Ток СИ от Imax, А;    Напряжение СИ от U_max, В;     Ток нагрузки от Imax, А;    Интервал жидания, с;    Напряжение питания от U_pit, В;        Количество измерений;
Function INSTB_I_Upit_CH3    mem_3                mem_3001                mem_2001                    mem_3999                    mem_69                        mem_2140                         mem_99    
# Установка выходного напряжения источника    
    DriverSet LOAD_MODEL Load = Off
    math mem_2100 = mem_2001 * U_indep
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
    else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Установка тока нагрузки    
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    math mem_3998 = mem_3999 * I_indep
    call TOK_NAGRUZKI
# Установка выходного тока источника    
    math mem_3100 = mem_3001 * I_indep                                     
    If Interface = true
        DriverSet Model_SI_Driver IDC = mem_3100                                                                # для удаленно управляемого источника
        else
        Message mem_3100 checksyntax  defvalue=mem_3100 "Установите на источнике выходное напряжение равное mem_3100 ,А \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  CURRENT_METER mem_3101 = IDC
# Плавная подстройка напряжения входного питания    
    call NASTROIKA_PITANIA
# Считывание значение тока при измененном напряжении входного питания    
    math mem_3020=Nan           # очистка ячейки памяти
    Repeat mem_99                                                        #    Измеряется n раз
        message wait=mem_69 "Ожидайте выполнения измерения"    
        Driverget  CURRENT_METER mem_3102 = IDC                            #     Считать показания мультиметра (ток)
        math ++mem_3020=(mem_3102^2)                                    #    Рассчитывается Uср^2
    EndRepeat
# Расчет допустимой погрешности и отклонения    
    math mem_3012 = (sqrt(rms(mem_3020)))                                #    Расчет значения нестабильности, мВ dU = sqrt((Uср^2)/n)
    math mem_3010 = IDCpit_coe * mem_3100 + IDCpit_con                    #    Допустимое отклонение для точки
    math mem_3110 = mem_3010 * 1000                                     #    Перевод в милиамперы
    string mem_6666=GetField(mem_3110;".";1)
    string mem_7777=GetField(mem_3110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_3110= mem_6666||","||mem_7777
    string mem_3110 = &'00B1' mem_3110                                    #    Добавление знака "+/-" для отчета
    math mem_3011 = abs(mem_3012-mem_3101)                                 #    Вычисления модуля отклонения между точками
# Сравнение и вывод
    compare mem_3109 mem_3011<=mem_3010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"    #     Определение нахождения значения в дропуске
# в отчет                         Номер канала;    Напряжение питания, В;    Поверяемая точка, А;    Измерение 1, В;        Измерение 2, В;        Нестабильность;        Допуск;                Выво
report INSTB_I_Upit_MANY_CH        mem_3            mem_2141                    mem_3100            mem_3101            mem_3102            mem_3011        mem_3110            mem_3109
EndFunction

######### Определение нестабильности выходного тока при изменении выходного напряжения. #############################################################################
#F/Результат;                Номер канала;    Ток СИ от Imax, А;    Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;        Интервал жидания, с;    Выходное напряжение от U_max 2, В;    Количество измерений;
Function INSTB_I_Unagr_CH3    mem_3            mem_3001                mem_2001                       mem_3999                        mem_69                        mem_2003                          mem_99 
# Установка тока нагрузки    
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    math mem_3998 = mem_3999 * I_indep
    call TOK_NAGRUZKI
# Установка выходного тока источника    
    math mem_3100 = mem_3001 * I_indep                                    
    If Interface = true
        DriverSet Model_SI_Driver IDC = mem_3100                                                                    # для удаленно управляемого источника
        else
        message "На поверяемом источнике установите регулятором выходного тока значение mem_3100 А"    # для источника без интерфейса
    endif
# Установка выходного напряжения источника    
    DriverSet LOAD_MODEL Load = Off
    math mem_2100 = mem_2001 * U_indep
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значения тока в точке с нагрузкой
    DriverSet LOAD_MODEL Load = On
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  CURRENT_METER mem_3101 = IDC                                #    Считать показания мультиметра с нагрузкой (ток)
    DriverSet LOAD_MODEL Load = Off
# Определение значения напряжения в нагрузке    
    math mem_2002 = U_indep * mem_2003                                    #    Расчет значения напряжения в поверяемой точке
        If Interface = true
            DriverSet Model_SI_Driver VDC = mem_2002                                                                                       # для удаленно управляемого источника
        else
            Message mem_2002 checksyntax  defvalue=mem_2002 "Установите на источнике выходное напряжение равное mem_2002 ,В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
        endif
    # Считывание значения тока в точке без нагрузки    
    DriverSet LOAD_MODEL Load = On
    math mem_3020=Nan           # очистка ячейки памяти
    Repeat mem_99                                                        #    Измеряется n раз
        message wait=mem_69 "Ожидайте выполнения измерения"
        Driverget  CURRENT_METER mem_3102 = IDC                                #    Считать показания мультиметра без нагрузки (ток)
        math ++mem_3020=(mem_3102^2)                                    #    Рассчитывается Uср^2
    EndRepeat
    DriverSet LOAD_MODEL Load = Off                                        #    Выключение нагрузки
# Расчет допустимой погрешности и отклонения    
    math mem_3112 = (sqrt(rms(mem_3020)))                                #    Расчет значения нестабильности, мВ dU = sqrt((Uср^2)/n)
    math mem_3011 = abs(mem_3101-mem_3112)                                 #    Вычисления модуля отклонения между точками
    math mem_3010 = IDCnagr_coe * mem_3100 + IDCnagr_con                #    Допустимое отклонение для точки
    math mem_3110 = mem_3010 * 1000                                       #    Перевод в милиамперы
    string mem_6666=GetField(mem_3110;".";1)
    string mem_7777=GetField(mem_3110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_3110= mem_6666||","||mem_7777
    string mem_3110 = &'00B1' mem_3110                                    #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    compare mem_3109 mem_3011<=mem_3010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"    #     Определение нахождения значения в дропуске
# в отчет                             Номер канала;        Значение тока в точке, А;    Показание источника с нагрузкой, А;    Напряжение нагрузки;        Показание источника без нагрузки, А;    Нестабильность, А;    Допуск, А;    Вывод о соответствии;
report INSTB_I_Unagr_MANY_CH        mem_3                 mem_3100                    mem_3101                                                        mem_2100                        mem_3112                                                mem_3011            mem_3110                mem_3109
EndFunction

############ Определение пульсации выходного тока. #####################################################################################################################
#F/Результат;        Номер канала;        Ток СИ от Imax, А;    Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;        Интервал жидания, с;    
Function PIDC_CH3         mem_3                mem_3001                mem_2001                    mem_3999                    mem_69                    
# Установка тока нагрузки    
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    math mem_3998 = mem_3999 * I_indep
    call TOK_NAGRUZKI
# Установка выходного тока источника    
    math mem_3100 = mem_3001 * I_indep                                    
    If Interface = true
        DriverSet Model_SI_Driver IDC = mem_3100                                                    # для удаленно управляемого источника
    else
        message "На поверяемом источнике установите регулятором выходного тока значение mem_3100 А"    # для источника без интерфейса
    endif
# Установка выходного напряжения источника    
    DriverSet    LOAD_MODEL             Load = Off
    math mem_2100 = mem_2001 * U_indep
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100 ,В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
    DriverSet    LOAD_MODEL             Load = On
# Считывание значения напряжения в точке
    message wait=mem_69 "Ожидайте выполнения измерения"
#    Driverget  PULS_METER mem_3101 = READ                                #    Считать показания мультиметра (ток)
# Расчет допустимой погрешности     
    math mem_3010 = IDCpuls_coe * mem_3100 + IDCpuls_con                #    Допустимое отклонение для точки
    math mem_3101 = rand(mem_3010)
    math mem_3110 = mem_3010 * 1000                                       #    Перевод в милиамперы
    string mem_6666=GetField(mem_3110;".";1)
    string mem_7777=GetField(mem_3110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_3110= mem_6666||","||mem_7777
    string mem_3110 = &'00B1' mem_3110                                    #    Добавление знака "+/-" для отчета
    DriverSet  Model_SI_Driver    OUT = 0
# Сравнение и вывод
    compare mem_3109 mem_3101<=mem_3010 description="ПУЛЬСАЦИИ НЕ В ДОПУСКЕ!"    #     Определение нахождения значения в дропуске
# в отчет                 Номер канала;    Поверяемая точка, А;    Выходное напряжение, В;    Пульсации;        Допуск;        Вывод о соответствии;
report PIDC_MANY_CH        mem_3            mem_3100                mem_2100                mem_3101        mem_3110        mem_3109
EndFunction




############ Функция плавной подстройки питания    ########################################################################################################################
Function NASTROIKA_PITANIA                    
    math mem_2141 = U_pit * mem_2140                                    
    DriverSet POWER_SUPPLY V = mem_2141
    #math mem_2 = U_pit
    #    if mem_2 > mem_2141
    #        repeat mem_2
    #        if mem_2 = mem_2141
    #        stoprepeat
    #        endif
    #        delay 100
    #        math mem_2 = mem_2 - 1
    #        DriverSet POWER_SUPPLY V = mem_2
    #        endrepeat
    #    else
    #        repeat mem_2
    #        if mem_2 = mem_2141
    #        stoprepeat
    #        endif
    #        delay 100
    #        math mem_2 = mem_2 + 1
    #        DriverSet POWER_SUPPLY V = mem_2
    #        
    #        endrepeat
    #    endif    
EndFunction

############ Функция сброса всех приборов ##############################################################################################################################
Function RESET_ALL

DriverSet    LOAD_MODEL             Load = Off
    if "interface" = "true"
        DriverSet    Model_SI_Driver        RESET
    endif
DriverSet    Keithley7001         RESET
DriverSet    VOLTAGE_METER         RESET
DriverSet    CURRENT_METER         RESET
DriverSet    PULS_METER             RESET
DriverSet    POWER_SUPPLY         V = 220

EndFunction

############ Проверка для нагрузки (нужно учитывать и ток, и напряжение, и мощность) ###################################################################################
Function TOK_NAGRUZKI
        if mem_3998 <= Load_Max_Curr                                 # Сравнение устанавливаемого значения тока с максимальным током Нагрузки
            math mem_1 = mem_3998*U2_max
            if mem_1<=Load_Max_Power
                DriverSet LOAD_MODEL I_H = mem_3998
            else
                math mem_3998=Load_Max_Power/U2_max
                DriverSet LOAD_MODEL I_H = mem_3998
            endif
        else 
            math mem_1 = I2_max*U2_max
            if mem_1<=Load_Max_Power
                DriverSet LOAD_MODEL I_H = Load_Max_Curr            # Если устанавливаемое значение больше максиманого тока Нагрузки - установить максимаотный ток нагрузки.
            else
                math mem_3998=Load_Max_Power/U2_max
                DriverSet LOAD_MODEL I_H = mem_3998
            endif
        endif
EndFunction



#########################################################################################################################################################################
#######   I   N   T   E   R   R   U   P   T   ##########################################################################################################################
#########################################################################################################################################################################


#########################################################################################################################################################################
#############        Начальные установки для определения основной погрешности установки выходного напряжения постоянного тока        #####################################
################################################ Установлен канал 1    #####################################################################################################

Interrupt before VDC  first_in_script
        message "Подключите канал mem_3 поверяемого источника питания для выполнения процедуры поверки в автоматическом режиме"
        
    # Установка тока нагрузки    
        if mem_3999 = 0
            DriverSet    LOAD_MODEL Load = Off
            math mem_3998 = mem_3999
        Else
            DriverSet    LOAD_MODEL Load = On                                    #    Включение нагрузки
 if mem_3=1
	math mem_3998 = mem_3999 * I1_max                                     #    Поверяемая точка
	else
	math mem_3998 = mem_3999 * I2_max                                     #    Поверяемая точка
endif
            call TOK_NAGRUZKI
        Endif
    # Установка выходного тока источника    
        if mem_3=1
		math mem_3100 = mem_3001 * I1_max
		else
		math mem_3100 = mem_3001 * I2_max
		endif
        If Interface = true
            DriverSet Model_SI_Driver Channel = mem_3                                                                # установка номера канала
            DriverSet  Model_SI_Driver    OUT = 1    
            DriverSet Model_SI_Driver IDC = mem_3100                                                                                    # для удаленно управляемого источника
            else
            message "На поверяемом источнике установите регулятором выходного тока максимальное значение"        # для источника без интерфейса
        endif
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Перевод вольтметра в режим VDC
        DriverSet VOLTAGE_METER RESET
        DriverSet VOLTAGE_METER Func = VDC
EndInterrupt

#########################################################################################################################################################################
#############        Начальные установки для определения основной нестабильности выходного напряжения при изменении напряжения питания        #################################

Interrupt before INSTB_U_Upit first_in_script
    #Перевод вольтметра в режим VDC
        DriverSet VOLTAGE_METER RESET
        DriverSet VOLTAGE_METER Func = VDC
    #Установка тока нагрузки    
        DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
 if mem_3=1
	math mem_3998 = mem_3999 * I1_max                                     #    Поверяемая точка
	else
	math mem_3998 = mem_3999 * I2_max                                     #    Поверяемая точка
endif
        call TOK_NAGRUZKI
    # Установка выходного тока источника    
        if mem_3=1
		math mem_3100 = mem_3001 * I1_max
		else
		math mem_3100 = mem_3001 * I2_max
		endif
        If Interface = true
            DriverSet Model_SI_Driver IDC = mem_3100                                                                                    # для удаленно управляемого источника
            else
            message "На поверяемом источнике установите регулятором выходного тока максимальное значение"        # для источника без интерфейса
        endif
EndInterrupt


#########################################################################################################################################################################
#############        Начальные установки для определения основной нестабильности выходного напряжения при изменении тока нагрузки        #################################

Interrupt before INSTB_U_Inagr first_in_script
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    #Установка тока нагрузки    
        DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
 if mem_3=1
	math mem_3998 = mem_3999 * I1_max                                     #    Поверяемая точка
	else
	math mem_3998 = mem_3999 * I2_max                                     #    Поверяемая точка
endif
        call TOK_NAGRUZKI
    #Перевод вольтметра в режим VDC
        DriverSet VOLTAGE_METER RESET
        DriverSet VOLTAGE_METER Func = VDC
EndInterrupt

#########################################################################################################################################################################
####################################        Начальные установки для определения пульсаций выходного напряжения ########################################################

Interrupt before PVDC first_in_script
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Перевод нагрузки в режим СV
#        DriverSet LOAD_MODEL MODE = CV
    #Перевод вольтметра в режим VDC
        DriverSet VOLTAGE_METER RESET
        DriverSet VOLTAGE_METER Func = VDC
        
        DriverSet PULS_METER   RESET
        
        DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
EndInterrupt


#########################################################################################################################################################################
####################################        Начальные установки для определения основной погрешности установки выходного тока ########################################################

Interrupt before IDC first_in_script
    # Перевод нагрузки в режим СC
        DriverSet LOAD_MODEL MODE = CC
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Установка диапазона для амперметра
            DriverSet CURRENT_METER Range_IDC = 30                            #    установка предела измерений амперметра 30А
    # Установка выходного напряжения источника    
        DriverSet LOAD_MODEL Load = Off
 if mem_3=1
 math mem_2100 = mem_2001 * U1_max
 else
  math mem_2100 = mem_2001 * U2_max
  endif
        If Interface = true
            DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
            Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
        endif
EndInterrupt

#########################################################################################################################################################################
#############        Начальные установки для определения основной нестабильности выходного тока при изменении напряжения питания        #################################

Interrupt before INSTB_I_Upit first_in_script
    # Перевод нагрузки в режим СC
        DriverSet LOAD_MODEL MODE = CC
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
EndInterrupt

#########################################################################################################################################################################
#############        Начальные установки для определения основной нестабильности выходного тока при изменении напряжения нагрузки        #################################

Interrupt before INSTB_I_Unagr first_in_script
    # Перевод нагрузки в режим СC
        DriverSet LOAD_MODEL MODE = CC
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
EndInterrupt


#########################################################################################################################################################################
####################################        Начальные установки для определения пульсаций выходного тока ########################################################

Interrupt before PIDC first_in_script
    # Перевод нагрузки в режим СC
        DriverSet LOAD_MODEL MODE = CC
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit

        DriverSet PULS_METER   RESET
EndInterrupt


#########################################################################################################################################################################
#############        Начальные установки для определения основной погрешности установки выходного напряжения постоянного тока        #####################################
################################################ Установлен канал 2    #####################################################################################################

Interrupt before VDC  (argument_change_1) and (mem_3 = 2)
    message "Подключите канал mem_3 поверяемого источника питания для выполнения процедуры поверки в автоматическом режиме"
# Установка тока нагрузки    
    if mem_3999 = 0
        DriverSet    LOAD_MODEL Load = Off
        math mem_3998 = mem_3999
    Else
        DriverSet    LOAD_MODEL Load = On                                    #    Включение нагрузки
if mem_3=1
	math mem_3998 = mem_3999 * I1_max                                     #    Поверяемая точка
	else
	math mem_3998 = mem_3999 * I2_max                                     #    Поверяемая точка
endif
            call TOK_NAGRUZKI
        Endif
    # Установка выходного тока источника    
 if mem_3=1
	math mem_3100 = mem_3001 * I1_max
	else
	math mem_3100 = mem_3001 * I2_max
endif
        If Interface = true
            DriverSet Model_SI_Driver Channel = mem_3                                                                # установка номера канала
            DriverSet  Model_SI_Driver    OUT = 1
            DriverSet Model_SI_Driver IDC = mem_3100                                                                                    # для удаленно управляемого источника
            else
            message "На поверяемом источнике установите регулятором выходного тока максимальное значение"        # для источника без интерфейса
        endif
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Перевод вольтметра в режим VDC
        DriverSet VOLTAGE_METER RESET
        DriverSet VOLTAGE_METER Func = VDC
EndInterrupt

#########################################################################################################################################################################
#############        Начальные установки для определения основной нестабильности выходного напряжения при изменении напряжения питания        #################################

Interrupt before INSTB_U_Upit (argument_change_1) and (mem_3 = 2)
    #Перевод вольтметра в режим VDC
        DriverSet VOLTAGE_METER RESET
        DriverSet VOLTAGE_METER Func = VDC
    # Установка выходного тока источника    
       if mem_3=1
	math mem_3100 = mem_3001 * I1_max
	else
	math mem_3100 = mem_3001 * I2_max
endif
        If Interface = true
            DriverSet Model_SI_Driver IDC = mem_3100                                                                                    # для удаленно управляемого источника
            else
            message "На поверяемом источнике установите регулятором выходного тока максимальное значение"        # для источника без интерфейса
        endif
EndInterrupt


#########################################################################################################################################################################
#############        Начальные установки для определения основной нестабильности выходного напряжения при изменении тока нагрузки        #################################

Interrupt before INSTB_U_Inagr (argument_change_1) and (mem_3 = 2)
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    #Перевод вольтметра в режим VDC
        DriverSet VOLTAGE_METER RESET
        DriverSet VOLTAGE_METER Func = VDC
EndInterrupt

#########################################################################################################################################################################
####################################        Начальные установки для определения пульсаций выходного напряжения ########################################################

Interrupt before PVDC (argument_change_1) and (mem_3 = 2)
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Перевод нагрузки в режим СV
#        DriverSet LOAD_MODEL MODE = CV
    #Перевод вольтметра в режим VDC
        DriverSet VOLTAGE_METER RESET
        DriverSet VOLTAGE_METER Func = VDC
        
        DriverSet PULS_METER   RESET
        
        DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    # Установка выходного напряжения источника    
 if mem_3=1
	math mem_2100 = mem_2001 * U1_max                                    #    Поверяемая точка
	else
	math mem_2100 = mem_2001 * U2_max                                    #    Поверяемая точка
endif
        If Interface = true
            DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
            Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
        endif
EndInterrupt


#########################################################################################################################################################################
####################################        Начальные установки для определения основной погрешности установки выходного тока ########################################################

Interrupt before IDC (argument_change_1) and (mem_3 = 2)
    # Перевод нагрузки в режим СC
        DriverSet LOAD_MODEL MODE = CC
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Установка выходного напряжения источника    
        DriverSet LOAD_MODEL Load = Off
 if mem_3=1
	math mem_2100 = mem_2001 * U1_max                                    #    Поверяемая точка
	else
	math mem_2100 = mem_2001 * U2_max                                    #    Поверяемая точка
endif
        If Interface = true
            DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
            Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
        endif
EndInterrupt

#########################################################################################################################################################################
#############        Начальные установки для определения основной нестабильности выходного тока при изменении напряжения питания        #################################

Interrupt before INSTB_I_Upit (argument_change_1) and (mem_3 = 2)
    # Перевод нагрузки в режим СC
        DriverSet LOAD_MODEL MODE = CC
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
EndInterrupt

#########################################################################################################################################################################
#############        Начальные установки для определения основной нестабильности выходного тока при изменении напряжения нагрузки        #################################

Interrupt before INSTB_I_Unagr (argument_change_1) and (mem_3 = 2)
    # Перевод нагрузки в режим СC
        DriverSet LOAD_MODEL MODE = CC
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
EndInterrupt


#########################################################################################################################################################################
####################################        Начальные установки для определения пульсаций выходного тока ########################################################

Interrupt before PIDC (argument_change_1) and (mem_3 = 2)
    # Перевод нагрузки в режим СC
        DriverSet LOAD_MODEL MODE = CC
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
        DriverSet PULS_METER   RESET
EndInterrupt


#########################################################################################################################################################################
#############        Начальные установки для определения основной погрешности установки выходного напряжения постоянного тока        #####################################
################################################ Установлен канал 3    #####################################################################################################

Interrupt before VDC  (argument_change_1) and (mem_3 = 3)
        message "Подключите канал mem_3 поверяемого источника питания для выполнения процедуры поверки в автоматическом режиме"
    # Установка тока нагрузки    
        if mem_3999 = 0
            DriverSet    LOAD_MODEL Load = Off
            math mem_3998 = mem_3999
        Else
            DriverSet    LOAD_MODEL Load = On                                    #    Включение нагрузки
 if mem_3=1
	math mem_3998 = mem_3999 * I1_max                                     #    Поверяемая точка
	else
	math mem_3998 = mem_3999 * I2_max                                     #    Поверяемая точка
endif
            call TOK_NAGRUZKI
        Endif
    # Установка выходного тока источника    
 if mem_3=1
	math mem_3100 = mem_3001 * I1_max
	else
	math mem_3100 = mem_3001 * I2_max
endif
        If Interface = true
            DriverSet Model_SI_Driver Channel = mem_3                                                                # установка номера канала
            DriverSet  Model_SI_Driver    OUT = 1
            DriverSet Model_SI_Driver IDC = mem_3100                                                                                    # для удаленно управляемого источника
            else
            message "На поверяемом источнике установите регулятором выходного тока максимальное значение"        # для источника без интерфейса
        endif
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Перевод вольтметра в режим VDC
        DriverSet VOLTAGE_METER RESET
        DriverSet VOLTAGE_METER Func = VDC
EndInterrupt

#########################################################################################################################################################################
#############        Начальные установки для определения основной нестабильности выходного напряжения при изменении напряжения питания        #################################

Interrupt before INSTB_U_Upit (argument_change_1) and (mem_3 = 3)
    #Перевод вольтметра в режим VDC
        DriverSet VOLTAGE_METER RESET
        DriverSet VOLTAGE_METER Func = VDC
    # Установка выходного тока источника    
       if mem_3=1
	math mem_3100 = mem_3001 * I1_max
	else
	math mem_3100 = mem_3001 * I2_max
endif
        If Interface = true
            DriverSet Model_SI_Driver IDC = mem_3100                                                                                    # для удаленно управляемого источника
            else
            message "На поверяемом источнике установите регулятором выходного тока максимальное значение"        # для источника без интерфейса
        endif
EndInterrupt


#########################################################################################################################################################################
#############        Начальные установки для определения основной нестабильности выходного напряжения при изменении тока нагрузки        #################################

Interrupt before INSTB_U_Inagr (argument_change_1) and (mem_3 = 3)
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    #Перевод вольтметра в режим VDC
        DriverSet VOLTAGE_METER RESET
        DriverSet VOLTAGE_METER Func = VDC
EndInterrupt

#########################################################################################################################################################################
####################################        Начальные установки для определения пульсаций выходного напряжения ########################################################

Interrupt before PVDC (argument_change_1) and (mem_3 = 3)
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Перевод нагрузки в режим СV
#        DriverSet LOAD_MODEL MODE = CV
    #Перевод вольтметра в режим VDC
        DriverSet VOLTAGE_METER RESET
        DriverSet VOLTAGE_METER Func = VDC
        
        DriverSet PULS_METER   RESET
        
        DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    # Установка выходного напряжения источника    
 if mem_3=1
	math mem_2100 = mem_2001 * U1_max                                    #    Поверяемая точка
	else
	math mem_2100 = mem_2001 * U2_max                                    #    Поверяемая точка
endif
        If Interface = true
            DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
            Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
        endif
EndInterrupt


#########################################################################################################################################################################
####################################        Начальные установки для определения основной погрешности установки выходного тока ########################################################

Interrupt before IDC (argument_change_1) and (mem_3 = 3)
    # Перевод нагрузки в режим СC
        DriverSet LOAD_MODEL MODE = CC
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Установка выходного напряжения источника    
        DriverSet LOAD_MODEL Load = Off
 if mem_3=1
	math mem_2100 = mem_2001 * U1_max                                    #    Поверяемая точка
	else
	math mem_2100 = mem_2001 * U2_max                                    #    Поверяемая точка
endif
        If Interface = true
            DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
            Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
        endif
EndInterrupt

#########################################################################################################################################################################
#############        Начальные установки для определения основной нестабильности выходного тока при изменении напряжения питания        #################################

Interrupt before INSTB_I_Upit (argument_change_1) and (mem_3 = 3)
    # Перевод нагрузки в режим СC
        DriverSet LOAD_MODEL MODE = CC
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
EndInterrupt

#########################################################################################################################################################################
#############        Начальные установки для определения основной нестабильности выходного тока при изменении напряжения нагрузки        #################################

Interrupt before INSTB_I_Unagr (argument_change_1) and (mem_3 = 3)
    # Перевод нагрузки в режим СC
        DriverSet LOAD_MODEL MODE = CC
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
EndInterrupt


#########################################################################################################################################################################
####################################        Начальные установки для определения пульсаций выходного тока ########################################################

Interrupt before PIDC (argument_change_1) and (mem_3 = 3)
    # Перевод нагрузки в режим СC
        DriverSet LOAD_MODEL MODE = CC
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
        DriverSet PULS_METER   RESET
EndInterrupt



#######################################################################################################################################################################################
##########   M   E   M   ###########################################################################################################################################################
#######################################################################################################################################################################################

#mem_1xxx - данные для заполнения таблиц по условиям проведения поверки + номера пунктов "Внешнего осмотра" и "Опробования"
#mem_2xxx - данные для заполнения таблиц по напряжению
#mem_3xxx - данные для заполнения таблиц по току
#mem_4xxx - данные для заполнения таблиц по сопротивлению
#mem_х1xx - данные для заполнения таблиц в отчет


