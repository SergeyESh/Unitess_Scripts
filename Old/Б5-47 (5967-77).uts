# Поверяемый прибор: Источник питания Б5-47
# Поверяемые параметры: (VDC), (IDC), (PVDC), (PIDC), (INSTB_U_Upit), (INSTB_I-Upit), (INSTB_U_Inagr), (INSTB_I_Unagr)
#      
#
# Поверяемые параметры: 
#         погрешность формирования выходного напряжения (VDC) и силы выходного тока (IDC)
#         пульсации выходного напряжения (PVDC) и выходного тока (PIDC)
#         нестабильности при изменении напряжения питающей сети выходного напряжения (INSTB_U_Upit) и тока (INSTB_I_Upit) 
#         нестабильность выходного напряжения при изменении тока нагрузки (INSTB_U_Inagr)
#         нестабильность выходного тока при изменении выходного напряжения (INSTB_I_Unagr)   
#         
#
####################################################################################################################################################### 
###############################################################  S   T   A   R   T   ##################################################################
#######################################################################################################################################################
#
#/ Скрипт для поверки прибора Б5-47
#/<-

#    Выбор поверяемого прибора
call MODE_PRIBOR_CHOICE

#    Выбор нагрузки
call LOAD_CHOISE

#    Выбор типа поверки
call MODE_POVERKA_CHOICE

#    Установка стандартных значений для данного скрипта  (DEFINE)
call START_DEFINE

#    Данные для отчета:
call MODE_INPUT_TABLE

#    Внешний осмотр поверяемого устройства
Call VISUAL_CHECK

#    Опробование устройства
Call OPROBIROVANIE


#####################################################################################################################################################################
##############################################################   D   O   T   S   ####################################################################################
#####################################################################################################################################################################

##################################################################################################################################################################
#/    Определение абсолютной погрешности формирования выходного постоянного напряжения.         
##################################################################################################################################################################

#                        Напряжение СИ, В;                   Ток СИ, А;        Ток нагрузки от Imax, А;    Интервал жидания, с;    
call VDC                00,1                                        2,99                        0                        1k    
call VDC                00,2                                        2,99                        0                        1k    
call VDC                00,3                                        2,99                        0                        1k    
call VDC                00,4                                        2,99                        0                        1k    
call VDC                00,5                                        2,99                        0                        1k    
call VDC                00,6                                        2,99                        0                        1k    
call VDC                00,7                                        2,99                        0                        1k    
call VDC                00,8                                         2,99                        0                        1k    
call VDC                00,9                                        2,99                        0                        1k    
call VDC                01,0                                        2,99                        0                        1k    
call VDC                02,0                                        2,99                        0                        1k    
call VDC                03,0                                        2,99                        0                        1k    
call VDC                04,0                                        2,99                        0                        1k    
call VDC                05,0                                        2,99                        0                        1k    
call VDC                06,0                                        2,99                        0                        1k    
call VDC                07,0                                        2,99                        0                        1k    
call VDC                08,0                                        2,99                        0                        1k    
call VDC                09,0                                        2,99                        0                        1k    
call VDC                10,0                                        2,99                        0                        1k    
call VDC                20,0                                        2,99                        0                        1k    
call VDC                29,9                                        2,99                        0                        1k    

###################################################################################################################################################################
#/    Определение нестабильности выходного напряжения при изменении напряжения питающей сети.
###################################################################################################################################################################

#                        Напряжение СИ, В;            Ток СИ, А;        Ток нагрузки от Imax, А;    Интервал жидания, с;    Напряжение питания от U_pit, В;    
call INSTB_U_Upit        29,9                          2,99                        0                            300k                    1,1
call INSTB_U_Upit        29,9                          2,99                        0                            300k                    0,9
call INSTB_U_Upit        29,9                          2,99                        0.8                            300k                    1,1
call INSTB_U_Upit        29,9                          2,99                        0.8                            300k                    0,9

###################################################################################################################################################################
#/    Определение нестабильности выходного напряжения при изменении тока нагрузки.             
###################################################################################################################################################################

#                        Напряжение СИ от U_max, В;        Ток СИ, А;        Ток нагрузки от Imax, А;    Интервал жидания, с;    Ток нагрузки от I_max 2, А;
call INSTB_U_Inagr        29,9                                2,99                0.8                            300k                    0,05

###################################################################################################################################################################
#/    Определение пульсации выходного напряжения.             
###################################################################################################################################################################

#                        Напряжение СИ от U_max, В;                                Ток нагрузки от Imax, А;    Интервал жидания, с;
call PVDC               29,9                                                        0,8                            300k
call PVDC               29,9                                                        0.05                        300k

###################################################################################################################################################################
#/    Определение абсолютной погрешности формирования силы выходного тока.             
###################################################################################################################################################################

#                        Ток СИ, А;        Напряжение СИ, В;        Ток нагрузки от Imax, А;    Интервал жидания, с;    
call IDC                0,01                    27,0                    1,05                        10k
call IDC                0,02                    27,0                    1,05                        10k
call IDC                0,03                    27,0                    1,05                        10k
call IDC                0,04                    27,0                    1,05                        10k
call IDC                0,05                    27,0                    1,05                        10k
call IDC                0,06                    27,0                    1,05                        10k
call IDC                0,07                    27,0                    1,05                        10k
call IDC                0,08                    27,0                    1,05                        10k
call IDC                0,09                    27,0                    1,05                        10k
call IDC                0,10                    27,0                    1,05                        10k
call IDC                0,20                    27,0                    1,05                        10k
call IDC                0,30                    27,0                    1,05                        10k
call IDC                0,40                    27,0                    1,05                        10k
call IDC                0,50                    27,0                    1,05                        10k
call IDC                0,60                    27,0                    1,05                        10k
call IDC                0,70                    27,0                    1,05                        10k
call IDC                0,80                    27,0                    1,05                        10k
call IDC                0,90                    27,0                    1,05                        10k
call IDC                1,00                    27,0                    1,05                        10k
call IDC                2,00                    27,0                    1,05                        10k
call IDC                2,99                    27,0                    1,05                        10k

###################################################################################################################################################################
#/ Определение нестабильности выходного тока при изменении напряжения питающей сети.             
###################################################################################################################################################################

#                        Ток СИ, А;          Напряжение СИ, В;         Ток нагрузки от Imax, А;    Интервал жидания, с;    Напряжение питания от U_pit, В;
call INSTB_I_Upit        2,99                    27,0                                1.05                        300k                    1,1                        
call INSTB_I_Upit        2,99                    27,0                                1.05                        300k                    0,9                        

###################################################################################################################################################################
#/    Определение нестабильности выходного тока при изменении выходного напряжения.            
###################################################################################################################################################################

#                        Ток СИ, А;           Напряжение СИ, В;        Ток нагрузки от Imax, А;    Интервал жидания, с;    Выходное напряжение от U_max 2, В;
call INSTB_I_Unagr          2,99                    27,0                            1.05                        300k                     03,0

###################################################################################################################################################################
#/    Определение пульсации выходного тока.                                                    
###################################################################################################################################################################

#                        Ток СИ от Imax, А;        Напряжение СИ, В;        Ток нагрузки от Imax, А;    Интервал жидания, с;
call PIDC               2,99                        27,0                        1.05                        300k
call PIDC               0                             27,0                        1.05                        300k

#########################################################################################################################################################################
#########   E   N   D   ###############################################################################################################################
#########################################################################################################################################################################

# Функция сброса всех приборов в изначальное состояние
call RESET_ALL
     if TestResult
          report result "годным"
     else
          report result "не годным"
     endif

EndScript 


#########################################################################################################################################################################
########   F   U   N   C   T   I   O   N   S   ##################################################################################################################################
#########################################################################################################################################################################

# Функция для выбора поверяемого прибора
Function MODE_PRIBOR_CHOICE
            define I_max                        2,99                        #    Максимальный выходной ток
            define U_max                        29,9                        #    Максимальное выходное напряжение
            define VDC_coe                        0.005                        #    коэффициент для пересчета погрешности
            define VDC_con                        0.0299                        #    коэффициент для пересчета погрешности
            define VDCpit_coe                    0                            #    коэффициент для пересчета погрешности
            define VDCpit_con                    2,99m                        #    коэффициент для пересчета погрешности
            define VDCnagr_coe                    0                            #    коэффициент для пересчета погрешности
            define VDCnagr_con                    14,95m                        #    коэффициент для пересчета погрешности
            define VDCpuls_coe                    0                            #    коэффициент для пересчета погрешности
            define VDCpuls_con                    1m                            #    коэффициент для пересчета погрешности
            define IDC_coe                        0.01                        #    коэффициент для пересчета погрешности
            define IDC_con                        0,00598                        #    коэффициент для пересчета погрешности
            define IDCpit_coe                    0                            #    коэффициент для пересчета погрешности
            define IDCpit_con                    1,495m                        #    коэффициент для пересчета погрешности
            define IDCnagr_coe                    0                            #    коэффициент для пересчета погрешности
            define IDCnagr_con                    2.99m                        #    коэффициент для пересчета погрешности
            define IDCpuls_coe                    0                            #    коэффициент для пересчета погрешности
            define IDCpuls_con                    5,98m                            #    коэффициент для пересчета погрешности
            define Model_SI_Report                 Б5-47                         #    Модель поверяемого источника питания
            define Model_SI_Driver                 Б547                         #    Модель поверяемого источника питания
            define Interface                     false                        #    Наличие интерфейса у модели
    
    define MeasureVDC                        false                            #    Наличие пункта поверки внутреннего вольтметра
    define MeasureIDC                        false                            #    Наличие пункта поверки внутреннего амперметра
    define METODIKA_POVERKI                 ЕЭ3.233.029 ТО                    #    Методика поверки
    define METODIKA_OSMOTR                     13.3.1                            #    № пункта для "Внешнего осмотра"
    define METODIKA_OPROB                     13.3.2                            #    № пункта для "Опробования"
    define CHANEL_NOM                        1                                #    Количество каналов
    define U_pit                            220                                #    Номинальное напряжение питания прибора
    define RegNum                            5967-77                        #    Номер в Госреестре
    report METPOV        "METODIKA_POVERKI"
    report Num        "RegNum"
    report Imax        "I_max А"
    report Umax        "U_max В"
    report Si        "Источник питания постоянного тока Model_SI_Report"
EndFunction

function MODE_POVERKA_CHOICE
#message mem_1 defvalue=1 LoadMenu = "Verification_mode.csv"     "Выберите тип поверки. "
message mem_1 selectmenu defvalue=2 "Выберите тип поверки :\n 1. Первичная \n 2. Периодическая" 
    CaseOne
    when    mem_1 = 1
    report Vid_poverki    "Первичная"
    when    mem_1 = 2 
    report Vid_poverki    "Периодическая"
    
    endcase
EndFunction



#########################################################################################################################################################################
#######   Вспомогательные функции   #####################################################################################################################################
#########################################################################################################################################################################

#Выбор модели нагрузки
Function LOAD_CHOISE
DriverSet    Keithley7001 OPEN_ALL                                     #    разомкнуть все 
    math mem_1000 = I_max
    math mem_2000 = U_max
#    if (mem_1000<=360) and (mem_2000<=60)
#        define LOAD_MODEL                        Akip1310                #    Используемая нагрузка(ки)
#        define Load_Max_Curr                    360                        #    Максимально допустимый ток нагрузки
#        define Load_Max_Volt                    60                        #    Максимально допустимое напряжение на нагрузке
#        define Load_Max_Power                    1,8k                    #    Максимальная рассеиваемая мощность
#            if    mem_1000 <= 30                                                            #    Максимальный ток меньше 30
#                DriverSet    Keithley7001 CLOSE = [2;4;7]                              #    замкнуть выходы 2, 4, 7 для установки предела измерений в 30А
#            Else
#                DriverSet    Keithley7001 CLOSE = [3;4;7]                              #    замкнуть выходы 3, 4, 7 для установки предела измерений в 300А
#            Endif
#    else
#        if (mem_1000<=36) and (mem_2000<=300)
#            define LOAD_MODEL                    Akip1320                #    Используемая нагрузка(ки)
#            define Load_Max_Curr                36                        #    Максимально допустимый ток нагрузки
#            define Load_Max_Volt                300                        #    Максимально допустимое напряжение на нагрузке
#            define Load_Max_Power                3,6k                    #    Максимальная рассеиваемая мощность
#                if    mem_1000 <= 30
#                    DriverSet    Keithley7001 CLOSE = [2;5;6]                              #    замкнуть выходы 2, 5, 6 для установки предела измерений в 30А
#                Else
#                    DriverSet    Keithley7001 CLOSE = [3;5;6]                              #    замкнуть выходы 3, 5, 6 для установки предела измерений в 300А
#                Endif
#        else
#            message mem_1 defvalue=1 "Электронная нагрузка не обеспечивает требуемую нагрузку по току и/или напряжению. Выберите используемую нагрузку: \n 1 - АКИП-1310 \n 2 - АКИП-1320 \n 3 - Остановить работу"
            message mem_1 defvalue=1 "Выберите используемую нагрузку: \n 1 - АКИП-1310 \n 2 - АКИП-1320 \n 3 - Остановить работу"
            if mem_1 = 1
                define LOAD_MODEL                Akip1310                #    Используемая нагрузка(ки)
                define Load_Max_Curr            360                        #    Максимально допустимый ток нагрузки
                define Load_Max_Volt            60                        #    Максимально допустимое напряжение на нагрузке
                define Load_Max_Power            1,8k                    #    Максимальная рассеиваемая мощность
                if    mem_1000 <= 30                                                            #    Максимальный ток меньше 30
                    DriverSet    Keithley7001 CLOSE = [2;4;7]                              #    замкнуть выходы 2, 4, 7 для установки предела измерений в 30А
                Else
                    DriverSet    Keithley7001 CLOSE = [3;4;7]                              #    замкнуть выходы 3, 4, 7 для установки предела измерений в 300А
                Endif
            endif
            
            if mem_1 = 2
                define LOAD_MODEL                Akip1320                #    Используемая нагрузка(ки)
                define Load_Max_Curr            36                        #    Максимально допустимый ток нагрузки
                define Load_Max_Volt            300                        #    Максимально допустимое напряжение на нагрузке
                define Load_Max_Power            3,6k                    #    Максимальная рассеиваемая мощность
                if    mem_1000 <= 30
                    DriverSet    Keithley7001 CLOSE = [2;5;6]                              #    замкнуть выходы 2, 5, 6 для установки предела измерений в 30А
                Else
                    DriverSet    Keithley7001 CLOSE = [3;5;6]                              #    замкнуть выходы 3, 5, 6 для установки предела измерений в 300А
                Endif
            endif
            
            if mem_1 = 3
            endscript                                                    #    Остановить скрипт
            endif
        #endif
        
    #endif
    DriverSet    LOAD_MODEL             RESET
EndFunction

# Функция для установки входных данных
Function START_DEFINE
    define VOLTAGE_METER                Keithley2002            #    Эталон для измерения напряжения
    define CURRENT_METER                Instek71000                #    Эталон для измерения силы тока
    define PULS_METER                    Akip2402                #    Эталон для измерения пульсаций
    message "На вольтметре АКИП-2402 нажмите кнопку 'Rem' для измерения уровня пульсаций" 
    define POWER_SUPPLY                    Akip1202                #    Эталонный источник питания (Латер)
EndFunction

#Внесение данных условий поверки
function MODE_INPUT_TABLE
# Создание таблицы для условий поверки
    table clear                                                                                     # очистка настройки наблицы 
    table row "Температура окружающего воздуха, С" checksyntax defvalue=20,0
    table row "Атмосферное давление, кПа" checksyntax defvalue=98,5
    table row "Относительная влажность окружающего воздуха, %" checksyntax defvalue=45
    table show mem_1000                                                                              # вывести меню
# Перенос значений из массива в переменные
    math mem_1001 = mem_1000[1]
    math mem_1002 = mem_1000[2]
    math mem_1003 = mem_1000[3]
# Занесение данных в протокол WORD
    report TEMP            mem_1001
    report PRESS        mem_1002
    report HUM            mem_1003
EndFunction

# Внешний осмотр поверяемого устройства
function VISUAL_CHECK
    message mem_1005 selectmenu_str defvalue="Соответствует" "Внешний осмотр\n Соответствует \n Не соответствует"
    if mem_1005="Соответствует"
        report VISUAL_CHECK "Соответствует"
    else
        report VISUAL_CHECK "Не соответствует"
        report result "не годным"
        Endscript
    endif
endfunction

#Опробование прибора
function OPROBIROVANIE
    message mem_1006 selectmenu_str defvalue="Соответствует" "Опробование\n Соответствует \n Не соответствует"
    if mem_1006="Соответствует"
        report OPROBIROVANIE "Соответствует"
    else
        report OPROBIROVANIE "Не соответствует"
        report result "не годным"
        EndScript
    endif
endfunction

############ Функция плавной подстройки питания    ########################################################################################################################
Function NASTROIKA_PITANIA                    
    math mem_2141 = U_pit * mem_2140                                    
    DriverSet POWER_SUPPLY V = mem_2141
    #math mem_2 = U_pit
    #    if mem_2 > mem_2141
    #        repeat mem_2
    #        if mem_2 = mem_2141
    #        stoprepeat
    #        endif
    #        delay 100
    #        math mem_2 = mem_2 - 1
    #        DriverSet POWER_SUPPLY V = mem_2
    #        endrepeat
    #    else
    #        repeat mem_2
    #        if mem_2 = mem_2141
    #        stoprepeat
    #        endif
    #        delay 100
    #        math mem_2 = mem_2 + 1
    #        DriverSet POWER_SUPPLY V = mem_2
    #        
    #        endrepeat
    #    endif    
EndFunction

############ Функция сброса всех приборов ##############################################################################################################################
Function RESET_ALL

DriverSet    LOAD_MODEL             RESET
    if "interface" = "true"
        DriverSet    Model_SI_Driver        RESET
    endif
DriverSet    Keithley7001         RESET
DriverSet    VOLTAGE_METER         RESET
DriverSet    CURRENT_METER         RESET
DriverSet    PULS_METER             RESET
DriverSet    POWER_SUPPLY         V = 220

EndFunction

############ Проверка для нагрузки (нужно учитывать и ток, и напряжение, и мощность) ###################################################################################
Function TOK_NAGRUZKI
        if mem_3998 <= Load_Max_Curr                                 # Сравнение устанавливаемого значения тока с максимальным током Нагрузки
            math mem_1 = mem_3998*U_max
            if mem_1<=Load_Max_Power
                DriverSet LOAD_MODEL I_H = mem_3998
            else
                math mem_3998=Load_Max_Power/U_max
                DriverSet LOAD_MODEL I_H = mem_3998
            endif
        else 
            math mem_1 = I_max*U_max
            if mem_1<=Load_Max_Power
                DriverSet LOAD_MODEL I_H = Load_Max_Curr            # Если устанавливаемое значение больше максиманого тока Нагрузки - установить максимаотный ток нагрузки.
            else
                math mem_3998=Load_Max_Power/U_max
                DriverSet LOAD_MODEL I_H = mem_3998
            endif
        endif
EndFunction


#########################################################################################################################################################################
#######   Функции для определения метрологических характеристик   #######################################################################################################
#########################################################################################################################################################################

############ Определение основной погрешности измерения выходного напряжения постоянного тока #########################################################################
#F/Результат ;            Выходное напряжение от U_max, В;    
Function VDC_izm                mem_2001                        
# Установка выходного напряжения источника
    math mem_2100 = mem_2001 * U_ust                                     #    Поверяемая точка
    If Interface = true
        DriverSet Kalibrator VDC = mem_2100                                                                                        # для удаленно управляемого источника
        else
        message  "На калибраторе при помощи регулятора напряжения установите выходное напряжение mem_2100 В"   # для источника без интерфейса
    endif
    message wait=2k "Ожидайте выполнения измерения"
    If Interface = true
        DriverGet Model_SI_Driver mem_2101 = VDC                                                                                         # для удаленно управляемого источника
        else
        Message mem_2101 checksyntax  defvalue=0 "Укажите значение напряжения измеренное внутренним вольтметром источника"        # для источника без интерфейса    
    endif                                #    Считать показания источника
# Расчет допустимой погрешности и отклонения    
    math mem_2010 = VDCizm_coe * mem_2100 + VDCizm_con                    #    Пределы отклонений для точки
    math mem_2011=mem_2101-mem_2100                                         #    Вычисления модуля отклонения
    math mem_2110 = mem_2010 * 1000                                      #    Перевод в миливольты
    string mem_6666=GetField(mem_2110;".";1)
    string mem_7777=GetField(mem_2110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_2110= mem_6666||","||mem_7777
    string mem_2110 = &'00B1' mem_2110                                    #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    math mem_2019 = abs(mem_2011)
    compare mem_2109 mem_2019<=mem_2010                            #    Определение нахождения значения в дропуске
# в отчет                     Поверяемая точка, В;        Измеренное значение, В;        Погрешность, В;        Допуск, В;        Вывод о соответствии;
report VDC_izm                   mem_2100                    mem_2101                mem_2011            mem_2110        mem_2109
EndFunction


############ Определение основной погрешности установки выходного напряжения постоянного тока #########################################################################
#F/Результат ;                Напряжение СИ, В;           Ток СИ, А;          Ток нагрузки от Imax, А;         Интервал жидания, с;
Function VDC                    mem_2001                mem_3001                    mem_3999                    mem_69
# Установка выходного напряжения источника    
    math mem_2100 = mem_2001                                     #    Поверяемая точка
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                    # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значения напряжения в точке    
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget VOLTAGE_METER mem_2101 = READ                                #    Запрос текущего значения вольтметра
# Расчет допустимой погрешности и отклонения
    math mem_2010 = VDC_coe * mem_2100 + VDC_con                        #    Допустимое отклонение для точки
    math mem_2011=mem_2101-mem_2100                                     #    Вычисления модуля отклонения между точками
    math mem_2110 = mem_2010 * 1000                                      #    Перевод в миливольты
    string mem_6666=GetField(mem_2110;".";1)
    string mem_7777=GetField(mem_2110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_2110= mem_6666||","||mem_7777
    string mem_2110 = &'00B1' mem_2110                                    #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    math mem_2019 = abs(mem_2011)
    compare mem_2109 mem_2019<=mem_2010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
# в отчет                     Поверяемая точка, В;    Измеренное значение, В;        Отклонение, В;        Допуск, В;        Вывод о соответствии;
report VDC                  mem_2100                mem_2101                    mem_2011            mem_2110        mem_2109

    If MeasureVDC = true
        Driverget Model_SI_Driver mem_2202 = VDC                            #    Запрос текущего значения вольтметра СИ
        math mem_2210 = VDCizm_coe * mem_2100 + VDCizm_con                    #    Пределы отклонений для точки
        math mem_2211 = mem_2202-mem_2100                                     #    Вычисления модуля отклонения
        math mem_2222 = mem_2210 * 1000                                      #    Перевод в миливольты
        string mem_6666=GetField(mem_2222;".";1)
        string mem_7777=GetField(mem_2222;".";2)
            if mem_7777 = Nan
            math mem_7777 = 0
            endif
        string mem_2222= mem_6666||","||mem_7777
        string mem_2222 = &'00B1' mem_2222                                    #    Добавление знака "+/-" для отчета
        math mem_2219 = abs(mem_2211)
        compare mem_2209 mem_2219<=mem_2210 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в допуске
    # в отчет                     Поверяемая точка, В;        Измеренное значение, В;        Погрешность, В;        Допуск, В;        Вывод о соответствии;
    report VDC_izm                   mem_2100                    mem_2202                mem_2211            mem_2222        mem_2209
    EndIf
    
EndFunction

############ Определение основной погрешности установки выходного напряжения постоянного тока с разнвми коэффициентами для для разых напряжений #######################
#F/Результат ;            Напряжение СИ от U_max, В;    Ток СИ от Imax, А;        Ток нагрузки от Imax, А;        Интервал жидания, с;
Function VDC_pred                mem_2001                mem_3001                    mem_3999                    mem_69
# Установка выходного напряжения источника    
    if  mem_2001 > 1
        math mem_2100 = mem_2001                                             #    Поверяемая точка
    Else
        math mem_2100 = mem_2001 * U_max                                     #    Поверяемая точка
    Endif
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                    # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значения напряжения в точке    
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget VOLTAGE_METER mem_2101 = READ                                #    Запрос текущего значения вольтметра
# Расчет допустимой погрешности и отклонения
        Caseone
        when mem_2100 < pred_VDC_1
            math mem_9000 = koef_for_VDCcon_1
        when (mem_2100 >= pred_VDC_1) and (mem_2100 < pred_VDC_2)
            math mem_9000 = koef_for_VDCcon_2
        when (mem_2100 >= pred_VDC_2) and (mem_2100 <= pred_VDC_3)
            math mem_9000 = koef_for_VDCcon_3
        endcase    
    math mem_2010 = (VDC_coe * mem_2100) + (VDC_con * mem_9000)            #    Допустимое отклонение для точки
    math mem_2011=mem_2101-mem_2100                                     #    Вычисления модуля отклонения между точками
    math mem_2110 = mem_2010 * 1000                                      #    Перевод в миливольты
    string mem_6666=GetField(mem_2110;".";1)
    string mem_7777=GetField(mem_2110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_2110= mem_6666||","||mem_7777
    string mem_2110 = &'00B1' mem_2110                                    #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    math mem_2019 = abs(mem_2011)
    compare mem_2109 mem_2019<=mem_2010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
# в отчет                     Поверяемая точка, В;    Измеренное значение, В;        Отклонение, В;        Допуск, В;        Вывод о соответствии;
report VDC                  mem_2100                mem_2101                    mem_2011            mem_2110        mem_2109

    If MeasureVDC = true
        Driverget Model_SI_Driver mem_2202 = VDC                            #    Запрос текущего значения вольтметра СИ
        math mem_2210 = VDCizm_coe * mem_2100 + VDCizm_con                    #    Пределы отклонений для точки
        math mem_2211 = mem_2202-mem_2100                                     #    Вычисления модуля отклонения
        math mem_2222 = mem_2210 * 1000                                      #    Перевод в миливольты
        string mem_2222 = &'00B1' mem_2222                                    #    Добавление знака "+/-" для отчета
        math mem_2219 = abs(mem_2211)
        compare mem_2209 mem_2219<=mem_2210 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
    # в отчет                     Поверяемая точка, В;        Измеренное значение, В;        Погрешность, В;        Допуск, В;        Вывод о соответствии;
    report VDC_izm                   mem_2100                    mem_2202                mem_2211            mem_2222        mem_2209
    EndIf
    
EndFunction

############ Определение основной погрешности установки выходного напряжения постоянного тока для установленных значений ###############################################
#F/Результат ;            Напряжение СИ от U_max, В;    Ток СИ от Imax, А;        Ток нагрузки от Imax, А;        Интервал жидания, с;
Function VDC_ust                mem_2001                mem_3001                    mem_3999                    mem_69
# Установка тока нагрузки    
    if mem_3999 = 0
        DriverSet    LOAD_MODEL Load = Off
        math mem_3998 = mem_3999
    Else
        DriverSet    LOAD_MODEL Load = On                                    #    Включение нагрузки
        math mem_3998 = mem_3999 * I_max
        call TOK_NAGRUZKI
    Endif
# Установка выходного тока источника    
    math mem_3100 = mem_3001 * I_max
    If Interface = true
        DriverSet Model_SI_Driver IDC = mem_3100                                                                                    # для удаленно управляемого источника
        else
        message "На поверяемом источнике установите регулятором выходного тока максимальное значение"        # для источника без интерфейса
    endif
# Установка выходного напряжения источника    
    math mem_2100 = mem_2001                                              #    Поверяемая точка
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                    # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значения напряжения в точке    
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget VOLTAGE_METER mem_2101 = READ                                #    Запрос текущего значения вольтметра
# Расчет допустимой погрешности и отклонения
    math mem_2010 = VDC_coe * mem_2100 + VDC_con                        #    Допустимое отклонение для точки
    math mem_2011=mem_2101-mem_2100                                     #    Вычисления модуля отклонения между точками
    math mem_2110 = mem_2010 * 1000                                      #    Перевод в миливольты
    string mem_6666=GetField(mem_2110;".";1)
    string mem_7777=GetField(mem_2110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_2110= mem_6666||","||mem_7777
    string mem_2110 = &'00B1' mem_2110                                    #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    math mem_2019 = abs(mem_2011)
    compare mem_2109 mem_2019<=mem_2010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
# в отчет                     Поверяемая точка, В;    Измеренное значение, В;        Ток нагрузки, А;    Отклонение, В;        Допуск, В;        Вывод о соответствии;
report VDC_ust                  mem_2100                mem_2101                    mem_3998            mem_2011            mem_2110        mem_2109

    If MeasureVDC = true
        Driverget Model_SI_Driver mem_2202 = VDC                            #    Запрос текущего значения вольтметра СИ
        math mem_2210 = VDCizm_coe * mem_2100 + VDCizm_con                    #    Пределы отклонений для точки
        math mem_2211 = mem_2202-mem_2100                                     #    Вычисления модуля отклонения
        math mem_2222 = mem_2210 * 1000                                      #    Перевод в миливольты
        string mem_2222 = &'00B1' mem_2222                                    #    Добавление знака "+/-" для отчета
        math mem_2219 = abs(mem_2211)
        compare mem_2209 mem_2219<=mem_2210 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
    # в отчет                     Поверяемая точка, В;        Измеренное значение, В;        Погрешность, В;        Допуск, В;        Вывод о соответствии;
    report VDC_izm                   mem_2100                    mem_2202                mem_2211            mem_2222        mem_2209
    EndIf
    
EndFunction


############ Определение нестабильности выходного напряжения при изменении напряжения питающей сети. ###################################################################
#F/Результат ;                 Напряжение СИ, В;           Ток СИ, А;        Ток нагрузки от Imax, А;        Интервал жидания, с;    Напряжение питания от U_pit, В;                
Function INSTB_U_Upit            mem_2001                mem_3001                    mem_3999                    mem_69                        mem_2140                                
# Установка входного напряжения источника
    DriverSet POWER_SUPPLY V = U_pit
# Установка выходного напряжения источника    
    math mem_2100 = mem_2001                                     #    Выходное напряжение источника
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                        # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif



# Считывание значение напряжения в опорной точке    
        if mem_3999 = 0
           DriverSet LOAD_MODEL Load = Off                                        #    Включение нагрузки
        else
           math mem_3998 = mem_3999 * I_max
           call TOK_NAGRUZKI        
           DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
        endif



    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  VOLTAGE_METER mem_2101 = READ                            #    Считать показания мультиметра
# Плавная подстройка напряжения входного питания
    call NASTROIKA_PITANIA
# Считывание значение напряжения при измененном напряжении входного питания
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  VOLTAGE_METER mem_2102 = READ                            #    Считать показания мультиметра
    DriverSet LOAD_MODEL Load = Off                                        #    Выключение нагрузки
# Расчет допустимой погрешности и отклонения
    math mem_2010 = VDCpit_coe * mem_2100 + VDCpit_con                    #    Допустимое отклонение для точки
    math mem_2110 = mem_2010 * 1000                                     #    Перевод в миливольты
    string mem_6666=GetField(mem_2110;".";1)
    string mem_7777=GetField(mem_2110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_2110= mem_6666||","||mem_7777
    string mem_2110 = &'00B1' mem_2110                                    #    Добавление знака "+/-" для отчета
    math mem_2011 = abs(mem_2101-mem_2102)                                     #    Вычисления модуля отклонения между точками
# Сравнение и вывод
    compare mem_2109 mem_2011<=mem_2010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
# в отчет                     Напряжение питания, В;    Поверяемая точка, В;    Измерение 1, В;        Измерение 2, В;    Нестабильность, В;    Допуск, В;        Вывод о соответствии;
report INSTB_U_Upit            mem_2141                mem_2100                mem_2101            mem_2102        mem_2011            mem_2110        mem_2109
EndFunction

############ Определение нестабильности выходного напряжения при изменении напряжения питающей сети. ###################################################################
#F/Результат ;            Напряжение СИ от U_max, В;    Ток СИ от Imax, А;        Ток нагрузки от Imax, А;        Интервал жидания, с;    Напряжение питания от U_pit, В;        Количество измерений;            
Function INSTB_U_Upit_povt        mem_2001                mem_3001                    mem_3999                    mem_69                        mem_2140                           mem_99     
# Установка входного напряжения источника
    DriverSet POWER_SUPPLY V = U_pit
# Установка выходного напряжения источника    
    math mem_2100 = mem_2001 * U_max                                     #    Выходное напряжение источника
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                        # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значение напряжения в опорной точке    
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  VOLTAGE_METER mem_2101 = READ                            #    Считать показания мультиметра
# Плавная подстройка напряжения входного питания
    call NASTROIKA_PITANIA
# Считывание значение напряжения при измененном напряжении входного питания
    math mem_2020=Nan           # очистка ячейки памяти
    Repeat mem_99                                                        #    Измеряется n раз
        message wait=mem_69 "Ожидайте выполнения измерения"    
        Driverget VOLTAGE_METER mem_2102 = READ
        math ++mem_2020=(mem_2102^2)                                    #    Рассчитывается Uср^2
    EndRepeat
    DriverSet LOAD_MODEL Load = Off                                        #    Выключение нагрузки
# Расчет допустимой погрешности и отклонения
    math mem_2012 = (sqrt(rms(mem_2020)))                                #    Расчет значения нестабильности, мВ dU = sqrt((Uср^2)/n)
    math mem_2010 = VDCpit_coe * mem_2100 + VDCpit_con                    #    Допустимое отклонение для точки
    math mem_2110 = mem_2010 * 1000                                     #    Перевод в миливольты
    string mem_6666=GetField(mem_2110;".";1)
    string mem_7777=GetField(mem_2110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_2110= mem_6666||","||mem_7777
    string mem_2110 = &'00B1' mem_2110                                    #    Добавление знака "+/-" для отчета
    math mem_2011 = abs(mem_2101-mem_2012)                                 #    Вычисления модуля отклонения между точками
# Сравнение и вывод
    compare mem_2109 mem_2011<=mem_2010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
# в отчет                     Напряжение питания, В;    Поверяемая точка, В;    Измерение 1, В;        Измерение 2, В;        Нестабильность, В;    Допуск, В;        Вывод о соответствии;
report INSTB_U_Upit            mem_2141                mem_2100                mem_2101            mem_2102            mem_2011            mem_2110        mem_2109
EndFunction

############ Определение нестабильности выходного напряжения при изменении напряжения питающей сети. ###################################################################
#F/Результат ;            Напряжение СИ от U_max, В;    Ток СИ от Imax, А;        Ток нагрузки от Imax, А;        Интервал жидания, с;    Напряжение питания от U_pit, В;        Количество измерений;            
Function INSTB_U_Upit_povt_nom    mem_2001                mem_3001                    mem_3999                    mem_69                        mem_2140                           mem_99     
# Установка выходного напряжения источника    
    math mem_2100 = mem_2001 * U_max                                     #    Выходное напряжение источника
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                        # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Плавная подстройка напряжения входного питания
    call NASTROIKA_PITANIA
# Считывание значение напряжения при измененном напряжении входного питания
    math mem_2020=Nan           # очистка ячейки памяти
    Repeat mem_99                                                        #    Измеряется n раз
        message wait=mem_69 "Ожидайте выполнения измерения"    
        Driverget VOLTAGE_METER mem_2102 = READ
        math ++mem_2020=(mem_2102^2)                                    #    Рассчитывается Uср^2
    EndRepeat
# Расчет допустимой погрешности и отклонения
    math mem_2012 = (sqrt(rms(mem_2020)))                                #    Расчет значения нестабильности, мВ dU = sqrt((Uср^2)/n)
    math mem_2010 = VDCpit_coe * mem_2100 + VDCpit_con                    #    Допустимое отклонение для точки
    math mem_2110 = mem_2010 * 1000                                     #    Перевод в миливольты
    string mem_6666=GetField(mem_2110;".";1)
    string mem_7777=GetField(mem_2110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_2110= mem_6666||","||mem_7777
    string mem_2110 = &'00B1' mem_2110                                    #    Добавление знака "+/-" для отчета
    math mem_2011 = abs(mem_2100-mem_2012)                                 #    Вычисления модуля отклонения между точками
# Сравнение и вывод
    compare mem_2109 mem_2011<=mem_2010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
# в отчет                     Напряжение питания, В;    Поверяемая точка, В;    Измерение 1, В;        Измерение 2, В;        Нестабильность, В;    Допуск, В;        Вывод о соответствии;
report INSTB_U_Upit            mem_2141                mem_2100                mem_2101            mem_2102            mem_2011            mem_2110        mem_2109
EndFunction


############ Определение нестабильности выходного напряжения при изменении тока нагрузки. ##############################################################################
#F/Результат;                  Напряжение СИ, В;          Ток СИ, А;          Ток нагрузки от Imax, А;        Интервал жидания, с;    Выходной ток от I_max 2, В;                
Function INSTB_U_Inagr            mem_2001                mem_3001                    mem_3999                    mem_69                        mem_3997
# Установка тока нагрузки    
        math mem_3998 = mem_3999 * I_max
        call TOK_NAGRUZKI
# Установка выходного напряжения источника    
    math mem_2100 = mem_2001                                    #    Поверяемая точка
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значения напряжения в точке с нагрузкой    
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  VOLTAGE_METER mem_2101 = READ                            #    Считать показания мультиметра с нагрузкой
            if mem_3999 != mem_3997    
            # Считывание значения напряжения в точке без нагрузки    
                math mem_3998 = mem_3997 * I_max
                call TOK_NAGRUZKI                                        #    Установка тока нагрузки            
                message wait=mem_69 "Ожидайте выполнения измерения"
                Driverget  VOLTAGE_METER mem_2102 = READ                #    Считать показания мультиметра без нагрузки
                math mem_2011 = mem_2102-mem_2101                         #    Вычисления отклонения между точками
                math mem_2019 = abs(mem_2011)                            #    Вычисления модуля отклонения
            Else
                math mem_2011 = mem_2101-mem_2100                        #    Вычисления отклонения между точками
                math mem_2019 = abs(mem_2011)                            #    Вычисления модуля отклонения
                string mem_2102 = "не измерялось в соотв. с методикой"
            Endif
# Расчет допустимой погрешности и отклонения
    math mem_2010 = VDCnagr_coe * mem_2100 + VDCnagr_con                #    Допустимое отклонение для точки
    math mem_2110 = mem_2010 * 1000                                     #    Перевод в миливольты
    string mem_6666=GetField(mem_2110;".";1)
    string mem_7777=GetField(mem_2110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_2110= mem_6666||","||mem_7777
    string mem_2110=&'00B1' mem_2110                                     #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    compare mem_2109 mem_2019<=mem_2010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
# в отчет                     Поверяемая точка, В;    Показание источника с нагрузкой, В;    Показание источника без нагрузки, В;    Расчетная нестабильность;    Допуск;        Вывод о соответствии;
report INSTB_U_Inagr        mem_2100                mem_2101                            mem_2102                                mem_2019                    mem_2110    mem_2109
EndFunction

############ Определение нестабильности выходного напряжения при изменении тока нагрузки. ##############################################################################
#F/Результат;             Напряжение СИ от U_max, В;    Ток СИ от Imax, А;        Ток нагрузки от Imax, А;        Интервал жидания, с;    Выходной ток от I_max 2, В;                
Function INSTB_U_Inagr_pred    mem_2001                mem_3001                    mem_3999                    mem_69                        mem_3997
# Установка тока нагрузки    
        math mem_3998 = mem_3999 * I_max
        call TOK_NAGRUZKI
# Установка выходного напряжения источника    
    math mem_2100 = mem_2001 * U_max                                    #    Поверяемая точка
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значения напряжения в точке с нагрузкой    
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  VOLTAGE_METER mem_2101 = READ                            #    Считать показания мультиметра с нагрузкой
            if mem_3999 != mem_3997    
            # Считывание значения напряжения в точке без нагрузки    
                math mem_3998 = mem_3997 * I_max
                call TOK_NAGRUZKI                                        #    Установка тока нагрузки            
                message wait=mem_69 "Ожидайте выполнения измерения"
                Driverget  VOLTAGE_METER mem_2102 = READ                #    Считать показания мультиметра без нагрузки
                math mem_2011 = mem_2102-mem_2101                         #    Вычисления отклонения между точками
                math mem_2019 = abs(mem_2011)                            #    Вычисления модуля отклонения
            Else
                math mem_2011 = mem_2101-mem_2100                        #    Вычисления отклонения между точками
                math mem_2019 = abs(mem_2011)                            #    Вычисления модуля отклонения
                string mem_2102 = "не измерялось в соотв. с методикой"
            Endif
# Расчет допустимой погрешности и отклонения
    if mem_3997 > 10
        math mem_2010 = VDCnagr_coe_2 * mem_2100 + VDCnagr_con                #    Допустимое отклонение для точки
    Else
        math mem_2010 = VDCnagr_coe_1 * mem_2100 + VDCnagr_con                #    Допустимое отклонение для точки
    Endif
    math mem_2110 = mem_2010 * 1000                                     #    Перевод в миливольты
    string mem_6666=GetField(mem_2110;".";1)
    string mem_7777=GetField(mem_2110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_2110= mem_6666||","||mem_7777
    string mem_2110=&'00B1' mem_2110                                     #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    compare mem_2109 mem_2019<=mem_2010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
# в отчет                     Поверяемая точка, В;    Показание источника с нагрузкой, В;    Показание источника без нагрузки, В;    Расчетная нестабильность;    Допуск;        Вывод о соответствии;
report INSTB_U_Inagr        mem_2100                mem_2101                            mem_2102                                mem_2019                    mem_2110    mem_2109
EndFunction

############ Определение нестабильности выходного напряжения при изменении тока нагрузки. ##############################################################################
#F/Результат;             Напряжение СИ от U_max, В;    Ток СИ от Imax, А;        Ток нагрузки от Imax, А;        Интервал жидания, с;    Выходной ток от I_max 2, В;            Количество измерений;        
Function INSTB_U_Inagr_povt    mem_2001                mem_3001                    mem_3999                    mem_69                        mem_3997                           mem_99     
# Установка тока нагрузки    
        math mem_3998 = mem_3999 * I_max
        call TOK_NAGRUZKI
# Установка выходного напряжения источника    
    math mem_2100 = mem_2001 * U_max                                    #    Поверяемая точка
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значения напряжения в точке с нагрузкой    
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  VOLTAGE_METER mem_2101 = READ                            #    Считать показания мультиметра с нагрузкой
# Считывание значения напряжения в точке без нагрузки    
    math mem_3998 = mem_3997 * I_max
    call TOK_NAGRUZKI                                        #    Установка тока нагрузки            
    math mem_2020=Nan           # очистка ячейки памяти
    Repeat mem_99                                                        #    Измеряется n раз
        message wait=mem_69 "Ожидайте выполнения измерения"    
        Driverget VOLTAGE_METER mem_2102 = READ
        math ++mem_2020=(mem_2102^2)                                    #    Рассчитывается Uср^2
    EndRepeat
    DriverSet LOAD_MODEL Load = Off                                        #    Выключение нагрузки
# Расчет допустимой погрешности и отклонения
    math mem_2112 = (sqrt(rms(mem_2020)))                                #    Расчет значения нестабильности, мВ dU = sqrt((Uср^2)/n)
    math mem_2019 = abs(mem_2101-mem_2112)                                 #    Вычисления модуля отклонения между точками
    math mem_2010 = VDCnagr_coe * mem_2100 + VDCnagr_con                #    Допустимое отклонение для точки
    math mem_2110 = mem_2010 * 1000                                     #    Перевод в миливольты
    string mem_6666=GetField(mem_2110;".";1)
    string mem_7777=GetField(mem_2110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_2110= mem_6666||","||mem_7777
    string mem_2110=&'00B1' mem_2110                                     #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    compare mem_2109 mem_2019<=mem_2010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
# в отчет                     Поверяемая точка, В;    Показание источника с нагрузкой, В;    Показание источника без нагрузки, В;    Расчетная нестабильность;    Допуск;        Вывод о соответствии;
report INSTB_U_Inagr        mem_2100                mem_2101                            mem_2112                                mem_2019                    mem_2110    mem_2109
EndFunction

############ Определение нестабильности выходного напряжения при изменении тока нагрузки. ##############################################################################
#F/Результат;             Напряжение СИ от U_max, В;    Ток СИ от Imax, А;        Ток нагрузки от Imax, А;        Интервал жидания, с;    Выходной ток от I_max 2, В;            Количество измерений;        
Function INSTB_U_Inagr_povt_nom mem_2001                mem_3001                    mem_3999                    mem_69                        mem_3997                           mem_99     
# Установка тока нагрузки    
        math mem_3998 = mem_3999 * I_max
        call TOK_NAGRUZKI
# Установка выходного напряжения источника    
    math mem_2100 = mem_2001 * U_max                                    #    Поверяемая точка
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значения напряжения в точке с нагрузкой    
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    math mem_3998 = mem_3997 * I_max
    call TOK_NAGRUZKI                                        #    Установка тока нагрузки            
    math mem_2020=Nan           # очистка ячейки памяти
    Repeat mem_99                                                        #    Измеряется n раз
        message wait=mem_69 "Ожидайте выполнения измерения"    
        Driverget VOLTAGE_METER mem_2102 = READ
        math ++mem_2020=(mem_2102^2)                                    #    Рассчитывается Uср^2
    EndRepeat
    DriverSet LOAD_MODEL Load = Off                                        #    Выключение нагрузки
# Расчет допустимой погрешности и отклонения
    math mem_2112 = (sqrt(rms(mem_2020)))                                #    Расчет значения нестабильности, мВ dU = sqrt((Uср^2)/n)
    math mem_2019 = abs(mem_2100-mem_2112)                                 #    Вычисления модуля отклонения между точками
    math mem_2010 = VDCnagr_coe * mem_2100 + VDCnagr_con                #    Допустимое отклонение для точки
    math mem_2110 = mem_2010 * 1000                                     #    Перевод в миливольты
    string mem_6666=GetField(mem_2110;".";1)
    string mem_7777=GetField(mem_2110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_2110= mem_6666||","||mem_7777
    string mem_2110=&'00B1' mem_2110                                     #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    compare mem_2109 mem_2019<=mem_2010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
# в отчет                     Поверяемая точка, В;    Показание источника с нагрузкой, В;    Показание источника без нагрузки, В;    Расчетная нестабильность;    Допуск;        Вывод о соответствии;
report INSTB_U_Inagr        mem_2100                "Не измерялось в соотв. с методикой"  mem_2112                                mem_2019                    mem_2110    mem_2109
EndFunction

############ Определение нестабильности выходного напряжения при изменении тока нагрузки. ##############################################################################
#F/Результат;             Напряжение СИ от U_max, В;    Ток СИ от Imax, А;        Ток нагрузки от Imax, А;        Интервал жидания, с;    Выходной ток от I_max 2, В;            Выходной ток от I_max 3, В;    
Function INSTB_U_Inagr_3        mem_2001                mem_3001                    mem_3999                    mem_69                        mem_3997                            mem_3996
# Установка тока нагрузки    
        math mem_3998 = mem_3999 * I_max
        call TOK_NAGRUZKI
# Установка выходного напряжения источника    
    math mem_2100 = mem_2001 * U_max                                    #    Поверяемая точка
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значения напряжения в точке с нагрузкой    
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  VOLTAGE_METER mem_2101 = READ                #    Считать показания мультиметра без нагрузки
    math mem_3998 = mem_3997 * I_max
    call TOK_NAGRUZKI                                        #    Установка тока нагрузки            
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  VOLTAGE_METER mem_2102 = READ                #    Считать показания мультиметра без нагрузки
    math mem_3998 = mem_3996 * I_max
    call TOK_NAGRUZKI                                        #    Установка тока нагрузки            
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  VOLTAGE_METER mem_2103 = READ                #    Считать показания мультиметра без нагрузки
    
    math mem_2011 = mem_2102-mem_2101                         #    Вычисления отклонения между точками
    math mem_2012 = mem_2102-mem_2103                         #    Вычисления отклонения между точками
    math mem_2013 = mem_2103-mem_2101                         #    Вычисления отклонения между точками
    math mem_2019 = abs(mem_2011)                            #    Вычисления модуля отклонения
    math mem_2018 = abs(mem_2012)                            #    Вычисления модуля отклонения
    math mem_2017 = abs(mem_2013)                            #    Вычисления модуля отклонения
        
# Расчет допустимой погрешности и отклонения
    math mem_2010 = VDCnagr_coe * mem_2100 + VDCnagr_con                #    Допустимое отклонение для точки
    math mem_2110 = mem_2010 * 1000                                     #    Перевод в миливольты
    string mem_6666=GetField(mem_2110;".";1)
    string mem_7777=GetField(mem_2110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_2110= mem_6666||","||mem_7777
    string mem_2110=&'00B1' mem_2110                                     #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    compare mem_2109 (mem_2019<=mem_2010) and (mem_2018<=mem_2010) and (mem_2017<=mem_2010) description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
# в отчет                     Поверяемая точка, В;    Показание источника с нагрузкой 1, В;    Показание источника с нагрузкой 2, В;    Показание источника с нагрузкой 3, В;    Допуск;        Вывод о соответствии;
report INSTB_U_Inagr_3        mem_2100                mem_2101                                mem_2102                                mem_2103                                mem_2110    mem_2109
EndFunction


############ Определение пульсации выходного напряжения. ###############################################################################################################
#F/Результат;                 Напряжение СИ, В;                            Ток нагрузки от Imax, А;        Интервал ожидания, с;        
Function PVDC                   mem_2001                                            mem_3999                    mem_69                
# Установка выходного напряжения источника    
    math mem_2100 = mem_2001                                    #    Поверяемая точка
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Установка тока нагрузки    
    math mem_3998 = mem_3999 * I_max                                    #    Значение тока нагрузки в точке
    call TOK_NAGRUZKI
# Считывание значения пульсаций в точке        
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  PULS_METER mem_2011 = READ                                #    Считать показания мультиметра (ток)
    DriverSet LOAD_MODEL Load = Off                                        #    Выключение нагрузки
# Расчет допустимой погрешности
    math mem_2010 = VDCpuls_coe * mem_2100 + VDCpuls_con                #    Допустимое отклонение для точки
    math mem_2011 = rand(mem_2010)
    math mem_2110 = mem_2010 * 1000                                      #    Перевод в миливольты
    string mem_6666=GetField(mem_2110;".";1)
    string mem_7777=GetField(mem_2110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_2110= mem_6666||","||mem_7777
    string mem_2110 = &'00B1' mem_2110                                      #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    compare mem_2109 mem_2011<=mem_2010 description="ПУЛЬСАЦИИ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
# в отчет             Поверяемая точка, В;        Ток нагрузки, В;        Пульсации нагрузки, В;        Допуск;            Вывод о соответствии;
report PVDC            mem_2100                    mem_3998                mem_2011                    mem_2110        mem_2109
EndFunction


############ Определение абсолютной погрешности формирования силы выходного тока. ######################################################################################
#F/Результат;                    Ток СИ, А;             Напряжение СИ, В;    Ток нагрузки от Imax, А;        Интервал жидания, с;    
Function IDC                   mem_3001                mem_2001                    mem_3999                    mem_69                            
# Установка выходного тока источника    
    math mem_3100 = mem_3001                                    #    Поверяемая точка
    If Interface = true
        DriverSet Model_SI_Driver IDC = mem_3100                                                                # для удаленно управляемого источника
        else
        Message mem_3100 checksyntax  defvalue=mem_3100 "Установите на источнике выходное напряжение равное mem_3100 ,А \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значения тока в точке    
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  CURRENT_METER mem_3101 = IDC                                #     Считать показания мультиметра (ток)
# Расчет допустимой погрешности и отклонения    
    math mem_3010 = IDC_coe * mem_3100 + IDC_con                        #    Допустимое отклонение для точки
    math mem_3110 = mem_3010 * 1000                                       #    Перевод в милиамперы
    string mem_6666=GetField(mem_3110;".";1)
    string mem_7777=GetField(mem_3110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_3110= mem_6666||","||mem_7777
    string mem_3110 = &'00B1' mem_3110                                     #    Добавление знака "+/-" для отчета
    math mem_3011 = mem_3101-mem_3100                                     #    Вычисления модуля отклонения для точки
# Сравнение и вывод
    math mem_3019 = abs(mem_3011)
    compare mem_3109 mem_3019<=mem_3010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"    #     Определение нахождения значения в дропуске
# в отчет                     Поверяемая точка, А;    Показание источника, А;        Погрешность;    Допуск;            Вывод о соответствии;
report IDC                  mem_3100                mem_3101                    mem_3011        mem_3110        mem_3109

    If MeasureIDC = true
        Driverget Model_SI_Driver mem_3202 = IDC                            #    Запрос текущего значения вольтметра СИ
        math mem_3210 = IDCizm_coe * mem_3100 + IDCizm_con                    #    Пределы отклонений для точки
        math mem_3211 = mem_3202-mem_3100                                     #    Вычисления модуля отклонения
        math mem_3222 = mem_3210 * 1000                                      #    Перевод в миливольты
        string mem_6666=GetField(mem_3222;".";1)
        string mem_7777=GetField(mem_3222;".";2)
            if mem_7777 = Nan
            math mem_7777 = 0
            endif
        string mem_3222= mem_6666||","||mem_7777
        string mem_3222 = &'00B1' mem_3222                                    #    Добавление знака "+/-" для отчета
        math mem_3219 = abs(mem_3211)
        compare mem_3209 mem_3219<=mem_3210 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
    # в отчет                     Поверяемая точка, В;        Измеренное значение, В;        Погрешность, В;        Допуск, В;        Вывод о соответствии;
    report IDC_izm                   mem_3100                    mem_3202                mem_3211            mem_3222        mem_3209
    EndIf
    
EndFunction

############ Определение абсолютной погрешности формирования силы выходного тока. ######################################################################################
#F/Результат;                Ток СИ от Imax, А;    Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;        Интервал жидания, с;    
Function IDC_pred                 mem_3001                mem_2001                    mem_3999                    mem_69                            
# Установка выходного тока источника    
    math mem_3100 = mem_3001 * I_max                                     #    Поверяемая точка
    If Interface = true
        DriverSet Model_SI_Driver IDC = mem_3100                                                                # для удаленно управляемого источника
        else
        Message mem_3100 checksyntax  defvalue=mem_3100 "Установите на источнике выходное напряжение равное mem_3100 ,А \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значения тока в точке    
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  CURRENT_METER mem_3101 = IDC                                #     Считать показания мультиметра (ток)
# Расчет допустимой погрешности и отклонения
        Caseone
        when mem_3100 < pred_IDC_1
            math mem_9000 = koef_for_IDCcon_1
        when (mem_3100 >= pred_IDC_1) and (mem_2100 < pred_IDC_2)
            math mem_9000 = koef_for_IDCcon_2
        when (mem_3100 >= pred_IDC_2) and (mem_2100 <= pred_IDC_3)
            math mem_9000 = koef_for_IDCcon_3
        endcase    
    math mem_3010 = (IDC_coe * mem_3100) + (IDC_con * mem_9000)            #    Допустимое отклонение для точки
    math mem_3110 = mem_3010 * 1000                                       #    Перевод в милиамперы
    string mem_6666=GetField(mem_3110;".";1)
    string mem_7777=GetField(mem_3110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_3110= mem_6666||","||mem_7777
    string mem_3110 = &'00B1' mem_3110                                     #    Добавление знака "+/-" для отчета
    math mem_3011 = mem_3101-mem_3100                                     #    Вычисления модуля отклонения для точки
# Сравнение и вывод
    math mem_3019 = abs(mem_3011)
    compare mem_3109 mem_3019<=mem_3010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"    #     Определение нахождения значения в дропуске
# в отчет                     Поверяемая точка, А;    Показание источника, А;        Погрешность;    Допуск;            Вывод о соответствии;
report IDC                  mem_3100                mem_3101                    mem_3011        mem_3110        mem_3109

    If MeasureIDC = true
        Driverget Model_SI_Driver mem_3202 = IDC                            #    Запрос текущего значения вольтметра СИ
        math mem_3210 = IDCizm_coe * mem_3100 + IDCizm_con                    #    Пределы отклонений для точки
        math mem_3211 = mem_3202-mem_3100                                 #    Вычисления модуля отклонения
        math mem_3222 = mem_3210 * 1000                                      #    Перевод в миливольты
        string mem_6666=GetField(mem_3222;".";1)
        string mem_7777=GetField(mem_3222;".";2)
            if mem_7777 = Nan
            math mem_7777 = 0
            endif
        string mem_3222= mem_6666||","||mem_7777
        string mem_3222 = &'00B1' mem_3222                                    #    Добавление знака "+/-" для отчета
        math mem_3219 = abs(mem_3211)
        compare mem_3209 mem_3219<=mem_3210 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
    # в отчет                     Поверяемая точка, В;        Измеренное значение, В;        Погрешность, В;        Допуск, В;        Вывод о соответствии;
    report IDC_izm                   mem_3100                    mem_3202                mem_3211            mem_3222        mem_3209
    EndIf
    
EndFunction

############ Определение абсолютной погрешности формирования силы выходного тока. ######################################################################################
#F/Результат;                Ток СИ от Imax, А;    Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;        Интервал жидания, с;    
Function IDC_ust                  mem_3001                mem_2001                    mem_3999                    mem_69                            
# Установка выходного напряжения источника    
    DriverSet LOAD_MODEL Load = Off
    math mem_2100 = mem_2001 * U_max
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Установка тока нагрузки    
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    math mem_3998 = mem_3999 * I_max
    call TOK_NAGRUZKI
# Установка выходного тока источника    
    math mem_3100 = mem_3001                                             #    Поверяемая точка
    If Interface = true
        DriverSet Model_SI_Driver IDC = mem_3100                                                                # для удаленно управляемого источника
        else
        Message mem_3100 checksyntax  defvalue=mem_3100 "Установите на источнике выходное напряжение равное mem_3100 ,А \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значения тока в точке    
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  CURRENT_METER mem_3101 = IDC                                #     Считать показания мультиметра (ток)
# Расчет допустимой погрешности и отклонения    
    math mem_3010 = IDC_coe * mem_3100 + IDC_con                        #    Допустимое отклонение для точки
    math mem_3110 = mem_3010 * 1000                                       #    Перевод в милиамперы
    string mem_6666=GetField(mem_3110;".";1)
    string mem_7777=GetField(mem_3110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_3110= mem_6666||","||mem_7777
    string mem_3110 = &'00B1' mem_3110                                     #    Добавление знака "+/-" для отчета
    math mem_3011 = mem_3101-mem_3100                                     #    Вычисления модуля отклонения для точки
# Сравнение и вывод
    math mem_3019 = abs(mem_3011)
    compare mem_3109 mem_3019<=mem_3010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"    #     Определение нахождения значения в дропуске
# в отчет                     Поверяемая точка, А;    Показание источника, А;        Погрешность;    Допуск;            Вывод о соответствии;
report IDC                  mem_3100                mem_3101                    mem_3011        mem_3110        mem_3109

    If MeasureIDC = true
        Driverget Model_SI_Driver mem_3202 = IDC                            #    Запрос текущего значения вольтметра СИ
        math mem_3210 = IDCizm_coe * mem_3100 + IDCizm_con                    #    Пределы отклонений для точки
        math mem_3211 = mem_3202-mem_3100                                 #    Вычисления модуля отклонения
        math mem_3222 = mem_3210 * 1000                                      #    Перевод в миливольты
        string mem_6666=GetField(mem_3222;".";1)
        string mem_7777=GetField(mem_3222;".";2)
            if mem_7777 = Nan
            math mem_7777 = 0
            endif
        string mem_3222= mem_6666||","||mem_7777
        string mem_3222 = &'00B1' mem_3222                                    #    Добавление знака "+/-" для отчета
        math mem_3219 = abs(mem_3211)
        compare mem_3209 mem_3219<=mem_3210 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"     #    Определение нахождения значения в дропуске
    # в отчет                     Поверяемая точка, В;        Измеренное значение, В;        Погрешность, В;        Допуск, В;        Вывод о соответствии;
    report IDC_izm                   mem_3100                    mem_3202                mem_3211            mem_3222        mem_3209
    EndIf
    
EndFunction


############ Определение нестабильности выходного тока при изменении напряжения питающей сети. ######################################################################### 
#F/Результат;                   Ток СИ, А;           Напряжение СИ, В;     Ток нагрузки от Imax, А;        Интервал жидания, с;    Напряжение питания от U_pit, В;        
Function INSTB_I_Upit            mem_3001                mem_2001                    mem_3999                    mem_69                        mem_2140                             
# Установка выходного напряжения источника    
    DriverSet LOAD_MODEL Load = Off
    math mem_2100 = mem_2001
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Установка тока нагрузки    
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    math mem_3998 = mem_3999 * I_max
    call TOK_NAGRUZKI
# Установка выходного тока источника    
    math mem_3100 = mem_3001                                    
    If Interface = true
        DriverSet Model_SI_Driver IDC = mem_3100                                                                # для удаленно управляемого источника
        else
        Message mem_3100 checksyntax  defvalue=mem_3100 "Установите на источнике выходное напряжение равное mem_3100 ,А \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Установка входного напряжения источника
    DriverSet POWER_SUPPLY V = U_pit
# Считывание значения тока в опорной точке
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  CURRENT_METER mem_3101 = IDC                                #     Считать показания мультиметра (ток)
# Плавная подстройка напряжения входного питания    
    call NASTROIKA_PITANIA
# Считывание значение тока при измененном напряжении входного питания    
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  CURRENT_METER mem_3102 = IDC                                #     Считать показания мультиметра (ток)
# Расчет допустимой погрешности и отклонения    
    math mem_3010 = IDCpit_coe * mem_3100 + IDCpit_con                    #    Допустимое отклонение для точки
    math mem_3110 = mem_3010 * 1000                                     #    Перевод в милиамперы
    string mem_6666=GetField(mem_3110;".";1)
    string mem_7777=GetField(mem_3110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_3110= mem_6666||","||mem_7777
    string mem_3110 = &'00B1' mem_3110                                    #    Добавление знака "+/-" для отчета
    math mem_3011 = abs(mem_3102-mem_3101)                                     #    Вычисления модуля отклонения между точками
# Сравнение и вывод
    compare mem_3109 mem_3011<=mem_3010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"    #     Определение нахождения значения в дропуске
# в отчет                     Напряжение питания, В;    Поверяемая точка, А;    Измерение 1, В;        Измерение 2, В;        Нестабильность;        Допуск;                Вывод о соответствии;
report INSTB_I_Upit            mem_2141                    mem_3100            mem_3101            mem_3102            mem_3011        mem_3110            mem_3109
EndFunction

############ Определение нестабильности выходного тока при изменении напряжения питающей сети. ######################################################################### 
#F/Результат;                Ток СИ от Imax, А;    Напряжение СИ от U_max, В;     Ток нагрузки от Imax, А;        Интервал жидания, с;    Напряжение питания от U_pit, В;        Количество измерений;
Function INSTB_I_Upit_povt        mem_3001                mem_2001                    mem_3999                    mem_69                        mem_2140                            mem_99
# Установка выходного напряжения источника    
    DriverSet LOAD_MODEL Load = Off
    math mem_2100 = mem_2001 * U_max
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Установка тока нагрузки    
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    math mem_3998 = mem_3999 * I_max
    call TOK_NAGRUZKI
# Установка выходного тока источника    
    math mem_3100 = mem_3001 * I_max                                     
    If Interface = true
        DriverSet Model_SI_Driver IDC = mem_3100                                                                # для удаленно управляемого источника
        else
        Message mem_3100 checksyntax  defvalue=mem_3100 "Установите на источнике выходное напряжение равное mem_3100 ,А \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Установка входного напряжения источника
    DriverSet POWER_SUPPLY V = U_pit
# Считывание значения тока в опорной точке
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  CURRENT_METER mem_3101 = IDC                                #     Считать показания мультиметра (ток)
# Плавная подстройка напряжения входного питания    
    call NASTROIKA_PITANIA
# Считывание значение тока при измененном напряжении входного питания    
    math mem_3020=Nan           # очистка ячейки памяти
    Repeat mem_99                                                        #    Измеряется n раз
        message wait=mem_69 "Ожидайте выполнения измерения"    
        Driverget  CURRENT_METER mem_3102 = IDC                            #     Считать показания мультиметра (ток)
        math ++mem_3020=(mem_3102^2)                                    #    Рассчитывается Uср^2
    EndRepeat
# Расчет допустимой погрешности и отклонения    
    math mem_3012 = (sqrt(rms(mem_3020)))                                #    Расчет значения нестабильности, мВ dU = sqrt((Uср^2)/n)
    math mem_3010 = IDCpit_coe * mem_3100 + IDCpit_con                    #    Допустимое отклонение для точки
    math mem_3110 = mem_3010 * 1000                                     #    Перевод в милиамперы
    string mem_6666=GetField(mem_3110;".";1)
    string mem_7777=GetField(mem_3110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_3110= mem_6666||","||mem_7777
    string mem_3110 = &'00B1' mem_3110                                    #    Добавление знака "+/-" для отчета
    math mem_3011 = abs(mem_3012-mem_3101)                                 #    Вычисления модуля отклонения между точками
# Сравнение и вывод
    compare mem_3109 mem_3011<=mem_3010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"    #     Определение нахождения значения в дропуске
# в отчет                     Напряжение питания, В;    Поверяемая точка, А;    Измерение 1, В;        Измерение 2, В;        Нестабильность;        Допуск;                Вывод о соответствии;
report INSTB_I_Upit            mem_2141                    mem_3100            mem_3101            mem_3102            mem_3011        mem_3110            mem_3109
EndFunction

############ Определение нестабильности выходного тока при изменении напряжения питающей сети. ######################################################################### 
#F/Результат;                Ток СИ от Imax, А;    Напряжение СИ от U_max, В;     Ток нагрузки от Imax, А;        Интервал жидания, с;    Напряжение питания от U_pit, В;        Количество измерений;
Function INSTB_I_Upit_povt_nom    mem_3001                mem_2001                    mem_3999                    mem_69                        mem_2140                            mem_99
# Установка выходного напряжения источника    
    DriverSet LOAD_MODEL Load = Off
    math mem_2100 = mem_2001 * U_max
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Установка тока нагрузки    
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    math mem_3998 = mem_3999 * I_max
    call TOK_NAGRUZKI
# Установка выходного тока источника    
    math mem_3100 = mem_3001 * I_max                                     
    If Interface = true
        DriverSet Model_SI_Driver IDC = mem_3100                                                                # для удаленно управляемого источника
        else
        Message mem_3100 checksyntax  defvalue=mem_3100 "Установите на источнике выходное напряжение равное mem_3100 ,А \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Установка выходного тока источника    
    math mem_3100 = mem_3001 * I_max                                     
    If Interface = true
        DriverSet Model_SI_Driver IDC = mem_3100                                                                # для удаленно управляемого источника
        else
        Message mem_3100 checksyntax  defvalue=mem_3100 "Установите на источнике выходное напряжение равное mem_3100 ,А \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Плавная подстройка напряжения входного питания    
    call NASTROIKA_PITANIA
# Считывание значение тока при измененном напряжении входного питания    
    math mem_3020=Nan           # очистка ячейки памяти
    Repeat mem_99                                                        #    Измеряется n раз
        message wait=mem_69 "Ожидайте выполнения измерения"    
        Driverget  CURRENT_METER mem_3102 = IDC                            #     Считать показания мультиметра (ток)
        math ++mem_3020=(mem_3102^2)                                    #    Рассчитывается Uср^2
    EndRepeat
# Расчет допустимой погрешности и отклонения    
    math mem_3012 = (sqrt(rms(mem_3020)))                                #    Расчет значения нестабильности, мВ dU = sqrt((Uср^2)/n)
    math mem_3010 = IDCpit_coe * mem_3100 + IDCpit_con                    #    Допустимое отклонение для точки
    math mem_3110 = mem_3010 * 1000                                     #    Перевод в милиамперы
    string mem_6666=GetField(mem_3110;".";1)
    string mem_7777=GetField(mem_3110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_3110= mem_6666||","||mem_7777
    string mem_3110 = &'00B1' mem_3110                                    #    Добавление знака "+/-" для отчета
    math mem_3011 = abs(mem_3012-mem_3100)                                 #    Вычисления модуля отклонения между точками
# Сравнение и вывод
    compare mem_3109 mem_3011<=mem_3010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"    #     Определение нахождения значения в дропуске
# в отчет                     Напряжение питания, В;    Поверяемая точка, А;    Измерение 1, В;        Измерение 2, В;        Нестабильность;        Допуск;                Вывод о соответствии;
report INSTB_I_Upit            mem_2141                    mem_3100            mem_3101            mem_3102                mem_3011        mem_3110            mem_3109
EndFunction


############ Определение нестабильности выходного тока при изменении выходного напряжения. #############################################################################
#F/Результат;                    Ток СИ, А;                Напряжение СИ, В;     Ток нагрузки от Imax, А;        Интервал жидания, с;    Выходное напряжение от U_max 2, В;
Function INSTB_I_Unagr           mem_3001                mem_2001                       mem_3999                    mem_69                        mem_2003                           
# Установка тока нагрузки    
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    math mem_3998 = mem_3999 * I_max
    call TOK_NAGRUZKI
# Установка выходного тока источника    
    math mem_3100 = mem_3001                                    
    If Interface = true
        DriverSet Model_SI_Driver IDC = mem_3100                                                                    # для удаленно управляемого источника
        else
        message "На поверяемом источнике установите регулятором выходного тока значение mem_3100 А"    # для источника без интерфейса
    endif
# Установка выходного напряжения источника    
    DriverSet LOAD_MODEL Load = Off
    math mem_2100 = mem_2001
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значения тока в точке с нагрузкой
    DriverSet LOAD_MODEL Load = On
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  CURRENT_METER mem_3101 = IDC                                #    Считать показания мультиметра с нагрузкой (ток)
        DriverSet LOAD_MODEL Load = Off
        if mem_2001 != mem_2003
        # Определение значения напряжения в нагрузке    
        math mem_2002 = mem_2003                                    #    Расчет значения напряжения в поверяемой точке
            If Interface = true
                DriverSet Model_SI_Driver VDC = mem_2002                                                                                       # для удаленно управляемого источника
            else
                Message mem_2002 checksyntax  defvalue=mem_2002 "Установите на источнике выходное напряжение равное mem_2002 ,В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
            endif
        # Считывание значения тока в точке без нагрузки    
        DriverSet LOAD_MODEL Load = On
        message wait=mem_69 "Ожидайте выполнения измерения"
        Driverget  CURRENT_METER mem_3102 = IDC                                #    Считать показания мультиметра без нагрузки (ток)
        math mem_3011 = mem_3101-mem_3102                                 #    Вычисления модуля отклонения между точками
        math mem_3019 = abs(mem_3011)
        else
        math mem_3011 = mem_3101-mem_3100                                 #    Вычисления модуля отклонения между точками
        math mem_3019 = abs(mem_3011)                                    #    Вычисления модуля отклонения между точками
        string mem_3102 = "не измерялось в соотв. с методикой"
        endif
# Расчет допустимой погрешности и отклонения    
    math mem_3010 = IDCnagr_coe * mem_3100 + IDCnagr_con                #    Допустимое отклонение для точки
    math mem_3110 = mem_3010 * 1000                                       #    Перевод в милиамперы
    string mem_6666=GetField(mem_3110;".";1)
    string mem_7777=GetField(mem_3110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_3110= mem_6666||","||mem_7777
    string mem_3110 = &'00B1' mem_3110                                    #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    compare mem_3109 mem_3019<=mem_3010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"    #     Определение нахождения значения в дропуске
# в отчет                     Значение тока в точке, А;    Показание источника с нагрузкой, А;        Показание источника без нагрузки, А;    Нестабильность, А;    Допуск, А;    Вывод о соответствии;
report INSTB_I_Unagr        mem_3100                    mem_3101                                mem_3102                                mem_3011            mem_3110    mem_3109
EndFunction

############ Определение нестабильности выходного тока при изменении выходного напряжения. #############################################################################
#F/Результат;                Ток СИ от Imax, А;    Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;        Интервал жидания, с;    Выходное напряжение от U_max 2, В;    Количество измерений;
Function INSTB_I_Unagr_povt    mem_3001                mem_2001                       mem_3999                    mem_69                        mem_2003                            mem_99            
# Установка тока нагрузки    
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    math mem_3998 = mem_3999 * I_max
    call TOK_NAGRUZKI
# Установка выходного тока источника    
    math mem_3100 = mem_3001 * I_max                                    
    If Interface = true
        DriverSet Model_SI_Driver IDC = mem_3100                                                                    # для удаленно управляемого источника
        else
        message "На поверяемом источнике установите регулятором выходного тока значение mem_3100 А"    # для источника без интерфейса
    endif
# Установка выходного напряжения источника    
    DriverSet LOAD_MODEL Load = Off
    math mem_2100 = mem_2001 * U_max
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значения тока в точке с нагрузкой
    DriverSet LOAD_MODEL Load = On
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  CURRENT_METER mem_3101 = IDC                                #    Считать показания мультиметра с нагрузкой (ток)
    DriverSet LOAD_MODEL Load = Off
# Определение значения напряжения в нагрузке    
    math mem_2002 = U_max * mem_2003                                    #    Расчет значения напряжения в поверяемой точке
        If Interface = true
            DriverSet Model_SI_Driver VDC = mem_2002                                                                                       # для удаленно управляемого источника
        else
            Message mem_2002 checksyntax  defvalue=mem_2002 "Установите на источнике выходное напряжение равное mem_2002 ,В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
        endif
    # Считывание значения тока в точке без нагрузки    
    DriverSet LOAD_MODEL Load = On
    math mem_3020=Nan           # очистка ячейки памяти
    Repeat mem_99                                                        #    Измеряется n раз
        message wait=mem_69 "Ожидайте выполнения измерения"
        Driverget  CURRENT_METER mem_3102 = IDC                                #    Считать показания мультиметра без нагрузки (ток)
        math ++mem_3020=(mem_3102^2)                                    #    Рассчитывается Uср^2
    EndRepeat
    DriverSet LOAD_MODEL Load = Off                                        #    Выключение нагрузки
# Расчет допустимой погрешности и отклонения    
    math mem_3112 = (sqrt(rms(mem_3020)))                                #    Расчет значения нестабильности, мВ dU = sqrt((Uср^2)/n)
    math mem_3011 = abs(mem_3101-mem_3112)                                 #    Вычисления модуля отклонения между точками
    math mem_3010 = IDCnagr_coe * mem_3100 + IDCnagr_con                #    Допустимое отклонение для точки
    math mem_3110 = mem_3010 * 1000                                       #    Перевод в милиамперы
    string mem_6666=GetField(mem_3110;".";1)
    string mem_7777=GetField(mem_3110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_3110= mem_6666||","||mem_7777
    string mem_3110 = &'00B1' mem_3110                                    #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    compare mem_3109 mem_3011<=mem_3010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"    #     Определение нахождения значения в дропуске
# в отчет                     Значение тока в точке, А;    Показание источника с нагрузкой, А;        Показание источника без нагрузки, А;    Нестабильность, А;    Допуск, А;    Вывод о соответствии;
report INSTB_I_Unagr        mem_3100                    mem_3101                                mem_3112                                mem_3011            mem_3110    mem_3109
EndFunction

############ Определение нестабильности выходного тока при изменении выходного напряжения. #############################################################################
#F/Результат;                Ток СИ от Imax, А;    Напряжение СИ от U_max, В;    Ток нагрузки от Imax, А;        Интервал жидания, с;    Выходное напряжение от U_max 2, В;    Количество измерений;
Function INSTB_I_Unagr_povt_nom mem_3001                mem_2001                       mem_3999                    mem_69                        mem_2003                            mem_99            
# Установка тока нагрузки    
    DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
    math mem_3998 = mem_3999 * I_max
    call TOK_NAGRUZKI
# Установка выходного тока источника    
    math mem_3100 = mem_3001 * I_max                                    
    If Interface = true
        DriverSet Model_SI_Driver IDC = mem_3100                                                                    # для удаленно управляемого источника
        else
        message "На поверяемом источнике установите регулятором выходного тока значение mem_3100 А"    # для источника без интерфейса
    endif
# Установка выходного напряжения источника    
    DriverSet LOAD_MODEL Load = Off
    math mem_2100 = mem_2001 * U_max
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Установка выходного тока источника    
    DriverSet LOAD_MODEL Load = On
    math mem_3100 = mem_3001 * I_max                                    
    If Interface = true
        DriverSet Model_SI_Driver IDC = mem_3100                                                                    # для удаленно управляемого источника
        else
        Message mem_3100 checksyntax  defvalue=mem_3100 "Установите на источнике выходной ток равный mem_3100, А \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
# Считывание значения тока в точке с нагрузкой
    message wait=mem_69 "Ожидайте выполнения измерения"
    math mem_3020=Nan           # очистка ячейки памяти
    Repeat mem_99                                                        #    Измеряется n раз
        message wait=mem_69 "Ожидайте выполнения измерения"
        Driverget  CURRENT_METER mem_3102 = IDC                                #    Считать показания мультиметра без нагрузки (ток)
        math ++mem_3020=(mem_3102^2)                                    #    Рассчитывается Uср^2
    EndRepeat
    DriverSet LOAD_MODEL Load = Off                                        #    Выключение нагрузки
# Расчет допустимой погрешности и отклонения    
    math mem_3112 = (sqrt(rms(mem_3020)))                                #    Расчет значения нестабильности, мВ dU = sqrt((Uср^2)/n)
    math mem_3011 = abs(mem_3100-mem_3112)                                 #    Вычисления модуля отклонения между точками
    math mem_3010 = IDCnagr_coe * mem_3100 + IDCnagr_con                #    Допустимое отклонение для точки
    math mem_3110 = mem_3010 * 1000                                       #    Перевод в милиамперы
    string mem_6666=GetField(mem_3110;".";1)
    string mem_7777=GetField(mem_3110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_3110= mem_6666||","||mem_7777
    string mem_3110 = &'00B1' mem_3110                                    #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    compare mem_3109 mem_3011<=mem_3010 description="ОТКЛОНЕНИЕ НЕ В ДОПУСКЕ!"    #     Определение нахождения значения в дропуске
# в отчет                     Значение тока в точке, А;    Показание источника с нагрузкой, А;        Показание источника без нагрузки, А;    Нестабильность, А;    Допуск, А;    Вывод о соответствии;
report INSTB_I_Unagr        mem_3100                    mem_3112                                "Не измерялось в соотв. с методикой"    mem_3011            mem_3110    mem_3109
EndFunction


############ Определение пульсации выходного тока. #####################################################################################################################
#F/Результат;                    Ток СИ, А;            Напряжение СИ, В;    Ток нагрузки от Imax, А;        Интервал жидания, с;    
Function PIDC                   mem_3001                mem_2001                    mem_3999                    mem_69                    
# Установка выходного напряжения источника    
    DriverSet    LOAD_MODEL             Load = Off
    math mem_2100 = mem_2001
    If Interface = true
        DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
        else
        Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100 ,В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
    endif
    DriverSet    LOAD_MODEL             Load = On
# Считывание значения напряжения в точке
    message wait=mem_69 "Ожидайте выполнения измерения"
    Driverget  PULS_METER mem_3101 = READ                                #    Считать показания мультиметра (ток)
# Расчет допустимой погрешности     
    math mem_3010 = IDCpuls_coe * mem_3100 + IDCpuls_con                #    Допустимое отклонение для точки
    math mem_3101 = rand(mem_3010)
    math mem_3110 = mem_3010 * 1000                                       #    Перевод в милиамперы
    string mem_6666=GetField(mem_3110;".";1)
    string mem_7777=GetField(mem_3110;".";2)
        if mem_7777 = Nan
        math mem_7777 = 0
        endif
    string mem_3110= mem_6666||","||mem_7777
    string mem_3110 = &'00B1' mem_3110                                    #    Добавление знака "+/-" для отчета
# Сравнение и вывод
    compare mem_3109 mem_3101<=mem_3010 description="ПУЛЬСАЦИИ НЕ В ДОПУСКЕ!"    #     Определение нахождения значения в дропуске
# в отчет                     Поверяемая точка, А;    Выходное напряжение, В;    Пульсации;        Допуск;            Вывод о соответствии;
report PIDC                    mem_3100                mem_2100                mem_3101        mem_3110        mem_3109
EndFunction


#########################################################################################################################################################################
#######   I   N   T   E   R   R   U   P   T   ##########################################################################################################################
#########################################################################################################################################################################


#########################################################################################################################################################################
#############        Начальные установки для определения основной погрешности установки выходного напряжения постоянного тока        #####################################

Interrupt before VDC  first_in_script
        message "Подключите поверяемый источник питания для выполнения процедуры поверки в автоматическом режиме"
    # Установка тока нагрузки    
        if mem_3999 = 0
            DriverSet    LOAD_MODEL Load = Off
            math mem_3998 = mem_3999
        Else
            DriverSet    LOAD_MODEL Load = On                                    #    Включение нагрузки
            math mem_3998 = mem_3999 * I_max
            call TOK_NAGRUZKI
        Endif
    # Установка выходного тока источника    
        math mem_3100 = mem_3001
        If Interface = true
            DriverSet Model_SI_Driver IDC = mem_3100                                                                                    # для удаленно управляемого источника
            else
            message "На поверяемом источнике установите регулятором выходного тока максимальное значение"        # для источника без интерфейса
        endif
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Перевод вольтметра в режим VDC
        DriverSet VOLTAGE_METER RESET
        DriverSet VOLTAGE_METER Func = VDC
EndInterrupt

Interrupt before VDC_pred  first_in_script
        message "Подключите поверяемый источник питания для выполнения процедуры поверки в автоматическом режиме"
    # Установка тока нагрузки    
        if mem_3999 = 0
            DriverSet    LOAD_MODEL Load = Off
            math mem_3998 = mem_3999
        Else
            DriverSet    LOAD_MODEL Load = On                                    #    Включение нагрузки
            math mem_3998 = mem_3999 * I_max
            call TOK_NAGRUZKI
        Endif
    # Установка выходного тока источника    
        math mem_3100 = mem_3001 * I_max
        If Interface = true
            DriverSet Model_SI_Driver IDC = mem_3100                                                                                    # для удаленно управляемого источника
            else
            message "На поверяемом источнике установите регулятором выходного тока максимальное значение"        # для источника без интерфейса
        endif
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Перевод вольтметра в режим VDC
        DriverSet VOLTAGE_METER RESET
        DriverSet VOLTAGE_METER Func = VDC
EndInterrupt

Interrupt before VDC_ust first_in_script
        message "Подключите поверяемый источник питания для выполнения процедуры поверки в автоматическом режиме"
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Перевод вольтметра в режим VDC
        DriverSet VOLTAGE_METER RESET
        DriverSet VOLTAGE_METER Func = VDC
EndInterrupt

#########################################################################################################################################################################
#############        Начальные установки для определения основной нестабильности выходного напряжения при изменении напряжения питания        #################################

Interrupt before INSTB_U_Upit first_in_script
    #Перевод вольтметра в режим VDC
        DriverSet VOLTAGE_METER RESET
        DriverSet VOLTAGE_METER Func = VDC
 

    # Установка выходного тока источника    
        math mem_3100 = mem_3001
        If Interface = true
            DriverSet Model_SI_Driver IDC = mem_3100                                                                                    # для удаленно управляемого источника
            else
            message "На поверяемом источнике установите регулятором выходного тока максимальное значение"        # для источника без интерфейса
        endif
EndInterrupt

Interrupt before INSTB_U_Upit_povt first_in_script
    #Перевод вольтметра в режим VDC
        DriverSet VOLTAGE_METER RESET
        DriverSet VOLTAGE_METER Func = VDC
    #Установка тока нагрузки    
        DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
        math mem_3998 = mem_3999 * I_max
        call TOK_NAGRUZKI
EndInterrupt

Interrupt before INSTB_U_Upit_povt_nom first_in_script
    #Перевод вольтметра в режим VDC
        DriverSet VOLTAGE_METER RESET
        DriverSet VOLTAGE_METER Func = VDC
EndInterrupt

#########################################################################################################################################################################
#############        Начальные установки для определения основной нестабильности выходного напряжения при изменении тока нагрузки        #################################

Interrupt before INSTB_U_Inagr first_in_script
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    #Перевод вольтметра в режим VDC
        DriverSet VOLTAGE_METER RESET
        DriverSet VOLTAGE_METER Func = VDC
EndInterrupt

Interrupt before INSTB_U_Inagr_povt first_in_script
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    #Перевод вольтметра в режим VDC
        DriverSet VOLTAGE_METER RESET
        DriverSet VOLTAGE_METER Func = VDC
EndInterrupt

Interrupt before INSTB_U_Inagr_povt_nom first_in_script
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    #Перевод вольтметра в режим VDC
        DriverSet VOLTAGE_METER RESET
        DriverSet VOLTAGE_METER Func = VDC
EndInterrupt

Interrupt before INSTB_U_Inagr_pred first_in_script
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    #Перевод вольтметра в режим VDC
        DriverSet VOLTAGE_METER RESET
        DriverSet VOLTAGE_METER Func = VDC
EndInterrupt

Interrupt before INSTB_U_Inagr_3 first_in_script
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    #Перевод вольтметра в режим VDC
        DriverSet VOLTAGE_METER RESET
        DriverSet VOLTAGE_METER Func = VDC
EndInterrupt

#########################################################################################################################################################################
####################################        Начальные установки для определения пульсаций выходного напряжения ########################################################

Interrupt before PVDC first_in_script
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    #Перевод вольтметра в режим VDC
        DriverSet VOLTAGE_METER RESET
        DriverSet VOLTAGE_METER Func = VDC
        
        DriverSet PULS_METER   RESET
EndInterrupt


#########################################################################################################################################################################
####################################        Начальные установки для определения основной погрешности установки выходного тока ########################################################

Interrupt before IDC first_in_script
    # Перевод нагрузки в режим СC
        DriverSet LOAD_MODEL MODE = CC
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Установка диапазона для амперметра
        If I_max <= 30
            DriverSet CURRENT_METER Range_IDC = 30                            #    установка предела измерений амперметра 30А
        Else
            DriverSet CURRENT_METER Range_IDC = 300                            #    установка предела измерений амперметра 300А
        Endif
    # Установка выходного напряжения источника    
        DriverSet LOAD_MODEL Load = Off
        math mem_2100 = mem_2001
        If Interface = true
            DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
            else
            Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
        endif
    # Установка тока нагрузки    
        DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
        math mem_3998 = mem_3999 * I_max
        call TOK_NAGRUZKI
EndInterrupt

Interrupt before IDC_pred first_in_script
    # Перевод нагрузки в режим СC
        DriverSet LOAD_MODEL MODE = CC
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Установка диапазона для амперметра
        If I_max <= 30
            DriverSet CURRENT_METER Range_IDC = 30                            #    установка предела измерений амперметра 30А
        Else
            DriverSet CURRENT_METER Range_IDC = 300                            #    установка предела измерений амперметра 300А
        Endif
    # Установка выходного напряжения источника    
        DriverSet LOAD_MODEL Load = Off
        math mem_2100 = mem_2001 * U_max
        If Interface = true
            DriverSet Model_SI_Driver VDC = mem_2100                                                                                       # для удаленно управляемого источника
            else
            Message mem_2100 checksyntax  defvalue=mem_2100 "Установите на источнике выходное напряжение равное mem_2100, В \n если это не удается, введите наиболее близкое значение, которое можете установить"        # для источника без интерфейса
        endif
    # Установка тока нагрузки    
        DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
        math mem_3998 = mem_3999 * I_max
        call TOK_NAGRUZKI
EndInterrupt

Interrupt before IDC_ust first_in_script
    # Перевод нагрузки в режим СC
        DriverSet LOAD_MODEL MODE = CC
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Установка диапазона для амперметра
        If I_max <= 30
            DriverSet CURRENT_METER Range_IDC = 30                            #    установка предела измерений амперметра 30А
        Else
            DriverSet CURRENT_METER Range_IDC = 300                            #    установка предела измерений амперметра 300А
        Endif
EndInterrupt

#########################################################################################################################################################################
#############        Начальные установки для определения основной нестабильности выходного тока при изменении напряжения питания        #################################

Interrupt before INSTB_I_Upit first_in_script
    # Перевод нагрузки в режим СC
        DriverSet LOAD_MODEL MODE = CC
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Установка диапазона для амперметра
        If I_max <= 30
            DriverSet CURRENT_METER Range_IDC = 30                            #    установка предела измерений амперметра 30А
        Else
            DriverSet CURRENT_METER Range_IDC = 300                            #    установка предела измерений амперметра 300А
        Endif
EndInterrupt


Interrupt before INSTB_I_Upit_povt first_in_script
    # Перевод нагрузки в режим СC
        DriverSet LOAD_MODEL MODE = CC
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Установка диапазона для амперметра
        If I_max <= 30
            DriverSet CURRENT_METER Range_IDC = 30                            #    установка предела измерений амперметра 30А
        Else
            DriverSet CURRENT_METER Range_IDC = 300                            #    установка предела измерений амперметра 300А
        Endif
EndInterrupt

Interrupt before INSTB_I_Upit_povt_nom first_in_script
    # Перевод нагрузки в режим СC
        DriverSet LOAD_MODEL MODE = CC
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Установка диапазона для амперметра
        If I_max <= 30
            DriverSet CURRENT_METER Range_IDC = 30                            #    установка предела измерений амперметра 30А
        Else
            DriverSet CURRENT_METER Range_IDC = 300                            #    установка предела измерений амперметра 300А
        Endif
EndInterrupt

#########################################################################################################################################################################
#############        Начальные установки для определения основной нестабильности выходного тока при изменении напряжения нагрузки        #################################

Interrupt before INSTB_I_Unagr first_in_script
    # Перевод нагрузки в режим СC
        DriverSet LOAD_MODEL MODE = CC
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Установка диапазона для амперметра
        If I_max <= 30
            DriverSet CURRENT_METER Range_IDC = 30                            #    установка предела измерений амперметра 30А
        Else
            DriverSet CURRENT_METER Range_IDC = 300                            #    установка предела измерений амперметра 300А
        Endif
EndInterrupt


Interrupt before INSTB_I_Unagr_povt first_in_script
    # Перевод нагрузки в режим СC
        DriverSet LOAD_MODEL MODE = CC
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Установка диапазона для амперметра
        If I_max <= 30
            DriverSet CURRENT_METER Range_IDC = 30                            #    установка предела измерений амперметра 30А
        Else
            DriverSet CURRENT_METER Range_IDC = 300                            #    установка предела измерений амперметра 300А
        Endif
    # Установка тока нагрузки    
        DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
        math mem_3998 = mem_3999 * I_max
        call TOK_NAGRUZKI
    # Установка выходного тока источника    
        math mem_3100 = mem_3001 * I_max                                    
        If Interface = true
            DriverSet Model_SI_Driver IDC = mem_3100                                                                    # для удаленно управляемого источника
            else
            message "На поверяемом источнике установите регулятором выходного тока значение mem_3100 А"    # для источника без интерфейса
        endif
EndInterrupt

Interrupt before INSTB_I_Unagr_povt_nom first_in_script
    # Перевод нагрузки в режим СC
        DriverSet LOAD_MODEL MODE = CC
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Установка диапазона для амперметра
        If I_max <= 30
            DriverSet CURRENT_METER Range_IDC = 30                            #    установка предела измерений амперметра 30А
        Else
            DriverSet CURRENT_METER Range_IDC = 300                            #    установка предела измерений амперметра 300А
        Endif
    # Установка тока нагрузки    
        DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
        math mem_3998 = mem_3999 * I_max
        call TOK_NAGRUZKI
EndInterrupt

#########################################################################################################################################################################
####################################        Начальные установки для определения пульсаций выходного тока ########################################################

Interrupt before PIDC first_in_script
    # Перевод нагрузки в режим СC
        DriverSet LOAD_MODEL MODE = CC
    # Установить на источнике переменного напряжения значение стандартного напряжения питания (на случай ранее проведенных изменений)
        DriverSet POWER_SUPPLY V = U_pit
    # Установка диапазона для амперметра
        If I_max <= 30
            DriverSet CURRENT_METER Range_IDC = 30                            #    установка предела измерений амперметра 30А
        Else
            DriverSet CURRENT_METER Range_IDC = 300                            #    установка предела измерений амперметра 300А
        Endif

        DriverSet PULS_METER   RESET
    # Установка тока нагрузки    
        DriverSet LOAD_MODEL Load = On                                        #    Включение нагрузки
        math mem_3998 = mem_3999 * I_max
        call TOK_NAGRUZKI
    # Установка выходного тока источника    
        math mem_3100 = mem_3001                                    
        If Interface = true
            DriverSet Model_SI_Driver IDC = mem_3100                                                    # для удаленно управляемого источника
            else
            message "На поверяемом источнике установите регулятором выходного тока значение mem_3100 А"    # для источника без интерфейса
        endif
EndInterrupt


#######################################################################################################################################################################################
##########   M   E   M   ###########################################################################################################################################################
#######################################################################################################################################################################################

#mem_1xxx - данные для заполнения таблиц по условиям проведения поверки + номера пунктов "Внешнего осмотра" и "Опробования"
#mem_2xxx - данные для заполнения таблиц по напряжению
#mem_3xxx - данные для заполнения таблиц по току
#mem_4xxx - данные для заполнения таблиц по сопротивлению
#mem_х1xx - данные для заполнения таблиц в отчет


